[{"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/index.js":"1","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/App.js":"2","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/context/categories_context.js":"3","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/context/courses_context.js":"4","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/context/users_context.js":"5","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/HomePage.js":"6","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/SignUpPage.js":"7","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/Navbar.js":"8","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/LoginPage.js":"9","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/Footer.js":"10","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/AddCoursePage.js":"11","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/MyProfilePage.js":"12","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/SingleCoursePage.js":"13","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/EditCoursePage.js":"14","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/UserPage.js":"15","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/CoursesPage.js":"16","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/EnrolledCoursePage.js":"17","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/Hero.js":"18","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/ErrorModal.js":"19","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/MyProfileCoursesList.js":"20","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/TokenExpiredModal.js":"21","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/MultiStepProgressBar.js":"22","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/PageTwo.js":"23","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/EnrolledCoursesList.js":"24","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/StarRating.js":"25","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/CourseList.js":"26","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/PageThree.js":"27","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/auth.js":"28","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/SuccessModal.js":"29","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/UserCourseList.js":"30","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/Course.js":"31","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/PageOne.js":"32","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/CategoriesList.js":"33","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/utils/images.js":"34","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/MyProfileTabs.js":"35","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/EnrolledTabs.js":"36","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/Tabs.js":"37","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/Category.js":"38","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/UserTabs.js":"39","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/MyProfilePagination.js":"40","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/EnrolledPagination.js":"41","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/Pagination.js":"42","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/EnrolledCourse.js":"43"},{"size":551,"mtime":1721499317257,"results":"44","hashOfConfig":"45"},{"size":2182,"mtime":1721499317240,"results":"46","hashOfConfig":"45"},{"size":541,"mtime":1721499317257,"results":"47","hashOfConfig":"45"},{"size":506,"mtime":1721499317257,"results":"48","hashOfConfig":"45"},{"size":482,"mtime":1721499317257,"results":"49","hashOfConfig":"45"},{"size":368,"mtime":1721499317258,"results":"50","hashOfConfig":"45"},{"size":15090,"mtime":1721527432629,"results":"51","hashOfConfig":"45"},{"size":2627,"mtime":1722414632974,"results":"52","hashOfConfig":"45"},{"size":8480,"mtime":1721499317258,"results":"53","hashOfConfig":"45"},{"size":5199,"mtime":1721523304702,"results":"54","hashOfConfig":"45"},{"size":1675,"mtime":1721499317257,"results":"55","hashOfConfig":"45"},{"size":22502,"mtime":1721528873110,"results":"56","hashOfConfig":"45"},{"size":10910,"mtime":1721528887995,"results":"57","hashOfConfig":"45"},{"size":28158,"mtime":1721528772946,"results":"58","hashOfConfig":"45"},{"size":10871,"mtime":1721528861756,"results":"59","hashOfConfig":"45"},{"size":2468,"mtime":1721528671250,"results":"60","hashOfConfig":"45"},{"size":12812,"mtime":1721528734487,"results":"61","hashOfConfig":"45"},{"size":929,"mtime":1721776167229,"results":"62","hashOfConfig":"45"},{"size":1524,"mtime":1721499317255,"results":"63","hashOfConfig":"45"},{"size":729,"mtime":1721499317255,"results":"64","hashOfConfig":"45"},{"size":1382,"mtime":1721499317256,"results":"65","hashOfConfig":"45"},{"size":2818,"mtime":1721499317255,"results":"66","hashOfConfig":"45"},{"size":7625,"mtime":1721499317256,"results":"67","hashOfConfig":"45"},{"size":743,"mtime":1721499317254,"results":"68","hashOfConfig":"45"},{"size":678,"mtime":1721499317256,"results":"69","hashOfConfig":"45"},{"size":781,"mtime":1721499317254,"results":"70","hashOfConfig":"45"},{"size":8446,"mtime":1721529007074,"results":"71","hashOfConfig":"45"},{"size":320,"mtime":1721499317254,"results":"72","hashOfConfig":"45"},{"size":1755,"mtime":1721499317256,"results":"73","hashOfConfig":"45"},{"size":693,"mtime":1721499317256,"results":"74","hashOfConfig":"45"},{"size":3705,"mtime":1721527863206,"results":"75","hashOfConfig":"45"},{"size":13528,"mtime":1721499317256,"results":"76","hashOfConfig":"45"},{"size":1588,"mtime":1721499317254,"results":"77","hashOfConfig":"45"},{"size":373,"mtime":1721499317259,"results":"78","hashOfConfig":"45"},{"size":2146,"mtime":1721499317255,"results":"79","hashOfConfig":"45"},{"size":2137,"mtime":1721499317255,"results":"80","hashOfConfig":"45"},{"size":3800,"mtime":1721499317256,"results":"81","hashOfConfig":"45"},{"size":876,"mtime":1721499317254,"results":"82","hashOfConfig":"45"},{"size":1700,"mtime":1721499317257,"results":"83","hashOfConfig":"45"},{"size":4668,"mtime":1721499317255,"results":"84","hashOfConfig":"45"},{"size":4782,"mtime":1721499317254,"results":"85","hashOfConfig":"45"},{"size":5022,"mtime":1721528997512,"results":"86","hashOfConfig":"45"},{"size":3503,"mtime":1721499317254,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"cdvnbu",{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"98","usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"101","usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"188","usedDeprecatedRules":"90"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"90"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"90"},"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/index.js",[],["200","201"],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/App.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/context/categories_context.js",["202","203"],"import React, { useContext, useEffect, useState } from \"react\";\n\nconst CategoriesContext = React.createContext();\n\nexport const CategoriesProvider = ({ children }) => {\n  const [categories, setCategories] = useState();\n\n  useEffect(() => {\n    fetch('/category/categories').\n    then(data => data.json()).\n    then(data => setCategories(data));\n  }, [])\n\n  return (\n    <CategoriesContext.Provider value={categories}>\n      {children}\n    </CategoriesContext.Provider>\n  )\n}\n\nexport const useCategories = () => useContext(CategoriesContext);","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/context/courses_context.js",["204","205"],"import React, { useContext, useEffect, useState } from \"react\";\n\nconst CoursesContext = React.createContext();\n\nexport const CoursesProvider = ({ children }) => {\n  const [courses, setCourses] = useState();\n\n  useEffect(() => {\n    fetch('/course/courses').\n    then(data => data.json()).\n    then(data => setCourses(data));\n  }, [])\n\n  return (\n    <CoursesContext.Provider value={courses}>\n      {children}\n    </CoursesContext.Provider>\n  )\n}\n\nexport const useCourses = () => useContext(CoursesContext);","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/context/users_context.js",["206","207"],"import React, { useContext, useEffect, useState } from \"react\";\n\nconst UsersContext = React.createContext();\n\nexport const UsersProvider = ({ children }) => {\n  const [users, setUsers] = useState();\n\n  useEffect(() => {\n    fetch('/auth/users').\n    then(data => data.json()).\n    then(data => setUsers(data));\n  }, [])\n\n  return (\n    <UsersContext.Provider value={users}>\n      {children}\n    </UsersContext.Provider>\n  )\n}\n\nexport const useUsers = () => useContext(UsersContext);","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/HomePage.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/SignUpPage.js",["208","209","210"],"\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport React, { useState } from 'react'\nimport { useForm }  from 'react-hook-form'\nimport {  MdReportGmailerrorred, MdCancel } from 'react-icons/md';\nimport { useAuth } from '../auth';\nimport HomePage from './HomePage'\nimport ErrorModal from \"../components/ErrorModal\";\n\nconst LoggedInUser = () => {\n    const {register, watch, handleSubmit, reset, formState:{errors}} = useForm();\n    const [showError, setShowError] = useState();\n    const [showModalError, setShowModalError] = useState(false);\n    const history = useHistory();\n\n    const submitForm = (data) => {\n        if(data.password === data.confirm_password){\n\n            const body = {\n                username: data.username,\n                first_name: data.first_name,\n                last_name: data.last_name,\n                email: data.email,\n                password: data.password,\n                confirm_password: data.confirm_password\n            }\n\n            const requestOptions = {\n                method:\"POST\",\n                headers: {\n                    'content-type': 'application/json'\n                }, \n                body: JSON.stringify(body)\n    \n            }\n    \n            fetch('/auth/signup', requestOptions)\n            .then(res=>res.json())\n            .then(data=>{\n                if(data.status === 1)\n                {\n                    reset();\n                    history.push('/login')\n                }\n                else if(data.status === 0){\n                    setShowError(true);\n                }\n                else{\n                    setShowModalError(true)\n                }\n            })\n            .catch(err=>console.log(err))\n                \n        }\n        else {\n            alert(\"Passwords do not match.\")\n        }\n    }\n\n    return (\n<>\n{showModalError?<ErrorModal/>:null}\n            <section className=\"vh-100\" style={{ backgroundColor: \"rgb(179, 20, 91)\" }}>\n                <div className=\"container h-100\">\n                    <div className=\"row d-flex justify-content-center align-items-center h-100\">\n                        <div className=\"col-lg-12 col-xl-11\">\n                            <div className=\"card text-black\" style={{ borderRadius: \"25px\" }}>\n                                <div className=\"card-body p-md-5\">\n                                    <div className=\"row justify-content-center\">\n                                        <div className=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n                                            <p className=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">Sign up</p>\n                                            \n                                            <InputWrapper>\n                                            {showError?<div className=\"error-response\"><MdCancel/> <p className=\"error\">USERNAME OR EMAIL TAKEN.</p></div>:\"\"}\n                                                <form className=\"mx-1 mx-md-4\">\n                                                    <div className=\"flex-row align-items-center mb-3\">\n                                                            <div className=\"form__group field\">\n                                                                <input type=\"text\" className=\"form__field\" placeholder=\"Username\" name=\"username\" id='username' required \n                                                                {...register(\"username\", {required: true, maxLength:25})}\n                                                                />\n                                                                {errors.username && errors.username?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Username is required.</p></div>}\n                                                                {errors.username && errors.username?.type !==\"required\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Too much characters.</p></div>}\n\n                                                                <label htmlFor=\"username\" className=\"form__label\">Username</label>\n                                                            </div>\n                                                    </div>\n\n                                                    <div className=\"flex-row align-items-center mb-3\">\n                                                            <div className=\"form__group field\">\n                                                                <input type=\"text\" className=\"form__field\" placeholder=\"First name\" name=\"firstName\" id='firstName' required \n                                                                {...register(\"first_name\", {required: true, maxLength:25})}\n                                                                />\n                                                                {errors.first_name && errors.first_name?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">First name is required.</p></div>}\n                                                                {errors.first_name && errors.first_name?.type !==\"required\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Too much characters.</p></div>}\n\n                                                                <label htmlFor=\"firstName\" className=\"form__label\">First name</label>\n                                                            </div>\n                                                    </div>\n\n                                                    <div className=\"flex-row align-items-center mb-3\">\n                                                            <div className=\"form__group field\">\n                                                                <input type=\"text\" className=\"form__field\" placeholder=\"Last name\" name=\"lastName\" id='lastName' required \n                                                                {...register(\"last_name\", {required: true, maxLength:25})}\n                                                                />\n                                                                {errors.last_name && errors.last_name?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Last name is required.</p></div>}\n                                                                {errors.last_name && errors.last_name?.type !==\"required\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Too much characters.</p></div>}\n\n                                                                <label htmlFor=\"lastName\" className=\"form__label\">Last name</label>\n                                                            </div>\n                                                    </div>\n\n                                                    <div className=\"flex-row align-items-center mb-3\">\n                                                            <div className=\"form__group field\">\n                                                                <input type=\"email\" className=\"form__field\" placeholder=\"Email\" name=\"email\" id='email' required \n                                                                {...register(\"email\", {required: true, maxLength:80, pattern:/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/})}\n                                                                />\n                                                                {errors.email && errors.email?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Email is required.</p></div>}\n                                                                {errors.email && errors.email?.type !==\"required\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Invalid email.</p></div>}\n                                                                <label htmlFor=\"email\" className=\"form__label\">Email</label>\n                                                            </div>\n                                                    </div>\n\n                                                    <div className=\"flex-row align-items-center mb-3\">\n                                                            <div className=\"form__group field\">\n                                                                <input type=\"password\" className=\"form__field\" placeholder=\"Password\" name=\"password\" id='password' required autoComplete=\"off\"\n                                                                {...register(\"password\", {required: true, minLength:7, pattern: /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/})}\n                                                                />\n                                                                {errors.password && errors.password?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Password is required.</p></div>}\n                                                                {errors.password && errors.password?.type !==\"required\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Invalid password.</p></div>}\n                                                                <label htmlFor=\"password\" className=\"form__label\">Password</label>\n                                                            </div>\n                                                    </div>\n\n                                                    <div className=\"flex-row align-items-center mb-5\">\n                                                            <div className=\"form__group field\">\n                                                                <input type=\"password\" className=\"form__field\" placeholder=\"Confirm password\" name=\"cpassword\" id='cpassword' required autoComplete=\"off\"\n                                                                {...register(\"confirm_password\", {required: true, minLength:7, pattern: /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/})}\n                                                                />\n                                                                {errors.confirm_password && errors.confirm_password?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Password is required.</p></div>}\n                                                                {errors.confirm_password && errors.confirm_password?.type !==\"required\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Invalid password.</p></div>}\n\n                                                                <label htmlFor=\"cpassword\" className=\"form__label\">Confirm password</label>\n                                                            </div>\n                                                    </div>\n\n                                                    \n                                                    <div className=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\n                                                        <ButtonWrapper>\n                                                            <button type=\"submit\" className=\"item-btn see-details-btn\" onClick={handleSubmit(submitForm)}>Sign Up</button>\n                                                        </ButtonWrapper>\n                                                    </div>\n\n                                                    <div className=\"text-center text-lg-start mt-4 pt-2\">\n                                                        <p className=\"small text-center fw-bold mt-2 pt-1 mb-0\">Already have an account?\n                                                            <NavLink to=\"/login\"style={{color: 'rgb(129, 0, 161)'}}> Log In</NavLink>\n                                                        </p>\n                                                    </div>\n                                                    \n                                                </form>\n                                            </InputWrapper>\n                                        </div>\n                                        <div className=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\n                                            <img src=\"https://img.freepik.com/darmowe-wektory/ilustracja-koncepcja-utrzymania_114360-391.jpg?w=1380&t=st=1670357153~exp=1670357753~hmac=ff7af0f00a5e377f04fd75b1637594bcb54f014a14042cbab9358054f2704fd3\"\n                                                className=\"img-fluid\" alt=\"Registration Image\" />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nconst Signup = () => {\n    const [logged]=useAuth();\n    return (\n        <>\n            {!logged?<LoggedInUser/>:<HomePage/>}\n        </>\n    )\n}\n\nconst InputWrapper = styled.div`\n.error-response{\n    display: flex;\n    color: red;\n    font-weight: bold;\n    font-size: 2rem;\n    margin-left: 2rem;\n}\n.error-section{\n    margin-top: 0.5rem;\n    display: flex;\n    color: red;\n    height: 0.5rem;\n    font-weight: bold;\n}\n.error{\n    margin-left: 5px;\n    font-size: 1.1rem;\n}\n.form__group {\n    position: relative;\n    padding: 15px 0 0;\n    margin-top: 5px;\n    margin-left: 10px;\n    width: 100%;\n  }\n  \n  .form__field {\n    font-family: inherit;\n    width: 100%;\n    border: 0;\n    border-bottom: 2px solid #cf46f2;\n    outline: 0;\n    font-size: 1.3rem;\n    color: black;\n    padding: 7px 0;\n    background: transparent;\n    transition: border-color 0.2s;\n  \n    &::placeholder {\n      color: transparent;\n    }\n  \n    &:placeholder-shown ~ .form__label {\n      font-size: 1.3rem;\n      cursor: text;\n      top: 20px;\n    }\n  }\n  \n  .form__label {\n    position: absolute;\n    top: 0;\n    display: block;\n    transition: 0.2s;\n    font-size: 1rem;\n    color: #9b9b9b;\n  }\n  \n  .form__field:focus {\n    ~ .form__label {\n      position: absolute;\n      top: 0;\n      display: block;\n      transition: 0.2s;\n      font-size: 1rem;\n      color: #760094;\n      font-weight:700;    \n    }\n    padding-bottom: 6px;  \n    font-weight: 700;\n    border-width: 3px;\n    border-image: linear-gradient(to right, #760094,#cb42ed,#edb4fa);\n    border-image-slice: 1;\n  }\n\n  .form__field{\n    &:required,&:invalid { box-shadow:none; }\n  }\n`\n\n\nconst ButtonWrapper = styled.div`\n.item-btn{\n    font-size: 15px;\n    display: inline-block;\n    padding: 6px 16px;\n    font-weight: 700;\n    transition: var(--transition);\n    white-space: nowrap;\n\n    &.see-details-btn{\n      background-color: transparent;\n      border: 1px solid var(--clr-black);\n      margin-right: 5px;\n\n      &:hover{\n        background-color: rgba(0, 0, 0, 0.9);\n        color: var(--clr-white);\n      }\n    }\n}\n`\n\nexport default Signup","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/Navbar.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/LoginPage.js",["211","212"],"\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport React, { useState } from 'react'\nimport { useForm }  from 'react-hook-form'\nimport {  MdReportGmailerrorred, MdCancel } from 'react-icons/md';\nimport { login, useAuth } from '../auth'\nimport HomePage from \"./HomePage\";\n\nconst NotLoggedInUser = () => {\n    const {register, watch, handleSubmit, reset, formState:{errors}} = useForm();\n    const history = useHistory();\n    const [showError, setShowError] = useState();\n\n    const loginUser = (data) => {\n        const requestOptions={\n            method:\"POST\",\n            headers:{\n                'content-type':'application/json'\n            },\n            body:JSON.stringify(data)\n        }\n\n        fetch('/auth/login', requestOptions)\n        .then(res=>res.json())\n        .then(data=>{\n            if(data.access_token){\n                login(data.access_token)\n                reset()\n                history.push('/')\n            }\n            else{\n                setShowError(true);\n            }\n        })\n    }\n\n    return (\n        <>\n            <section className=\"vh-100\" style={{ backgroundColor: \"rgb(124, 31, 255)\" }}>\n                <div className=\"container h-100\">\n                    <div className=\"row d-flex justify-content-center align-items-center h-100\">\n                        <div className=\"col-lg-12 col-xl-11\">\n                            <div className=\"card text-black\" style={{ borderRadius: \"25px\" }}>\n                                <div className=\"card-body p-md-5\">\n                                    <div className=\"row justify-content-center\">\n                                        <div className=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1 pt-5\">\n                                            <p className=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-5\">Log In</p>\n                                            \n                                            <InputWrapper>\n                                            {showError?<div className=\"error-response\"><MdCancel/> <p className=\"error\">INVALID USERNAME OR PASSWORD.</p></div>:\"\"}\n                                                <form className=\"mx-1 mx-md-4\">\n                                                    <div className=\"flex-row align-items-center mb-5\">\n                                                            <div className=\"form__group field\">\n                                                                <input type=\"text\" className=\"form__field\" placeholder=\"Username\" name=\"username\" id='username' required \n                                                                {...register(\"username\", {required:true, maxLength:25})}\n                                                                />\n                                                                {errors.username && errors.username?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Username is required.</p></div>}\n\n                                                                <label htmlFor=\"username\" className=\"form__label\">Username</label>\n                                                            </div>\n                                                    </div>\n\n\n                                                    <div className=\"flex-row align-items-center mb-5\">\n                                                            <div className=\"form__group field\">\n                                                                <input type=\"password\" className=\"form__field\" placeholder=\"password\" name=\"password\" id='password' required autoComplete=\"off\"\n                                                                {...register(\"password\", {required: true, minLength:7})}\n                                                                />\n                                                                {errors.password && errors.password?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Password is required.</p></div>}\n                                                                <label htmlFor=\"password\" className=\"form__label\">Password</label>\n                                                            </div>\n                                                    </div>\n\n                                                    \n                                                    <div className=\"d-flex justify-content-center mx-4 mb-4 mb-lg-4\">\n                                                        <ButtonWrapper>\n                                                            <button type=\"submit\" className=\"item-btn see-details-btn\" onClick={handleSubmit(loginUser)}>Log In</button>\n                                                        </ButtonWrapper>\n                                                    </div>\n\n                                                    <div className=\"text-center text-lg-start mt-4 pt-2\">\n                                                        <p className=\"small text-center fw-bold mt-2 pt-1 mb-0\">Do not have an account?\n                                                            <NavLink to=\"/signup\"style={{color: 'rgb(99, 47, 245)'}}> Sign up</NavLink>\n                                                        </p>\n                                                    </div>\n                                                    \n                                                </form>\n                                            </InputWrapper>\n                                        </div>\n                                        <div className=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\n                                            <img src=\"https://img.freepik.com/darmowe-wektory/zaloguj-sie-ilustracja-koncepcja-abstrakcyjna-strony_335657-3875.jpg?w=826&t=st=1670463123~exp=1670463723~hmac=e50e04a7e7c0ae27aad9ccbe0c70e306e204adebfa56d9571b0923be44cf4a14\"\n                                                className=\"img-fluid\" alt=\"Registration Image\" />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nconst Login = () => {\n    const [logged]=useAuth();\n\n    return(\n        <>\n        {!logged?<NotLoggedInUser/>:<HomePage/>}\n        </>\n    )\n}\n\nconst InputWrapper = styled.div`\n.error-response{\n    display: flex;\n    color: red;\n    font-weight: bold;\n    font-size: 2rem;\n    margin-left: 2rem;\n}\n.error-section{\n    margin-top: 0.5rem;\n    display: flex;\n    color: red;\n    height: 0.5rem;\n    font-weight: bold;\n}\n.error{\n    margin-left: 5px;\n    font-size: 1.1rem;\n}\n.form__group {\n    position: relative;\n    padding: 15px 0 0;\n    margin-top: 5px;\n    margin-left: 10px;\n    width: 100%;\n  }\n  \n  .form__field {\n    font-family: inherit;\n    width: 100%;\n    border: 0;\n    border-bottom: 2px solid #9673f5;\n    outline: 0;\n    font-size: 1.3rem;\n    color: black;\n    padding: 7px 0;\n    background: transparent;\n    transition: border-color 0.2s;\n  \n    &::placeholder {\n      color: transparent;\n    }\n  \n    &:placeholder-shown ~ .form__label {\n      font-size: 1.3rem;\n      cursor: text;\n      top: 20px;\n    }\n  }\n  \n  .form__label {\n    position: absolute;\n    top: 0;\n    display: block;\n    transition: 0.2s;\n    font-size: 1rem;\n    color: #9b9b9b;\n  }\n  \n  .form__field:focus {\n    ~ .form__label {\n      position: absolute;\n      top: 0;\n      display: block;\n      transition: 0.2s;\n      font-size: 1rem;\n      color: #632ff5;\n      font-weight:700;    \n    }\n    padding-bottom: 6px;  \n    font-weight: 700;\n    border-width: 3px;\n    border-image: linear-gradient(to right, #31177a,#632ff5,#c9b6fc);\n    border-image-slice: 1;\n  }\n\n  .form__field{\n    &:required,&:invalid { box-shadow:none; }\n  }\n`\n\n\nconst ButtonWrapper = styled.div`\n.item-btn{\n    font-size: 15px;\n    display: inline-block;\n    padding: 6px 16px;\n    font-weight: 700;\n    transition: var(--transition);\n    white-space: nowrap;\n\n    &.see-details-btn{\n      background-color: transparent;\n      border: 1px solid var(--clr-black);\n      margin-right: 5px;\n\n      &:hover{\n        background-color: rgba(0, 0, 0, 0.9);\n        color: var(--clr-white);\n      }\n    }\n}\n`\n\nexport default Login","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/Footer.js",["213","214","215","216"],"import React from \"react\";\nimport styled from 'styled-components';\nimport {BsLinkedin, BsFacebook, BsTwitter, BsYoutube } from \"react-icons/bs\";\nimport {Link} from \"react-router-dom\";\nimport { useCategories } from \"../context/categories_context\";\nimport { useAuth, logout } from '../auth'\n\nconst Footer = () => {\n    const categories=useCategories();\n    const [logged] = useAuth();\n  return (\n    <FooterWrapper>\n    <footer className=\"site-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-12 col-md-6\">\n            <h6>About</h6>\n            <p className=\"text-justify about\">\n              At LafargeHolcim Maroc, we are committed to fostering continuous learning and professional development for our employees.\n              Our new E-learning platform is designed to provide an innovative, efficient, and user-friendly learning experience tailored to meet the evolving needs of our workforce.</p>\n          </div>\n\n          <div className=\"col-xs-6 col-md-3\">\n            <h6>Categories</h6>\n            <ul className=\"footer-links\">\n                {categories?.map((category, idx) => (\n                    <li key={idx}><Link to = {`/category/${category.id}`}>{category.name}</Link></li>\n                ))\n                }\n            </ul>\n          </div>\n\n          <div className=\"col-xs-6 col-md-3\">\n            <h6>Quick Links</h6>\n            <ul className=\"footer-links\">\n              {logged?<>\n                <li><Link to = '/my-profile'>My profile</Link></li>\n                <li><Link to = '/add-course'>Add course</Link></li>\n                <li><Link to = '/' onClick={()=>{logout()}}>Logout</Link></li>\n              </>:<>\n                <li><Link to = '/login'>Login</Link></li>\n                <li><Link to = '/signup'>Sign up</Link></li>\n              </>}\n            </ul>\n          </div>\n        </div>\n        <hr></hr>\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-8 col-sm-6 col-xs-12\">\n\n            <p className=\"copyright-text\">  &copy; <a href=\"https://www.lafargeholcim.ma/fr\"> LaFarge</a>.</p>\n\n          </div>\n\n          <div className=\"col-md-4 col-sm-6 col-xs-12\">\n            {/*<ul className=\"social-icons\">\n              <li><a className=\"facebook\" href=\"#\"><BsFacebook/></a></li>\n              <li><a className=\"twitter\" href=\"#\"><BsTwitter/></a></li>\n              <li><a className=\"youtube\" href=\"#\"><BsYoutube/></a></li>\n              <li><a className=\"linkedin\" href=\"#\"><BsLinkedin/></a></li>   \n            </ul>*/}\n          </div>\n        </div>\n      </div>\n</footer>\n</FooterWrapper>\n  );\n};\nconst FooterWrapper = styled.div`\n.about{\n    font-size: 1.2rem;\n}\n.site-footer\n{\n  background-color:#26272b;\n  padding:45px 0 20px;\n  font-size:15px;\n  line-height:24px;\n  color:#737373;\n  border-top: 1px solid black;\n  \n}\n.site-footer hr\n{\n    border: 1px solid #9f36f5;\n  opacity:0.5\n}\n.site-footer hr.small\n{\n  margin:20px 0\n}\n.site-footer h6\n{\n  color:#fff;\n  font-size:16px;\n  text-transform:uppercase;\n  margin-top:5px;\n  letter-spacing:2px\n}\n.site-footer a\n{\n  color:#737373;\n}\n.site-footer a:hover\n{\n  color:#a92be3;\n  text-decoration:none;\n}\n.footer-links\n{\n  padding-left:0;\n  list-style:none\n}\n.footer-links li\n{\n  display:block\n}\n.footer-links a\n{\n  color:#737373\n}\n.footer-links a:active,.footer-links a:focus,.footer-links a:hover\n{\n  color:#a92be3;\n  text-decoration:none;\n}\n.footer-links.inline li\n{\n  display:inline-block\n}\n.site-footer .social-icons\n{\n  text-align:right\n}\n.site-footer .social-icons a\n{\n  width:40px;\n  height:40px;\n  line-height:40px;\n  margin-left:6px;\n  margin-right:0;\n  border-radius:100%;\n  background-color:#33353d\n}\n.copyright-text\n{\n  margin:0\n}\n@media (max-width:991px)\n{\n  .site-footer [className^=col-]\n  {\n    margin-bottom:30px\n  }\n}\n@media (max-width:767px)\n{\n  .site-footer\n  {\n    padding-bottom:0\n  }\n  .site-footer .copyright-text,.site-footer .social-icons\n  {\n    text-align:center\n  }\n}\n.social-icons\n{\n  padding-left:0;\n  margin-bottom:0;\n  list-style:none\n}\n.social-icons li\n{\n  display:inline-block;\n  margin-bottom:4px\n}\n.social-icons li.title\n{\n  margin-right:15px;\n  text-transform:uppercase;\n  color:#96a2b2;\n  font-weight:700;\n  font-size:13px\n}\n.social-icons a{\n  background-color:#eceeef;\n  color:#818a91;\n  font-size:16px;\n  display:inline-block;\n  line-height:44px;\n  width:44px;\n  height:44px;\n  text-align:center;\n  margin-right:8px;\n  border-radius:100%;\n  -webkit-transition:all .2s linear;\n  -o-transition:all .2s linear;\n  transition:all .2s linear\n}\n.social-icons a:active,.social-icons a:focus,.social-icons a:hover\n{\n  color:#fff;\n  background-color:#29aafe\n}\n.social-icons.size-sm a\n{\n  line-height:34px;\n  height:34px;\n  width:34px;\n  font-size:14px\n}\n.social-icons a.facebook:hover\n{\n  background-color:#3b5998\n}\n.social-icons a.twitter:hover\n{\n  background-color:#00aced\n}\n.social-icons a.linkedin:hover\n{\n  background-color:#007bb6\n}\n.social-icons a.youtube:hover\n{\n  background-color:#ea4c89\n}\n@media (max-width:767px)\n{\n  .social-icons li.title\n  {\n    display:block;\n    margin-right:0;\n    font-weight:600\n  }\n}`\n\nexport default Footer;","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/AddCoursePage.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/MyProfilePage.js",["217","218","219","220","221"],"import React, { useEffect, useState } from 'react'\nimport {Link, useParams} from 'react-router-dom'\nimport { Modal, Button } from 'react-bootstrap'\nimport { useForm } from 'react-hook-form'\nimport LoginPage from './LoginPage'\nimport styled from \"styled-components\";\nimport { hero_images, user_images } from \"../utils/images\";\nimport {BsLinkedin, BsFacebook, BsTwitter, BsYoutube } from \"react-icons/bs\";\nimport MyProfileCoursesList from '../components/MyProfileCoursesList'\nimport {logout, useAuth } from '../auth';\nimport TokenExpiredModal from '../components/TokenExpiredModal'\nimport {MdOutlineCheckCircleOutline, MdRemoveCircleOutline, MdReportGmailerrorred} from \"react-icons/md\";\nimport EnrolledCoursesList from '../components/EnrolledCoursesList'\n\nconst LoggedInUser=(id)=>{\n    const [user, setUser] = useState();\n    const {register, watch, handleSubmit, setValue, reset, formState:{errors}} = useForm();\n    const [showModalTokenExpired, setShowModalTokenExpired] = useState(false);\n\n    const token=localStorage.getItem('REACT_TOKEN_AUTH_KEY')\n    const requestOptions ={\n        method: 'GET',\n        headers: {\n            'content-type':'application/json',\n            'Authorization': `Bearer ${JSON.parse(token)}`\n        }\n    }\n\n\n    useEffect(\n        ()=>{\n            fetch('/auth/actual-user', requestOptions)\n            .then(res=>res.json())\n            .then(data=>{\n              if(data.msg == \"Token has expired\" | data.msg == \"Not enough segments\"){\n                logout();\n                setShowModalTokenExpired(true);\n              }else{\n                setUser(data)\n              }\n            })\n            .catch(err=>console.log(err))\n        },[]\n    );\n\n    const [show, setShow] = useState(false)\n    const [imageName, setImageName] = useState('')\n  const [imageError, setImageError] = useState(false)\n    const closeModal = () => {\n      setShow(false)\n  }\n\n  const showModal = () => {\n      setShow(true)\n      setValue(\"username\", user?.username)\n      setValue(\"first_name\", user?.first_name)\n      setValue(\"last_name\", user?.last_name)\n      setValue(\"email\", user?.email)\n      setValue(\"about_me\", user?.about_me)\n      setValue(\"password\", user?.password)\n      setValue(\"fb_link\", user?.fb_link)\n      setValue(\"yt_link\", user?.yt_link)\n      setValue(\"li_link\", user?.li_link)\n      setValue(\"tw_link\", user?.tw_link)\n      setValue(\"avatar\", user?.avatar)\n  }\n\n  const convertToBase64 = (file, cb) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file)\n    reader.onload = function () {\n      cb(reader.result)\n    };\n}\n\nconst uploadFile = async (e) => {\n  const file = e.target.files[0];\n  if (file != null) {\n    var allowedExtensions = /(\\.jpg|\\.jpeg|\\.png|\\.gif)$/i;\n    if(!allowedExtensions.exec(file.name)){ \n      setImageName(\"\")\n      setImageError(true)\n      setValue(\"avatar\", \"\");\n    }\n    else{\n      convertToBase64(file, (result) => {\n        setImageError(false)\n        setImageName(file.name)\n        setValue(\"avatar\", result.toString());\n      });\n    }\n  }\n};\n\n  const editProfile = (data) => {\n    console.log(data)\n\n    const requestOptions={\n      method:'PUT',\n      headers:{\n          'content-type':'application/json',\n          'Authorization':`Bearer ${JSON.parse(token)}`\n      },\n      body:JSON.stringify(data)\n  }\n\n  fetch(`/auth/user/${user?.id}`, requestOptions)\n  .then(res=>res.json())\n  .then(data=>{\n      console.log(data)\n\n      const reload =window.location.reload()\n      reload() \n  })\n  .catch(err=>console.log(err))\n    \n\n  }\n\n    return(\n        <UserPageWrapper>\n        {showModalTokenExpired?<TokenExpiredModal/>:null}\n          <EditProfileModalWrapper>\n            <Modal\n              size=\"lg\"\n              show={show}\n              onHide={closeModal}\n              scrollable={true}\n              centered\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>\n                  Update Profile\n                </Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <InputWrapper>\n                  <form className=\"mx-1 mx-md-4\">\n\n                    <div className=\"flex-row align-items-center mb-3\">\n                      <div className=\"form__group field\">\n                        <input type=\"text\" className=\"form__field__disabled\" placeholder=\"Username\" name=\"username\" id='username' disabled={true}\n                          {...register(\"username\")}\n                        />\n                        <label htmlFor=\"username\" className=\"form__label\">Username</label>\n                      </div>\n                    </div>\n\n                    <div className=\"flex-row align-items-center mb-3\">\n                      <div className=\"form__group field\">\n                        <input type=\"text\" className=\"form__field__disabled\" placeholder=\"First name\" name=\"first_name\" id='first_name' disabled={true}\n                          {...register(\"first_name\")}\n                        />\n                        <label htmlFor=\"first_name\" className=\"form__label\">First name</label>\n                      </div>\n                    </div> \n\n                    <div className=\"flex-row align-items-center mb-3\">\n                      <div className=\"form__group field\">\n                        <input type=\"text\" className=\"form__field__disabled\" placeholder=\"Last name\" name=\"last_name\" id='last_name' disabled={true}\n                          {...register(\"last_name\")}\n                        />\n                        <label htmlFor=\"last_name\" className=\"form__label\">Last name</label>\n                      </div>\n                    </div>\n\n                    <div className=\"flex-row align-items-center mb-3\">\n                      <div className=\"form__group field\">\n                        <input type=\"text\" className=\"form__field__disabled\" placeholder=\"Email\" name=\"email\" id='email' disabled={true}\n                          {...register(\"email\")}\n                        />\n                        <label htmlFor=\"email\" className=\"form__label\">Email</label>\n                      </div>\n                    </div>\n\n                    <div className=\"flex-row align-items-center mb-3\">\n                      <div className=\"form__group field\">\n                        <input type=\"text\" className=\"form__field\" placeholder=\"About me\" name=\"about_me\" id='about_me'\n                          {...register(\"about_me\", {maxLength:1000})}\n                        />\n                        {errors.about_me && errors.about_me?.type ===\"maxLength\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Too many characters.</p></div>}\n                        <label htmlFor=\"about_me\" className=\"form__label\">About me</label>\n                      </div>\n                    </div>\n\n                    <div className=\"flex-row align-items-center mb-3\">\n                      <div className=\"form__group field\">\n                        <input type=\"text\" className=\"form__field\" placeholder=\"Facebook\" name=\"facebook\" id='facebook'\n                          {...register(\"fb_link\", {pattern: /^(?:(?:http|https):\\/\\/)?(?:www.)?facebook.com/})}\n                        />\n                        {errors.fb_link && errors.fb_link?.type ===\"pattern\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Invalid facebook link.</p></div>}\n\n                        <label htmlFor=\"facebook\" className=\"form__label\">Facebook</label>\n                      </div>\n                    </div>\n\n                    <div className=\"flex-row align-items-center mb-3\">\n                      <div className=\"form__group field\">\n                        <input type=\"text\" className=\"form__field\" placeholder=\"Youtube\" name=\"youtube\" id='youtube'\n                          {...register(\"yt_link\", {pattern: /^(?:(?:http|https):\\/\\/)?(?:www.)?youtube.com/})}\n                        />\n                        {errors.yt_link && errors.yt_link?.type ===\"pattern\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Invalid youtube link.</p></div>}\n                        <label htmlFor=\"youtube\" className=\"form__label\">Youtube</label>\n                      </div>\n                    </div>\n\n                    <div className=\"flex-row align-items-center mb-3\">\n                      <div className=\"form__group field\">\n                        <input type=\"text\" className=\"form__field\" placeholder=\"Twitter\" name=\"twitter\" id='twitter'\n                          {...register(\"tw_link\", {pattern: /^(?:(?:http|https):\\/\\/)?(?:www.)?twitter.com/})}\n                        />\n                        {errors.tw_link && errors.tw_link?.type ===\"pattern\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Invalid twitter link.</p></div>}\n                        <label htmlFor=\"twitter\" className=\"form__label\">Twitter</label>\n                      </div>\n                    </div>\n\n                    <div className=\"flex-row align-items-center mb-3\">\n                      <div className=\"form__group field\">\n                        <input type=\"text\" className=\"form__field\" placeholder=\"Linkedin\" name=\"linkedin\" id='linkedin'\n                          {...register(\"li_link\", {pattern: /^(?:(?:http|https):\\/\\/)?(?:www.)?linkedin.com/})}\n                        />\n                        {errors.li_link && errors.li_link?.type ===\"pattern\" && <div className=\"error-section\"><MdReportGmailerrorred/> <p className=\"error\">Invalid linkedin link.</p></div>}\n                        <label htmlFor=\"linkedin\" className=\"form__label\">Linkedin</label>\n                      </div>\n                    </div>\n\n                    <UploadWrapper>\n                      <span className=\"btn btn-outline-dark btn-file mt-3 upload\">\n                        {imageName? <div style={{ \"font-weight\":\"bold\"}}>{imageName}</div>: \"Upload avatar image\" }\n                        <input type=\"file\" name=\"uploaded-file\" onChange={uploadFile}/>\n                        <input type=\"hidden\"\n                            {...register(\"avatar\")}\n                        />\n                        \n                      </span>\n                      {imageName?<MdOutlineCheckCircleOutline className='checked-icon'/>: null}\n                      {imageError?<MdRemoveCircleOutline className='checked-icon' style={{\"color\":\"red\"}}/>: null}\n                    </UploadWrapper>\n\n\n                    <input type=\"hidden\" className=\"form__field\" placeholder=\"password\" name=\"password\" id='password'\n                          {...register(\"password\")}\n                        />\n\n                  </form>\n                </InputWrapper>\n              </Modal.Body>\n              <Modal.Footer>\n                <ButtonWrapper>\n                  <Button variant=\"outline-dark\" className='save__button' onClick={handleSubmit(editProfile)}>\n                    Save\n                  </Button>\n                </ButtonWrapper>\n              </Modal.Footer>\n            </Modal>\n          </EditProfileModalWrapper>\n            <div className=\"header__wrapper\">\n                <header>\n                </header>\n                <div className=\"cols__container\">\n                    <div className=\"left__col\">\n                    <div className=\"img__container\">\n                        {user?.avatar? <img src={user?.avatar} alt={user?.username}/>:<img src={user_images.default_user} alt={user?.username}/>}\n                        \n                        <span></span>\n                    </div>\n                    <h2>{user?.username}</h2>\n                    <p>{user?.first_name} {user?.last_name}</p>\n                    <p>{user?.email}</p>\n\n                    <ul className=\"about\">\n                        <li><span>0</span>Followers</li>\n                        <li><span>0</span>Following</li>\n                        <li><span>0</span>Students</li>\n                    </ul>\n\n                    <div className=\"content\">\n                        <p>\n                        {user?.about_me?user?.about_me:\"I am a new user of this platform. I haven't set up my profile yet :)\"}\n                        </p>\n                        <ul>\n                            {user?.fb_link?<i className=\"fab\"><Link to={{ pathname: user?.fb_link }} target=\"_blank\"><BsFacebook/></Link></i>:\"\"}\n                            {user?.li_link?<i className=\"fab\"><Link to={{ pathname: user?.li_link }} target=\"_blank\"><BsLinkedin/></Link></i>:\"\"}\n                            {user?.tw_link?<i className=\"fab\"><Link to={{ pathname: user?.tw_link }} target=\"_blank\"><BsTwitter/></Link></i>:\"\"}\n                            {user?.yt_link?<i className=\"fab\"><Link to={{ pathname: user?.yt_link }} target=\"_blank\"><BsYoutube/></Link></i>:\"\"}\n                        </ul>\n                    </div>\n                    </div>\n                    <div className=\"right__col\">\n                        <ButtonsWrapper>\n                            <div className='item-btns flex'>\n                                <Link to =\"#\" onClick={()=>{showModal()}} className = \"item-btn see-details-btn\">Edit Profile</Link>\n                                <Link to = \"/add-course\" className = \"item-btn see-details-btn\">Add Course</Link>\n                            </div>\n                        </ButtonsWrapper>\n                        <MyProfileCoursesList/>\n                        <EnrolledCoursesList/>\n                    </div>\n                </div>\n            </div>\n        </UserPageWrapper>\n    )\n    \n}\n\nconst MyProfilePage = () => {\n    const [logged]=useAuth();\n    const {id} = useParams();\n    const token=localStorage.getItem('REACT_TOKEN_AUTH_KEY')\n    if(!token){\n      logout()\n    }\n    return(\n        <>\n            {logged?<LoggedInUser id={id}/>:<LoginPage/>}\n        </>\n    )\n}\nconst ButtonWrapper = styled.div`\n.save__button{\n  margin-top: 10px;\n  margin-bottom: 10px;\n  width: 100px;\n  height: 40px;\n  border: 0px;\n  color: white;\n  font-weight: bold;\n  background: #fa6995;\n  transition: 0.5s;\n  :hover{\n      background-color: #c21b4e;\n  }\n}\n`\nconst EditProfileModalWrapper = styled.div`\n\n`\nconst UploadWrapper = styled.div`\n.upload{\n  border: 2px solid #fa6995;\n\n  :hover{\n    background: #fa6995;\n  }\n}\n.checked-icon{\n  margin-top: 20px;\n  margin-left: 10px;\n  font-size: 30px;\n  color: #34fa69;\n}\n.btn-file {\n  position: relative;\n  overflow: hidden;\n  min-width: 150px;\n}\n.btn-file input[type=file] {\n  position: absolute;\n  top: 0;\n  right: 0;\n  \n  min-width: 100%;\n  min-height: 100%;\n  font-size: 100px;\n  text-align: right;\n  filter: alpha(opacity=0);\n  opacity: 0;\n  outline: none;\n  background: white;\n  cursor: inherit;\n  display: block;\n}\n`\n\nconst InputWrapper = styled.div`\n.error-response{\n    display: flex;\n    color: red;\n    font-weight: bold;\n    font-size: 2rem;\n    margin-left: 2rem;\n}\n.error-section{\n    margin-top: 0.5rem;\n    display: flex;\n    color: red;\n    height: 0.5rem;\n    font-weight: bold;\n}\n.error{\n    margin-left: 5px;\n    font-size: 1.1rem;\n}\n.form__group {\n    position: relative;\n    padding: 15px 0 0;\n    margin-top: 5px;\n    width: 100%;\n  }\n\n  .form__field__disabled {\n    font-family: inherit;\n    width: 100%;\n    border: 0;\n    border-bottom: 2px solid gray;\n    outline: 0;\n    font-size: 1.3rem;\n    color: black;\n    padding: 7px 0;\n    background: transparent;\n    transition: border-color 0.2s;\n  \n    &::placeholder {\n      color: transparent;\n    }\n  \n    &:placeholder-shown ~ .form__label {\n      font-size: 1.3rem;\n      cursor: text;\n      top: 20px;\n    }\n  }\n\n  .form__field {\n    font-family: inherit;\n    width: 100%;\n    border: 0;\n    border-bottom: 2px solid #fa6995;\n    outline: 0;\n    font-size: 1.3rem;\n    color: black;\n    padding: 7px 0;\n    background: transparent;\n    transition: border-color 0.2s;\n  \n    &::placeholder {\n      color: transparent;\n    }\n  \n    &:placeholder-shown ~ .form__label {\n      font-size: 1.3rem;\n      cursor: text;\n      top: 20px;\n    }\n  }\n  \n  .form__label {\n    position: absolute;\n    top: 0;\n    display: block;\n    transition: 0.2s;\n    font-size: 1rem;\n    color: #9b9b9b;\n  }\n  \n  .form__field:focus {\n    ~ .form__label {\n      position: absolute;\n      top: 0;\n      display: block;\n      transition: 0.2s;\n      font-size: 1rem;\n      color: #c21b4e;\n      font-weight:700;    \n    }\n    padding-bottom: 6px;  \n    font-weight: 700;\n    border-width: 3px;\n    border-image: linear-gradient(to right, #c21b4e,#db3769,#f5b0c5);\n    border-image-slice: 1;\n  }\n\n  .form__field{\n    &:required,&:invalid { box-shadow:none; }\n  }\n`\n\nconst ButtonsWrapper = styled.div`\n.item-btns{\n    justify-self: flex-start;\n    padding: 4px 8px 30px 18px;\n    margin-top: auto;\n\n    .item-btn{\n      font-size: 15px;\n      display: inline-block;\n      padding: 6px 16px;\n      font-weight: 700;\n      transition: var(--transition);\n      white-space: nowrap;\n\n      &.see-details-btn{\n        background-color: transparent;\n        border: 1px solid var(--clr-black);\n        margin-right: 5px;\n\n        &:hover{\n          background-color: rgba(0, 0, 0, 0.9);\n          color: var(--clr-white);\n        }\n      }\n\n      &.add-to-cart-btn{\n        background: rgba(0, 0, 0, 0.9);\n        color: var(--clr-white);\n        border: 1px solid rgba(0, 0, 0, 0.9);\n        \n        &:hover{\n          background-color: transparent;\n          color: rgba(0, 0, 0, 0.9);\n        }\n      }\n    }\n  }`\n\nconst UserPageWrapper = styled.div`\nbody {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    min-height: 100vh;\n    font-family: \"Poppins\", sans-serif;\n  }\n  \n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n  }\n  \n  a {\n    text-decoration: none;\n  }\n  \n  .header__wrapper header {\n    width: 100%;\n    background: url(${hero_images.hero1}) no-repeat 50% 20% / cover;\n    min-height: calc(100px + 15vw);\n  }\n  \n  .header__wrapper .cols__container .left__col {\n    padding: 25px 20px;\n    text-align: center;\n    max-width: 350px;\n    position: relative;\n    margin: 0 auto;\n  }\n  \n  .header__wrapper .cols__container .left__col .img__container {\n    position: absolute;\n    top: -60px;\n    left: 50%;\n    transform: translatex(-50%);\n  }\n  .header__wrapper .cols__container .left__col .img__container img {\n    width: 120px;\n    height: 120px;\n    object-fit: cover;\n    border-radius: 50%;\n    display: block;\n    box-shadow: 1px 3px 12px rgba(0, 0, 0, 0.18);\n  }\n  .header__wrapper .cols__container .left__col .img__container span {\n    position: absolute;\n    background: #2afa6a;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    bottom: 3px;\n    right: 11px;\n    border: 2px solid #fff;\n  }\n  .header__wrapper .cols__container .left__col h2 {\n    margin-top: 60px;\n    font-weight: 600;\n    font-size: 22px;\n    margin-bottom: 5px;\n  }\n  .header__wrapper .cols__container .left__col p {\n    font-size: 0.9rem;\n    color: #818181;\n    margin: 0;\n  }\n  .header__wrapper .cols__container .left__col .about {\n    justify-content: space-between;\n    position: relative;\n    margin: 35px 0;\n  }\n  .header__wrapper .cols__container .left__col .about li {\n    display: flex;\n    flex-direction: column;\n    color: #818181;\n    font-size: 0.9rem;\n  }\n  .header__wrapper .cols__container .left__col .about li span {\n    color: #1d1d1d;\n    font-weight: 600;\n  }\n  .header__wrapper .cols__container .left__col .about:after {\n    position: absolute;\n    content: \"\";\n    bottom: -16px;\n    display: block;\n    background: #cccccc;\n    height: 1px;\n    width: 100%;\n  }\n  .header__wrapper .cols__container .content{\n    min-width: 100px;\n  }\n  .header__wrapper .cols__container .content p {\n    font-size: 1rem;\n    color: #1d1d1d;\n    line-height: 1.8em;\n  }\n  .header__wrapper .cols__container .content ul {\n    gap: 30px;\n    justify-content: center;\n    align-items: center;\n    margin-top: 25px;\n  }\n  .header__wrapper .cols__container .content ul li {\n    display: flex;\n  }\n  .header__wrapper .cols__container .content ul i {\n    font-size: 1.3rem;\n  }\n  .header__wrapper .cols__container .right__col {\n    display: flex;\n    padding: 10px 0;\n    justify-content: space-between;\n    flex-direction: column;\n  }\n  nav {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-direction: column;\n  }\n  .header__wrapper .cols__container .right__col nav ul {\n    display: flex;\n    gap: 20px;\n    flex-direction: column;\n  }\n  .header__wrapper .cols__container .right__col nav ul li a {\n    text-transform: uppercase;\n    color: #818181;\n  }\n  .header__wrapper .cols__container .right__col nav ul li:nth-child(1) a {\n    color: #1d1d1d;\n    font-weight: 600;\n  }\n  .header__wrapper .cols__container .right__col nav button {\n    background: #0091ff;\n    color: #fff;\n    border: none;\n    padding: 10px 25px;\n    border-radius: 4px;\n    cursor: pointer;\n    margin-top: 20px;\n  }\n  .header__wrapper .cols__container .right__col nav button:hover {\n    opacity: 0.8;\n  }\n  .header__wrapper .cols__container .right__col .photos {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(190px, 1fr));\n    gap: 20px;\n  }\n  .header__wrapper .cols__container .right__col .photos img {\n    max-width: 100%;\n    display: block;\n    height: 100%;\n    object-fit: cover;\n  }\n  \n  /* Responsiveness */\n  \n  @media (min-width: 868px) {\n    .header__wrapper .cols__container {\n      max-width: 1200px;\n      margin: 0 auto;\n      width: 90%;\n      justify-content: space-between;\n      display: grid;\n      grid-template-columns: 1fr 2fr;\n      gap: 50px;\n    }\n    .header__wrapper .cols__container .left__col {\n      padding: 25px 0px;\n      min-width: 300px;\n    }\n    .header__wrapper .cols__container .right__col nav ul {\n      flex-direction: row;\n      gap: 30px;\n    }\n    .header__wrapper .cols__container .right__col .photos {\n      height: 365px;\n      overflow: auto;\n      padding: 0 0 30px;\n    }\n  }\n  @media (max-width: 1017px) {\n  .header__wrapper .cols__container .right__col{\n    align-items: center;\n  }\n}\n  @media (min-width: 1017px) {\n    \n    .header__wrapper .cols__container .left__col {\n      margin: 0;\n      margin-right: auto;\n    }\n    .header__wrapper .cols__container .right__col nav {\n      flex-direction: row;\n    }\n    .header__wrapper .cols__container .right__col nav button {\n      margin-top: 0;\n    }\n  }\n`\n\n\nexport default MyProfilePage;","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/SingleCoursePage.js",["222","223","224","225","226","227","228","229","230"],"import React, {useEffect, useState} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport StarRating from '../components/StarRating';\nimport {MdInfo} from \"react-icons/md\";\nimport {TbWorld} from \"react-icons/tb\";\nimport {FaShoppingCart} from \"react-icons/fa\";\nimport {RiTimeLine} from \"react-icons/ri\";\nimport {BiCheck} from \"react-icons/bi\";\nimport {Link} from \"react-router-dom\";\nimport { course_images } from \"../utils/images\";\nimport { logout, useAuth } from '../auth';\nimport ErrorModal from '../components/ErrorModal';\nimport TokenExpiredModal from '../components/TokenExpiredModal';\nimport SuccessModal from '../components/SuccessModal';\n\nconst SingleCoursePage = () => {\n    const {id} = useParams();\n    const [category, setCategory] = useState()\n    const [user, setUser] = useState()\n    const [course, setCourse] = useState()\n    const [duration, setDuration] = useState()\n    const [showModalTokenExpired, setShowModalTokenExpired] = useState(false);\n    const [showModalError, setShowModalError] = useState(false);\n    const [showModalSuccess, setShowModalSuccess] = useState(false);\n    const [showModalOwner, setShowModalOwner] = useState(false);\n    \n    const [student, setStudent] = useState()\n    const history = useHistory()\n    const [logged]=useAuth();\n\n\n    const token=localStorage.getItem('REACT_TOKEN_AUTH_KEY')\n    const requestOptionsStudent ={\n        method: 'GET',\n        headers: {\n            'content-type':'application/json',\n            'Authorization': `Bearer ${JSON.parse(token)}`\n        }\n    }\n\n    useEffect(\n        ()=>{\n            fetch('/auth/actual-user', requestOptionsStudent)\n            .then(res=>res.json())\n            .then(data=>{\n                setStudent(data)\n            })\n            .catch(err=>console.log(err))\n        },[]\n    );\n\n    useEffect(\n      ()=>{\n          fetch(`/category/categoryCourse/${id}`)\n          .then(res=>res.json())\n          .then(data=>{\n              setCategory(data)\n          })\n          .catch(err=>console.log(err))\n      },[]\n  );\n\n  useEffect(\n    ()=>{\n        fetch(`/tutorial/duration-tutorials/${id}`)\n        .then(res=>res.json())\n        .then(data=>{\n            setDuration(data)\n        })\n        .catch(err=>console.log(err))\n    },[]\n);\n\n    useEffect(\n      ()=>{\n          fetch(`/auth/userCourse/${id}`)\n          .then(res=>res.json())\n          .then(data=>{\n              setUser(data)\n          })\n          .catch(err=>console.log(err))\n      },[]\n  );\n\n  useEffect(\n    ()=>{\n        fetch(`/course/course/${id}`)\n        .then(res=>res.json())\n        .then(data=>{\n            setCourse(data)\n        })\n        .catch(err=>console.log(err))\n    },[]\n);\n  \nconst enrollCourse = () => {\n\n  const token = localStorage.getItem('REACT_TOKEN_AUTH_KEY');\n  if(student){\n    const data = {\"student_id\": student.id, \"course_id\": course.id, \"is_finished\": 0}\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n        'content-type': 'application/json',\n        'Authorization': `Bearer ${JSON.parse(token)}`\n    },\n    body: JSON.stringify(data)\n  }\n\n  fetch('/enrolled_course/enrolled_courses', requestOptions)\n  .then(async res => {\n      let response = await res.json()\n      if(response.msg == \"Token has expired\"){\n        logout();\n        setShowModalTokenExpired(true);\n      }\n      else if(response.status == 1){\n        history.push('/my-profile')\n      }\n      else if(response.status == 2){\n        setShowModalSuccess(true)\n      }\n      else if(response.status == 3){\n        setShowModalOwner(true)\n      }\n      else{\n        setShowModalError(true)\n      }       \n    })\n    .then(data => {})\n    .catch(err => console.log(err))\n  }\n  else{\n    logout();\n    setShowModalTokenExpired(true);\n  }\n}\n\n  return (\n    <SingleCourseWrapper>\n      {showModalTokenExpired?<TokenExpiredModal/>:null}\n      {showModalError?<ErrorModal/>:null}\n      {showModalSuccess?<SuccessModal content=\"You already enrolled this course.\"/>:null}\n      {showModalOwner?<ErrorModal content=\"You are owning this course.\"/>:null}\n      <div className='course-intro mx-auto grid'>\n        <div className='course-img'>\n          <img src = {course?.course_image? course?.course_image : course_images.image} alt = {course?.name} className=\"img\"/>\n        </div>\n        <div className='course-details'>\n          <div className='course-category bg-white text-dark text-capitalize fw-6 fs-12 d-inline-block'>{category?.name}</div>\n          <div className='course-head'>\n            <h5>{course?.name}</h5>\n          </div>\n          <div className='course-body'>\n            <p className='course-para fs-18'>{course?.description}</p>\n            <div className='course-rating flex'>\n              <span className='rating-star-val fw-8 fs-16'>3</span>\n              <StarRating rating_star={3} />\n              <span className='rating-count fw-5 fs-14'>(5)</span>\n              <span className='students-count fs-14'>1000</span>\n            </div>\n\n            <ul className='course-info'>\n              <li>\n                <span className='fs-14'>Created by <span className='fw-6 opacity-08'><Link to = {`/users/${user?.id}`}>{user?.username}</Link></span></span>\n              </li>\n              <li className='flex'>\n                <span><MdInfo /></span>\n                <span className='fs-14 course-info-txt fw-5'>Last updated {course?.updated_date}</span>\n              </li>\n              <li className='flex'>\n                <span><TbWorld /></span>\n                <span className='fs-14 course-info-txt fw-5'>{course?.language}</span>\n              </li>\n              <li className='flex'>\n                <span><RiTimeLine /></span>\n                <span className='fs-14 course-info-txt fw-5'>{duration}</span>\n              </li>\n            </ul>\n          </div>\n\n          <div className='course-foot'>\n            <div className='course-price'>\n              {!course?.is_free?<div><span className='new-price fs-26 fw-8'>{course?.discounted_price}</span>\n              <span className='old-price fs-26 fw-6'>{course?.actual_price}</span></div>:<span className='free-price fs-26 fw-8'>Free</span>}\n              \n            </div>\n          </div>\n\n          <div className='course-btn'>\n            {logged?<Link to=\"#\" onClick={()=>{enrollCourse()}} className='add-to-cart-btn d-inline-block fw-7 bg-purple'>\n              <FaShoppingCart /> Enroll\n            </Link>:<button className='add-to-cart-btn d-inline-block fw-7 button-disabled'>\n              <FaShoppingCart /> Enroll\n            </button>}\n            {logged?null:<p className=\"small mt-2 pt-1 mb-0\"><Link to=\"/login\" className={\"fw-bold\"} style={{color: '#c72cf2'}}>Log In</Link> to enroll in the course</p>}\n            \n          </div>\n        </div>\n      </div>\n\n      <div className='course-full bg-white text-dark'>\n        <div className='course-learn mx-auto'>\n          <div className='course-sc-title'>What you'll learn</div>\n          <ul className='course-learn-list grid'>\n            {\n              course?.what_you_will_learn && course?.what_you_will_learn.map((learnItem, idx) => {\n                return (\n                  <li key = {idx}>\n                    <span><BiCheck /></span>\n                    <span className='fs-14 fw-5 opacity-09'>{learnItem.title}</span>\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </div>\n\n        <div className='course-content mx-auto'>\n          <div className='course-sc-title'>Course content</div>\n          <ul className='course-content-list'>\n            {\n              course?.tutorials && course?.tutorials.map((contentItem, idx) => {\n                return (\n                  <li key = {idx}>\n                    <span>{contentItem.title}</span>\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </div>\n      </div>\n    </SingleCourseWrapper>\n  )\n}\n\nconst SingleCourseWrapper = styled.div`\n  background: var(--clr-dark);\n  color: var(--clr-white);\n  \n  .button-disabled{\n    color:#fff;\n    border-color: #a0a0a0;\n    background-color: #a0a0a0;\n    cursor:not-allowed !important;\n  }\n  .img{\n    margin-top: 10%;\n    min-width: 400px;\n  }\n  .course-intro{\n    padding: 40px 16px;\n    max-width: 992px;\n\n    .course-details{\n      padding-top: 20px;\n    }\n\n    .course-category{\n      padding: 0px 8px;\n      border-radius: 6px;\n    }\n\n    .course-head{\n      font-size: 38px;\n      line-height: 1.2;\n      padding: 12px 0 0 0;\n    }\n\n    .course-para{\n      padding: 12px 0;\n    }\n\n    .rating-star-val{\n      margin-right: 7px;\n      padding-bottom: 5px;\n      color: var(--clr-orange);\n    }\n\n    .students-count{\n      margin-left: 8px;\n    }\n\n    .rating-count{\n      margin-left: 6px;\n      color: #d097f6;\n    }\n\n    .course-info{\n\n      li{\n        margin-bottom: 2px;\n\n        &:nth-child(2){\n          margin-top: 10px;\n        }\n      }\n\n      .course-info-txt{\n        text-transform: capitalize;\n        margin-left: 8px;\n        margin-bottom: 4px;\n      }\n    }\n    .course-price{\n      margin-top: 12px;\n\n      .old-price{\n        color: #eceb98;\n        text-decoration: line-through;\n        margin-left: 10px;\n      }\n\n      .free-price{\n        color: #eceb98;\n        margin-left: 10px;\n      }\n    }\n\n    .course-btn{\n      margin-top: 16px;\n\n      .add-to-cart-btn{\n        padding: 12px 28px;\n        span{\n          margin-left: 12px;\n        }\n      }\n    }\n\n    @media screen and (min-width: 880px){\n      grid-template-columns: repeat(2, 1fr);\n      column-gap: 40px;\n\n      .course-details{\n        padding-top: 0;\n      }\n\n      .course-img{\n        order: 2;\n      }\n    }\n\n    @media screen and (min-width: 1400px){\n      grid-template-columns: 60% 40%;\n    }\n  }\n\n  .course-full{\n    padding: 40px 16px;\n\n    .course-sc-title{\n      font-size: 22px;\n      font-weight: 700;\n      margin: 12px 0;\n    }\n\n    .course-learn{\n      max-width: 992px;\n      border: 1px solid rgba(0, 0, 0, 0.2);\n      padding: 12px 28px 22px 28px;\n\n      .course-learn-list{\n\n        li{\n          margin: 5px 0;\n          display: flex;\n          span{\n\n            &:nth-child(1){\n              opacity: 0.95;\n              margin-right: 12px;\n            }\n          }\n        }\n\n        @media screen and (min-width: 992px){\n          grid-template-columns: repeat(2, 1fr);\n        }\n      }\n    }\n\n    .course-content{\n      max-width: 992px;\n      margin-top: 30px;\n      border: 1px solid rgba(0, 0, 0, 0.2);\n      padding: 12px 28px 22px 28px;\n\n      .course-content-list{\n\n        li{\n          background-color: #f7f9fa;\n          padding: 12px 18px;\n          border: 1px solid rgba(0, 0, 0, 0.2);\n          margin-bottom: 10px;\n          font-weight: 800;\n          font-size: 15px;\n        }\n      }\n    }\n  }\n`;\n\nexport default SingleCoursePage","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/EditCoursePage.js",["231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264"],"import React, {useEffect, useState} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport StarRating from '../components/StarRating';\nimport {MdCancel, MdInfo, MdOutlineCancel, MdReportGmailerrorred} from \"react-icons/md\";\nimport {TbWorld} from \"react-icons/tb\";\nimport {RiAddCircleFill, RiTimeLine} from \"react-icons/ri\";\nimport {Link} from \"react-router-dom\";\nimport { course_images } from \"../utils/images\";\nimport { useCategories } from '../context/categories_context';\nimport { logout, useAuth } from '../auth';\nimport ErrorModal from '../components/ErrorModal';\nimport TokenExpiredModal from '../components/TokenExpiredModal';\nimport { useForm } from 'react-hook-form';\nimport { Accordion, Button, Modal } from 'react-bootstrap';\nimport ReactPlayer from 'react-player';\nimport AnimatedCheckmark, { MODES } from 'react-animated-checkmark'\nimport LoginPage from './LoginPage'\nimport HomePage from './HomePage';\n\nconst LoggedInUser = (id) => {\n  id=id.id\n  const {register, watch, handleSubmit, setValue, reset, formState:{errors}} = useForm();\n    const {register:register1, watch:watch1, handleSubmit:handleSubmit1, setValue:setValue1, reset:reset1, formState:{errors:errors1}} = useForm();\n    const {register:register2, watch:watch2, handleSubmit:handleSubmit2, setValue:setValue2, reset:reset2, formState:{errors:errors2}} = useForm();\n    const [category, setCategory] = useState()\n    const [owner, setOwner] = useState()\n    const [course, setCourse] = useState()\n    const [duration, setDuration] = useState()\n    const [showModalTokenExpired, setShowModalTokenExpired] = useState(false);\n    const [showModalError, setShowModalError] = useState(false);\n    const [showErrorNameTaken, setShowErrorNameTaken] = useState(false)\n    const categories = useCategories();\n    const [actualUser, setActualUser] = useState()\n    const history = useHistory()\n    const [show, setShow] = useState(false)\n    const closeModal = () => {\n      setShow(false)\n  }\n  const showModal = () => {\n    setShow(true)\n}\n    const token=localStorage.getItem('REACT_TOKEN_AUTH_KEY')\n    const requestOptionsStudent ={\n        method: 'GET',\n        headers: {\n            'content-type':'application/json',\n            'Authorization': `Bearer ${JSON.parse(token)}`\n        }\n    }\n\n    useEffect(\n        ()=>{\n            fetch('/auth/actual-user', requestOptionsStudent)\n            .then(res=>res.json())\n            .then(data=>{\n                setActualUser(data)\n            })\n            .catch(err=>console.log(err))\n        },[]\n    );\n\n    useEffect(\n      ()=>{\n          fetch(`/category/categoryCourse/${id}`)\n          .then(res=>res.json())\n          .then(data=>{\n              setCategory(data)\n              \n          })\n          .catch(err=>console.log(err))\n      },[]\n  );\n\n  useEffect(\n    ()=>{\n        fetch(`/tutorial/duration-tutorials/${id}`)\n        .then(res=>res.json())\n        .then(data=>{\n            setDuration(data)\n        })\n        .catch(err=>console.log(err))\n    },[]\n);\n    const getDuration = () => {\n      fetch(`/tutorial/duration-tutorials/${id}`)\n        .then(res=>res.json())\n        .then(data=>{\n            setDuration(data)\n        })\n        .catch(err=>console.log(err))\n    }\n    useEffect(\n      ()=>{\n          fetch(`/auth/userCourse/${id}`)\n          .then(res=>res.json())\n          .then(data=>{\n              setOwner(data)\n          })\n          .catch(err=>console.log(err))\n      },[]\n  );\n\n  useEffect(\n    ()=>{\n        fetch(`/course/course/${id}`)\n        .then(res=>res.json())\n        .then(data=>{\n            setCourse(data)\n            \n        })\n        .catch(err=>console.log(err))\n    },[]\n);\n\nuseEffect(\n  ()=>{\n    setValue(\"category\", category?.id)\n    setValue(\"name\", course?.name)\n    setValue(\"description\", course?.description)\n  }\n);\n\n  const getCourse = () => {\n      fetch(`/course/course/${id}`)\n        .then(res=>res.json())\n        .then(data=>{\n            setCourse(data)\n        })\n        .catch(err=>console.log(err))\n  }\n\n\n  const requestOptionsDelete={\n    method:'DELETE',\n    headers:{\n        'content-type':'application/json',\n        'Authorization':`Bearer ${JSON.parse(token)}`\n    }\n  }\n\n  \n\n  const deleteLearnItem = (id) => {\n    fetch(`/topic/topic/${id}`, requestOptionsDelete)\n        .then(res=>res.json())\n        .then(data=>{\n          if(data.msg == \"Token has expired\" | data.msg == \"Not enough segments\"){\n            logout();\n            setShowModalTokenExpired(true);\n          }\n          else if(data.status == 1){\n            getCourse()\n          }\n          else{\n            setShowModalError(true)\n          }\n        })\n        .catch(err=>console.log(err))\n  }\n\n  const deleteTutorial = (id) => {\n    fetch(`/tutorial/tutorial/${id}`, requestOptionsDelete)\n        .then(res=>res.json())\n        .then(data=>{\n          if(data.msg == \"Token has expired\" | data.msg == \"Not enough segments\"){\n            logout();\n            setShowModalTokenExpired(true);\n          }\n          else if(data.status == 1){\n            getDuration()\n            getCourse()\n          }\n          else{\n            setShowModalError(true)\n          }\n        \n        })\n        .catch(err=>console.log(err))\n    \n  }\n\n  const deleteCourse = (id) => {\n    fetch(`/course/course/${id}`, requestOptionsDelete)\n    .then(res=>res.json())\n    .then(data=>{\n      if(data.msg == \"Token has expired\" | data.msg == \"Not enough segments\"){\n        closeModal()\n        logout();\n        setShowModalTokenExpired(true);\n      }\n      else if(data.status == 1){\n        history.push('/my-profile')\n      }\n      else{\n        closeModal()\n        setShowModalError(true)\n      }\n    })\n    .catch(err=>console.log(err))\n\n  }\n  \n  const createTopic = (data) => {\n    data[\"course\"] = id;\n\n    const requestOptionsCreateTopic = {\n      method: 'POST',\n      headers: {\n          'content-type': 'application/json',\n          'Authorization': `Bearer ${JSON.parse(token)}`\n      },\n      body: JSON.stringify(data)\n    }\n\n    fetch('/topic/topics', requestOptionsCreateTopic)\n    .then(res=>res.json())\n    .then(data => {\n      if(data.msg == \"Token has expired\" | data.msg == \"Not enough segments\"){\n        logout();\n        setShowModalTokenExpired(true);\n      }\n      else if(data.status == 1){\n        getCourse()\n        setValue1(\"title\", \"\");\n        setMode(MODES.SUCCESS)\n        loading()\n        getCourse()\n      }\n      else{\n        setShowModalError(true)\n      }\n    })\n    .catch(err => console.log(err))\n\n}\n\n  const createTutorial = (data) => {\n    data[\"course\"] = id;\n        \n        const requestOptions = {\n          method: 'POST',\n          headers: {\n              'content-type': 'application/json',\n              'Authorization': `Bearer ${JSON.parse(token)}`\n          },\n          body: JSON.stringify(data)\n        }\n        \n        fetch('/tutorial/tutorials', requestOptions)\n        .then(res => res.json())\n        .then(data => {\n          if(data.msg == \"Token has expired\" | data.msg == \"Not enough segments\"){\n            logout();\n            setShowModalTokenExpired(true);\n          }\n          else if(data.status == 1){\n            setValue2(\"title\", \"\");\n            setValue2(\"video\", \"\");\n            setMode1(MODES.SUCCESS)\n            getDuration()\n            getCourse()\n            loading()\n            \n          }\n          else{\n            setShowModalError(true)\n          }\n        })\n        .catch(err => console.log(err))\n  }\n\nconst [mode, setMode] = useState(MODES.LOADING)\nconst [mode1, setMode1] = useState(MODES.LOADING)\n    function loading(){\n      setTimeout(function(){ \n          setMode(MODES.LOADING)\n          setMode1(MODES.LOADING)\n      }, 2000);\n  }\n  const updateCourse = (data) => {\n    \n    data[\"id\"] = id;\n    const requestOptionsUpdate={\n      method:'PUT',\n        headers:{\n            'content-type':'application/json',\n            'Authorization':`Bearer ${JSON.parse(token)}`\n        },\n        body:JSON.stringify(data)\n    }\n\n    fetch(`/course/course/${id}`, requestOptionsUpdate)\n    .then(res=>res.json())\n    .then(data=>{\n      if(data.status == 1){\n        const reload =window.location.reload()\n        reload()\n      }\n      else if(data.msg == \"Token has expired\" | data.msg == \"Not enough segments\"){\n        logout();\n        setShowModalTokenExpired(true);\n      }\n      else if(data.status == 0){\n        setShowErrorNameTaken(true);\n      }\n      else{\n        setShowModalError(true);\n      }\n         \n    })\n    .catch(err=>console.log(err))\n   \n    \n  }\n  return (\n    <>\n    {(actualUser?.id == owner?.id)?<SingleCourseWrapper>\n      {showModalTokenExpired?<TokenExpiredModal/>:null}\n      {showModalError?<ErrorModal/>:null}\n      \n      <Modal\n              size=\"lg\"\n              show={show}\n              onHide={closeModal}\n              scrollable={true}\n              centered\n            >\n              <ModalWrapper>\n              <Modal.Header closeButton>\n                <Modal.Title>\n                  <h3 className='wait'>\n                    Wait..\n                  </h3>\n                </Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <h3 className='content'>\n                  Are you sure you want to delete the course?\n                </h3>\n                \n              </Modal.Body>\n              <Modal.Footer>\n                <ButtonWrapper>\n                  <Button variant=\"outline-dark\" className='save__button' onClick={() => {deleteCourse(id)}}>\n                    Delete\n                  </Button>\n                  </ButtonWrapper>\n              </Modal.Footer>\n              </ModalWrapper>\n            </Modal>\n            \n      <div className='course-intro mx-auto grid'>\n        <div className='course-img'>\n            <div className='course-category bg-white text-dark text-capitalize fw-6 fs-12 d-inline-block'>\n              Editing course\n            </div>\n          <img src = {course?.course_image? course?.course_image : course_images.image} alt = {course?.name} className=\"img\"/>\n        </div>\n        <div className='course-details'>\n        <form>\n        <SelectWrapper>\n            <div className='select mt-2'>\n              <select defaultValue={\"\"} \n              {...register(\"category\", { required: true })}\n              >\n                  <option value={\"\"} disabled>\n                      Category\n                  </option>\n                  {\n                    categories?.map((category) => (\n                      <option key={category.id} value={category.id}>\n                          {category.name}\n                      </option>))\n                  }\n              </select>\n            </div>\n            {errors.category && errors.category?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">Category is required.</p></div>}\n        </SelectWrapper>\n\n          <div className='course-head'>\n            <InputWrapper>\n              \n              <div className=\"form__group field\">\n                <input type=\"text\" className=\"form__field\" placeholder=\"Name of course\" name=\"name\" id='name' required \n                {...register(\"name\", { required: true })}\n                />\n                <label htmlFor=\"name\" className=\"form__label\">Name of course</label>\n              </div>\n              {errors.name && errors.name?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">Name is required.</p></div>}\n              {showErrorNameTaken?<div className=\"error-response\"><MdCancel/> <p className=\"error\">NAME OF COURSE TAKEN.</p></div>:\"\"}\n              <div className=\"form__group field\">\n                <input type=\"text\" className=\"form__field\" placeholder=\"Description\" name=\"description\" id='description' required \n                {...register(\"description\", { required: true })}\n                />\n                <label htmlFor=\"description\" className=\"form__label\">Description</label>\n              </div>\n              {errors.description && errors.description?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">Description is required.</p></div>}\n\n            </InputWrapper>\n          </div>\n          <div className='course-body'>\n            \n            <div className='course-rating flex'>\n              <span className='rating-star-val fw-8 fs-16'>3</span>\n              <StarRating rating_star={3} />\n              <span className='rating-count fw-5 fs-14'>(5)</span>\n              <span className='students-count fs-14'>1000</span>\n            </div>\n\n            <ul className='course-info'>\n              <li>\n                <span className='fs-14'>Created by <span className='fw-6 opacity-08 you'><Link to = {`/my-profile`}>You</Link></span></span>\n              </li>\n              <li className='flex'>\n                <span><MdInfo /></span>\n                <span className='fs-14 course-info-txt fw-5'>Last updated {course?.updated_date}</span>\n              </li>\n              <li className='flex'>\n                <span><TbWorld /></span>\n                <span className='fs-14 course-info-txt fw-5'>{course?.language}</span>\n              </li>\n              <li className='flex'>\n                <span><RiTimeLine /></span>\n                <span className='fs-14 course-info-txt fw-5'>{duration}</span>\n              </li>\n            </ul>\n          </div>\n\n          <div className='course-foot'>\n            <div className='course-price'>\n              {!course?.is_free?<div><span className='new-price fs-26 fw-8'>{course?.discounted_price}</span>\n              <span className='old-price fs-26 fw-6'>{course?.actual_price}</span></div>:<span className='free-price fs-26 fw-8'>Free</span>}\n              \n            </div>\n          </div>\n\n          <div className='course-btn'>\n            <Link to=\"#\" onClick={handleSubmit(updateCourse)} className='add-to-cart-btn d-inline-block fw-7 bg-purple'>\n              Save\n            </Link>\n            <Link to=\"#\" onClick={()=>{showModal()}} className='delete-btn d-inline-block'>\n              Delete\n            </Link>\n          </div>\n          </form>\n        </div>\n      </div>\n\n      <div className='course-full bg-white text-dark'>\n        <div className='course-learn mx-auto'>\n          <form>\n          <div className='course-sc-title'>What you'll learn</div>\n          <ul className='course-learn-list grid'>\n            {\n              course?.what_you_will_learn && course?.what_you_will_learn.map((learnItem, idx) => {\n                return (\n                  <li key = {idx}>\n                    <Link to=\"#\" onClick={()=>{deleteLearnItem(learnItem.id)}}>\n                        <MdOutlineCancel className='delete-icon'/>\n                    </Link>\n                    <span className='fs-18 fw-5 opacity-09 learn-item'>{learnItem.title}</span>\n                    \n                  </li>\n                )\n              })\n            }\n            \n          </ul>\n          <BlackInputWrapper>\n              <div className=\"form__group field\">\n                <input type=\"text\" className=\"form__field\" placeholder=\"Learn Item\" name=\"learnItem\" id='learnItem' required\n                  {...register1(\"title\", { required: true })}\n                />\n                <label htmlFor=\"learnItem\" className=\"form__label\">Learn Item</label>\n              </div>\n              {errors1.title && errors1.title?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">Learn item is required.</p></div>}\n            </BlackInputWrapper>\n          <div className='topic-btn'>\n            <Link to=\"#\" className='add-to-cart-btn d-inline-block fw-7 bg-purple mt-5' onClick={handleSubmit1(createTopic)}>\n              <RiAddCircleFill /> Add \n            </Link>\n            <p className='checkMark'><AnimatedCheckmark mode={mode} baseColor='#ab12e3' collapseFactor={1} size={40}/></p>\n          </div>\n          </form>\n        </div>\n\n        <div className='course-content mx-auto'>\n          <div className='course-sc-title'>Course content</div>\n          <ul className='course-content-list'>\n            <Accordion defaultActiveKey=\"0\">\n                {\n                    course?.tutorials && course?.tutorials.map((contentItem, idx) => {\n                        return (\n                            <div className='d-flex'>\n                                <Link to=\"#\" onClick={()=>{deleteTutorial(contentItem.id)}}>\n                                    <MdOutlineCancel className='delete-icon-tutorial'/>\n                                </Link>\n                            \n                            <Accordion.Item eventKey={idx} key={idx} className=\"mt-2 content-item\">\n                                <Accordion.Header><div className='content-title'>{idx+1}. {contentItem.title}</div></Accordion.Header>\n                                <Accordion.Body className=\"content-body\">\n                                    <ReactPlayer \n                                        width=\"100%\"\n                                        url={contentItem.video}\n                                        controls\n                                    />\n                                </Accordion.Body>\n                            </Accordion.Item>\n                            </div>\n                            \n                        )\n                    })\n                }\n            </Accordion>\n          </ul>\n          <BlackInputWrapper>\n            <div className=\"form__group field\">\n              <input type=\"text\" className=\"form__field\" placeholder=\"Title\" name=\"title\" id='title' required\n                {...register2(\"title\", { required: true })}\n              />\n              <label htmlFor=\"title\" className=\"form__label\">Title</label> \n            </div>\n            {errors2.title && errors2.title?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">Title is required.</p></div>}\n\n            <div className=\"form__group field mt-4\">\n              <input type=\"text\" className=\"form__field\" placeholder=\"Youtube url\" name=\"video\" id='video' required\n                {...register2(\"video\", { required: true, pattern:/^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/})}\n              />\n              <label htmlFor=\"video\" className=\"form__label\">Youtube URL</label> \n            </div>\n            {errors2.video && errors2.video?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">URL is required.</p></div>}\n            {errors2.video && errors2.video?.type !==\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">Invalid URL.</p></div>}\n            \n          </BlackInputWrapper>\n          <div className='topic-btn'>\n            <Link to=\"#\" className='add-to-cart-btn d-inline-block fw-7 bg-purple mt-5' onClick={handleSubmit2(createTutorial)}>\n              <RiAddCircleFill /> Add \n            </Link>\n            <p className='checkMark'><AnimatedCheckmark mode={mode1} baseColor='#ab12e3' collapseFactor={1} size={40}/></p>\n          </div>\n        </div>\n      </div>\n    </SingleCourseWrapper>:<HomePage/>}\n    </>\n\n  )\n}\n\nconst EditCoursePage = () => {\n    const {id} = useParams();\n    const [logged]=useAuth();\n    const token=localStorage.getItem('REACT_TOKEN_AUTH_KEY')\n    if(!token){\n      logout()\n    }\n  return (\n    <>\n    {logged?<LoggedInUser id={id}/>:<LoginPage/>}\n    </>\n  )\n}\nconst ButtonWrapper = styled.div`\n.save__button{\n  width: 150px;\n  height: 50px;\n  border: 0px;\n  color: white;\n  font-weight: bold;\n  font-size: 1.5rem;\n  background: #a024c9;\n  transition: 0.5s;\n  :hover{\n      background-color: #c21b4e;\n  }\n}\n`\nconst ModalWrapper = styled.div`\n  .wait, .content{\n    color: #a024c9;\n    font-weight: 700;\n  }\n\n  .wait{\n    font-size: 2rem;\n    padding: 5px 0px 0px 20px;\n  }\n  .content{\n    font-size: 1.8rem;\n    padding: 20px 20px;\n  }\n\n  .save__button{\n\n  }\n`\n\nconst BlackInputWrapper = styled.div`\n.error-response{\n  display: flex;\n  color: red;\n  font-weight: bold;\n  font-size: 2rem;\n  margin-left: 2rem;\n}\n.error-section{\n  margin-top: 0.5rem;\n  display: flex;\n  color: red;\n  height: 0.5rem;\n  font-weight: bold;\n}\n.error{\n  margin-left: 5px;\n  font-size: 1.1rem;\n}\n.form__group {\n  position: relative;\n  padding: 15px 0 0;\n  margin-top: 5px;\n  margin-left: 0px;\n  width: 90%;\n}\n\n.form__field {\n  font-family: inherit;\n  width: 100%;\n  border: 0;\n  border-bottom: 2px solid black;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 7px 0;\n  background: transparent;\n  transition: border-color 0.2s;\n\n  &::placeholder {\n    color: transparent;\n  }\n\n  &:placeholder-shown ~ .form__label {\n    font-size: 1.3rem;\n    cursor: text;\n    top: 30px;\n  }\n}\n\n.form__label {\n  position: absolute;\n  top: 0px;\n  display: block;\n  transition: 0.2s;\n  font-size: 1rem;\n  color: #9b9b9b;\n}\n\n.form__field:focus {\n  ~ .form__label {\n    position: absolute;\n    top: 0px;\n    display: block;\n    transition: 0.2s;\n    font-size: 1rem;\n    color: black;\n       \n  }\n  padding-bottom: 6px; \n  border-width: 3px;\n  border-image: linear-gradient(to right, #ae15bf, #e955fa);\n  border-image-slice: 1;\n}\n\n.form__field{\n  &:required,&:invalid { box-shadow:none; }\n}\n`\nconst InputWrapper = styled.div`\n.error-response{\n    display: flex;\n    color: red;\n    font-weight: 600;\n    font-size: 2rem;\n    margin-top: 5px;\n}\n.error-section{\n    margin-top: 0.5rem;\n    display: flex;\n    color: red;\n    height: 0.5rem;\n    font-weight: bold;\n}\n.error{\n    margin-left: 5px;\n    font-size: 1.1rem;\n    margin-top: 5px;\n}\n.icon{\n  margin-top: -10px;\n  width: 1.7rem;\n}\n.form__group {\n    position: relative;\n    padding: 15px 0 0;\n    margin-top: 5px;\n    margin-left: 0px;\n    width: 100%;\n  }\n  \n  .form__field {\n    font-family: inherit;\n    width: 100%;\n    border: 0;\n    border-bottom: 2px solid #9b9b9b;\n    outline: 0;\n    font-size: 1.3rem;\n    color: white;\n    padding: 7px 0;\n    background: transparent;\n    transition: border-color 0.2s;\n  \n    &::placeholder {\n      color: transparent;\n    }\n  \n    &:placeholder-shown ~ .form__label {\n      font-size: 1.3rem;\n      cursor: text;\n      top: 30px;\n    }\n  }\n  \n  .form__label {\n    position: absolute;\n    top: 10px;\n    display: block;\n    transition: 0.2s;\n    font-size: 1rem;\n    color: #9b9b9b;\n  }\n  \n  .form__field:focus {\n    ~ .form__label {\n      position: absolute;\n      top: 10px;\n      display: block;\n      transition: 0.2s;\n      font-size: 1rem;\n      color: white;\n         \n    }\n    padding-bottom: 6px; \n    border-width: 3px;\n    border-image: linear-gradient(to right, white,white);\n    border-image-slice: 1;\n  }\n\n  .form__field{\n    &:required,&:invalid { box-shadow:none; }\n  }\n`\n\nconst SelectWrapper = styled.div`\n.error-response{\n  display: flex;\n  color: red;\n  font-weight: bold;\n  font-size: 2rem;\n  margin-left: 2rem;\n}\n.error-section{\n  margin-top: 0.5rem;\n  display: flex;\n  color: red;\n  height: 0.5rem;\n  font-weight: bold;\n}\n.error{\n  margin-left: 5px;\n  font-size: 1.1rem;\n}\nselect {\n  appearance: none;\n  outline: 1;\n  border: 1;\n  box-shadow: none;\n  flex: 1;\n  font-size: 0.8em;\n  padding: 0 1em;\n  color: #9b9b9b;\n  background-color: #1C1D1F;\n  background-image: none;\n  cursor: pointer;\n  border: 2px solid #9b9b9b;\n  \n}\n\nselect::-ms-expand {\n  display: none;\n}\n\n.select {\n  width: 35%;\n  position: relative;\n  display: flex;\n  height: 1.6em;\n  border-radius: .15em;\n  overflow: hidden;\n  color: #1C1D1F;\n}\n\n.select::after {\n  content: '\\\\25BC';\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 0.1em;\n  background-color: #9b9b9b;\n  transition: .5s all ease;\n  pointer-events: none;\n}\n\n.select:hover::after {\n  color: white;\n}\n\n`\n\nconst SingleCourseWrapper = styled.div`\n  background: var(--clr-dark);\n  color: var(--clr-white);\n\n  .topic-btn{\n    display:inline-table;\n      .add-to-cart-btn{\n        font-size: 0.8em;\n        margin-right: 10px;\n        padding: 10px 15px;\n        color: white;\n      }\n    }\n  .checkMark{\n    display:table-cell\n  }\n  .you{\n    color: white;\n    transition: 0.3s ease;\n    :hover{\n      color: #d633e8;\n    }\n  }\n  .content-item{\n    border: 1px solid #878787;\n    width: 100%;\n    }\n    .content-body{\n    background:#ededed;\n    }\n    .content-title{\n    font-weight: bold;\n    }\n\n  .learn-item{\n      margin-top: 7px;\n  }\n\n  .delete-icon{\n    margin-right: 10px;\n    transition: 0.2s ease;\n    font-size: 21px;\n    font-weight: 500;\n    :hover{\n        color: #bf3434;\n    }\n  }\n  .delete-icon-tutorial{\n    margin-right: 10px;\n    margin-top: 21px;\n    transition: 0.2s ease;\n    font-size: 21px;\n    font-weight: 500;\n    :hover{\n        color: #bf3434;\n    }\n  }\n\n  .button-disabled{\n    color:#fff;\n    border-color: #a0a0a0;\n    background-color: #a0a0a0;\n    cursor:not-allowed !important;\n  }\n  .img{\n    \n    min-width: 400px;\n  }\n  .course-intro{\n    padding: 40px 16px;\n    max-width: 992px;\n\n    .course-details{\n      padding-top: 20px;\n    }\n\n    .course-category{\n        margin-top: 5%;\n        margin-bottom: 2%;\n      padding: 0px 8px;\n      border-radius: 6px;\n    }\n\n    .course-head{\n      font-size: 38px;\n      line-height: 1.2;\n      padding: 0 0 20px 0;\n    }\n\n    .course-para{\n      padding: 12px 0;\n    }\n\n    .rating-star-val{\n      margin-right: 7px;\n      padding-bottom: 5px;\n      color: var(--clr-orange);\n    }\n\n    .students-count{\n      margin-left: 8px;\n    }\n\n    .rating-count{\n      margin-left: 6px;\n      color: #d097f6;\n    }\n\n    .course-info{\n\n      li{\n        margin-bottom: 2px;\n\n        &:nth-child(2){\n          margin-top: 10px;\n        }\n      }\n\n      .course-info-txt{\n        text-transform: capitalize;\n        margin-left: 8px;\n        margin-bottom: 4px;\n      }\n    }\n    .course-price{\n      margin-top: 12px;\n\n      .old-price{\n        color: #eceb98;\n        text-decoration: line-through;\n        margin-left: 10px;\n      }\n\n      .free-price{\n        color: #eceb98;\n        margin-left: 10px;\n      }\n    }\n\n    .course-btn{\n      margin-top: 16px;\n\n      .add-to-cart-btn{\n        padding: 12px 28px;\n        span{\n          margin-left: 12px;\n        }\n      }\n      .delete-btn{\n        margin-left: 25px;\n        padding: 12px 28px;\n        border: 1px solid white;\n        transition: 0.5s ease;\n        :hover{\n            background: #700808;\n        }\n        span{\n          margin-left: 12px;\n        }\n      }\n    }\n\n    @media screen and (min-width: 880px){\n      grid-template-columns: repeat(2, 1fr);\n      column-gap: 40px;\n\n      .course-details{\n        padding-top: 0;\n      }\n\n      .course-img{\n        order: 2;\n      }\n    }\n\n    @media screen and (min-width: 1400px){\n      grid-template-columns: 60% 40%;\n    }\n  }\n\n  .course-full{\n    padding: 40px 16px;\n\n    .course-sc-title{\n      font-size: 22px;\n      font-weight: 700;\n      margin: 12px 0;\n    }\n\n    .course-learn{\n      max-width: 992px;\n      border: 1px solid rgba(0, 0, 0, 0.2);\n      padding: 12px 28px 22px 28px;\n\n      .course-learn-list{\n        li{\n          margin: 5px 0;\n          display: flex;\n          \n          span{\n\n            &:nth-child(1){\n              opacity: 0.95;\n              margin-right: 12px;\n            }\n          }\n        }\n\n        @media screen and (min-width: 992px){\n          grid-template-columns: repeat(2, 1fr);\n        }\n      }\n    }\n\n    .course-content{\n      max-width: 992px;\n      margin-top: 30px;\n      border: 1px solid rgba(0, 0, 0, 0.2);\n      padding: 12px 28px 22px 28px;\n\n      .course-content-list{\n\n        li{\n          background-color: #f7f9fa;\n          padding: 12px 18px;\n          border: 1px solid rgba(0, 0, 0, 0.2);\n          margin-bottom: 10px;\n          font-weight: 800;\n          font-size: 15px;\n        }\n      }\n    }\n  }\n`;\n\nexport default EditCoursePage","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/UserPage.js",["265","266","267","268","269","270","271","272","273"],"import React, {useEffect, useState} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport StarRating from '../components/StarRating';\nimport {MdInfo} from \"react-icons/md\";\nimport {TbWorld} from \"react-icons/tb\";\nimport {FaShoppingCart} from \"react-icons/fa\";\nimport {RiTimeLine} from \"react-icons/ri\";\nimport {BiCheck} from \"react-icons/bi\";\nimport {Link} from \"react-router-dom\";\nimport { course_images } from \"../utils/images\";\nimport { logout, useAuth } from '../auth';\nimport ErrorModal from '../components/ErrorModal';\nimport TokenExpiredModal from '../components/TokenExpiredModal';\nimport SuccessModal from '../components/SuccessModal';\n\nconst SingleCoursePage = () => {\n    const {id} = useParams();\n    const [category, setCategory] = useState()\n    const [user, setUser] = useState()\n    const [course, setCourse] = useState()\n    const [duration, setDuration] = useState()\n    const [showModalTokenExpired, setShowModalTokenExpired] = useState(false);\n    const [showModalError, setShowModalError] = useState(false);\n    const [showModalSuccess, setShowModalSuccess] = useState(false);\n    const [showModalOwner, setShowModalOwner] = useState(false);\n\n    const [student, setStudent] = useState()\n    const history = useHistory()\n    const [logged]=useAuth();\n\n\n    const token=localStorage.getItem('REACT_TOKEN_AUTH_KEY')\n    const requestOptionsStudent ={\n        method: 'GET',\n        headers: {\n            'content-type':'application/json',\n            'Authorization': `Bearer ${JSON.parse(token)}`\n        }\n    }\n\n    useEffect(\n        ()=>{\n            fetch('/auth/actual-user', requestOptionsStudent)\n            .then(res=>res.json())\n            .then(data=>{\n                setStudent(data)\n            })\n            .catch(err=>console.log(err))\n        },[]\n    );\n\n    useEffect(\n      ()=>{\n          fetch(`/category/categoryCourse/${id}`)\n          .then(res=>res.json())\n          .then(data=>{\n              setCategory(data)\n          })\n          .catch(err=>console.log(err))\n      },[]\n  );\n\n  useEffect(\n    ()=>{\n        fetch(`/tutorial/duration-tutorials/${id}`)\n        .then(res=>res.json())\n        .then(data=>{\n            setDuration(data)\n        })\n        .catch(err=>console.log(err))\n    },[]\n);\n\n    useEffect(\n      ()=>{\n          fetch(`/auth/userCourse/${id}`)\n          .then(res=>res.json())\n          .then(data=>{\n              setUser(data)\n          })\n          .catch(err=>console.log(err))\n      },[]\n  );\n\n  useEffect(\n    ()=>{\n        fetch(`/course/course/${id}`)\n        .then(res=>res.json())\n        .then(data=>{\n            setCourse(data)\n        })\n        .catch(err=>console.log(err))\n    },[]\n);\n\nconst enrollCourse = () => {\n\n  const token = localStorage.getItem('REACT_TOKEN_AUTH_KEY');\n  if(student){\n    const data = {\"student_id\": student.id, \"course_id\": course.id, \"is_finished\": 0}\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n        'content-type': 'application/json',\n        'Authorization': `Bearer ${JSON.parse(token)}`\n    },\n    body: JSON.stringify(data)\n  }\n\n  fetch('/enrolled_course/enrolled_courses', requestOptions)\n  .then(async res => {\n      let response = await res.json()\n      if(response.msg == \"Token has expired\"){\n        logout();\n        setShowModalTokenExpired(true);\n      }\n      else if(response.status == 1){\n        history.push('/my-profile')\n      }\n      else if(response.status == 2){\n        setShowModalSuccess(true)\n      }\n      else if(response.status == 3){\n        setShowModalOwner(true)\n      }\n      else{\n        setShowModalError(true)\n      }\n    })\n    .then(data => {})\n    .catch(err => console.log(err))\n  }\n  else{\n    logout();\n    setShowModalTokenExpired(true);\n  }\n}\n\n  return (\n    <SingleCourseWrapper>\n      {showModalTokenExpired?<TokenExpiredModal/>:null}\n      {showModalError?<ErrorModal/>:null}\n      {showModalSuccess?<SuccessModal content=\"You already enrolled this course.\"/>:null}\n      {showModalOwner?<ErrorModal content=\"You are owning this course.\"/>:null}\n      <div className='course-intro mx-auto grid'>\n        <div className='course-img'>\n          <img src = {course?.course_image? course?.course_image : course_images.image} alt = {course?.name} className=\"img\"/>\n        </div>\n        <div className='course-details'>\n          <div className='course-category bg-white text-dark text-capitalize fw-6 fs-12 d-inline-block'>{category?.name}</div>\n          <div className='course-head'>\n            <h5>{course?.name}</h5>\n          </div>\n          <div className='course-body'>\n            <p className='course-para fs-18'>{course?.description}</p>\n            <div className='course-rating flex'>\n              <span className='rating-star-val fw-8 fs-16'>3</span>\n              <StarRating rating_star={3} />\n              <span className='rating-count fw-5 fs-14'>(5)</span>\n              <span className='students-count fs-14'>1000</span>\n            </div>\n\n            <ul className='course-info'>\n              <li>\n                <span className='fs-14'>Created by <span className='fw-6 opacity-08'><Link to = {`/users/${user?.id}`}>{user?.username}</Link></span></span>\n              </li>\n              <li className='flex'>\n                <span><MdInfo /></span>\n                <span className='fs-14 course-info-txt fw-5'>Last updated {course?.updated_date}</span>\n              </li>\n              <li className='flex'>\n                <span><TbWorld /></span>\n                <span className='fs-14 course-info-txt fw-5'>{course?.language}</span>\n              </li>\n              <li className='flex'>\n                <span><RiTimeLine /></span>\n                <span className='fs-14 course-info-txt fw-5'>{duration}</span>\n              </li>\n            </ul>\n          </div>\n\n          <div className='course-foot'>\n            <div className='course-price'>\n              {!course?.is_free?<div><span className='new-price fs-26 fw-8'>{course?.discounted_price}</span>\n              <span className='old-price fs-26 fw-6'>{course?.actual_price}</span></div>:<span className='free-price fs-26 fw-8'>Free</span>}\n\n            </div>\n          </div>\n\n          <div className='course-btn'>\n            {logged?<Link to=\"#\" onClick={()=>{enrollCourse()}} className='add-to-cart-btn d-inline-block fw-7 bg-purple'>\n              <FaShoppingCart /> Enroll\n            </Link>:<button className='add-to-cart-btn d-inline-block fw-7 button-disabled'>\n              <FaShoppingCart /> Enroll\n            </button>}\n            {logged?null:<p className=\"small mt-2 pt-1 mb-0\"><Link to=\"/login\" className={\"fw-bold\"} style={{color: '#c72cf2'}}>Log In</Link> to enroll in the course</p>}\n\n          </div>\n        </div>\n      </div>\n\n      <div className='course-full bg-white text-dark'>\n        <div className='course-learn mx-auto'>\n          <div className='course-sc-title'>What you'll learn</div>\n          <ul className='course-learn-list grid'>\n            {\n              course?.what_you_will_learn && course?.what_you_will_learn.map((learnItem, idx) => {\n                return (\n                  <li key = {idx}>\n                    <span><BiCheck /></span>\n                    <span className='fs-14 fw-5 opacity-09'>{learnItem.title}</span>\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </div>\n\n        <div className='course-content mx-auto'>\n          <div className='course-sc-title'>Course content</div>\n          <ul className='course-content-list'>\n            {\n              course?.tutorials && course?.tutorials.map((contentItem, idx) => {\n                return (\n                  <li key = {idx}>\n                    <span>{contentItem.title}</span>\n                  </li>\n                )\n              })\n            }\n          </ul>\n        </div>\n      </div>\n    </SingleCourseWrapper>\n  )\n}\n\nconst SingleCourseWrapper = styled.div`\n  background: var(--clr-dark);\n  color: var(--clr-white);\n  \n  .button-disabled{\n    color:#fff;\n    border-color: #a0a0a0;\n    background-color: #a0a0a0;\n    cursor:not-allowed !important;\n  }\n  .img{\n    margin-top: 10%;\n    min-width: 400px;\n  }\n  .course-intro{\n    padding: 40px 16px;\n    max-width: 992px;\n\n    .course-details{\n      padding-top: 20px;\n    }\n\n    .course-category{\n      padding: 0px 8px;\n      border-radius: 6px;\n    }\n\n    .course-head{\n      font-size: 38px;\n      line-height: 1.2;\n      padding: 12px 0 0 0;\n    }\n\n    .course-para{\n      padding: 12px 0;\n    }\n\n    .rating-star-val{\n      margin-right: 7px;\n      padding-bottom: 5px;\n      color: var(--clr-orange);\n    }\n\n    .students-count{\n      margin-left: 8px;\n    }\n\n    .rating-count{\n      margin-left: 6px;\n      color: #d097f6;\n    }\n\n    .course-info{\n\n      li{\n        margin-bottom: 2px;\n\n        &:nth-child(2){\n          margin-top: 10px;\n        }\n      }\n\n      .course-info-txt{\n        text-transform: capitalize;\n        margin-left: 8px;\n        margin-bottom: 4px;\n      }\n    }\n    .course-price{\n      margin-top: 12px;\n\n      .old-price{\n        color: #eceb98;\n        text-decoration: line-through;\n        margin-left: 10px;\n      }\n\n      .free-price{\n        color: #eceb98;\n        margin-left: 10px;\n      }\n    }\n\n    .course-btn{\n      margin-top: 16px;\n\n      .add-to-cart-btn{\n        padding: 12px 28px;\n        span{\n          margin-left: 12px;\n        }\n      }\n    }\n\n    @media screen and (min-width: 880px){\n      grid-template-columns: repeat(2, 1fr);\n      column-gap: 40px;\n\n      .course-details{\n        padding-top: 0;\n      }\n\n      .course-img{\n        order: 2;\n      }\n    }\n\n    @media screen and (min-width: 1400px){\n      grid-template-columns: 60% 40%;\n    }\n  }\n\n  .course-full{\n    padding: 40px 16px;\n\n    .course-sc-title{\n      font-size: 22px;\n      font-weight: 700;\n      margin: 12px 0;\n    }\n\n    .course-learn{\n      max-width: 992px;\n      border: 1px solid rgba(0, 0, 0, 0.2);\n      padding: 12px 28px 22px 28px;\n\n      .course-learn-list{\n\n        li{\n          margin: 5px 0;\n          display: flex;\n          span{\n\n            &:nth-child(1){\n              opacity: 0.95;\n              margin-right: 12px;\n            }\n          }\n        }\n\n        @media screen and (min-width: 992px){\n          grid-template-columns: repeat(2, 1fr);\n        }\n      }\n    }\n\n    .course-content{\n      max-width: 992px;\n      margin-top: 30px;\n      border: 1px solid rgba(0, 0, 0, 0.2);\n      padding: 12px 28px 22px 28px;\n\n      .course-content-list{\n\n        li{\n          background-color: #f7f9fa;\n          padding: 12px 18px;\n          border: 1px solid rgba(0, 0, 0, 0.2);\n          margin-bottom: 10px;\n          font-weight: 800;\n          font-size: 15px;\n        }\n      }\n    }\n  }\n`;\n\nexport default SingleCoursePage","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/CoursesPage.js",["274","275","276"],"import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { MdInfoOutline } from 'react-icons/md';\nimport { useParams } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport Course from \"../components/Course\";\nimport { useCourses } from '../context/courses_context';\n\nconst CoursesPage = () => {\n  const category_id = useParams();\n  const courses = useCourses();\n  const [category, setCategory] = useState();\n\n\n    useEffect(\n      ()=>{\n        fetch(`/category/category/${category_id.category}`)\n      .then(res=>res.json())\n      .then(data=>{\n          setCategory(data)\n      })\n      .catch(err=>console.log(err))\n      },[category_id]\n  );\n  \n  return (\n    <CoursesPageWrapper>\n      <div className='container'>\n        <div className='category-list-top'>\n             <p>{category?.name}</p>\n        </div>\n        {courses?.filter(course => course.category_id == category_id.category).length == 0?<div className='not-uploaded mt-4'><p><MdInfoOutline className='icon'/> No courses to display in this category</p></div>:null}\n\n        <div className='category-based-list'>\n          {\n            courses?.filter(course => course.category_id == category_id.category).map((course) => (\n                <Course key = {course.id} {...course} />\n              ))\n          }\n        </div>\n      </div>\n    </CoursesPageWrapper>\n  )\n}\n\nconst CoursesPageWrapper = styled.div`\n\n.not-uploaded{\n  padding: 20px 20px 10px 20px;\n  background: white;\n  border: 1px solid red;\n  font-size: 1.5rem;\n  color: red;\n  font-weight: 500;\n}\n.icon{\n  margin-bottom:4px;\n  font-size: 2rem;\n}\n.category-list-top{\n  background-image: linear-gradient(to right, #e00052 0%, #7400e0 100%);\n    color: white;\n    margin-top: 30px;\n    padding: 10px 10px 0px 20px;\n    border: 1px solid black;\n    text-align: center;\n    p{\n        font-size: 2rem;\n        font-weight: 600;\n    }\n  }\n\n  .category-based-list{\n    margin-top: 32px;\n  }\n  @media screen and (min-width: 600px){\n    .category-based-list{\n      display: grid;\n      gap: 26px;\n      grid-template-columns: repeat(2, 1fr);\n    }\n  }\n  @media screen and (min-width: 992px){\n    .category-based-list{\n      display: grid;\n      gap: 26px;\n      grid-template-columns: repeat(3, 1fr);\n    }\n  }\n  @media screen and (min-width: 1400px){\n    .category-based-list{\n      display: grid;\n      gap: 26px;\n      grid-template-columns: repeat(4, 1fr);\n    }\n  }\n`;\n\nexport default CoursesPage","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/pages/EnrolledCoursePage.js",["277","278","279","280","281","282","283","284","285","286","287"],"import React, {useEffect, useState} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport StarRating from '../components/StarRating';\nimport {MdInfo} from \"react-icons/md\";\nimport {TbWorld} from \"react-icons/tb\";\nimport {RiTimeLine} from \"react-icons/ri\";\nimport {Link} from \"react-router-dom\";\nimport { course_images } from \"../utils/images\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport ReactPlayer from 'react-player'\nimport { logout, useAuth } from '../auth';\nimport TokenExpiredModal from '../components/TokenExpiredModal';\nimport LoginPage from './LoginPage'\nimport HomePage from './HomePage';\nimport { Button, Modal } from 'react-bootstrap';\nimport ErrorModal from '../components/ErrorModal';\n\nconst LoggedInUser = (course_id, user_id) => {\n  user_id = course_id.user_id\n  course_id = course_id.course_id\n  const [category, setCategory] = useState()\n    const [owner, setOwner] = useState()\n    const [course, setCourse] = useState()\n    const [enrolledCourse, setEnrolledCourse] = useState()\n    const [duration, setDuration] = useState()\n    const [actualUser, setActualUser] = useState()\n    const history = useHistory()\n    const [showModalError, setShowModalError] = useState(false);\n    const [show, setShow] = useState(false)\n    const closeModal = () => {\n      setShow(false)\n    }\n    const showModal = () => {\n      setShow(true)\n    }\n\n    const token=localStorage.getItem('REACT_TOKEN_AUTH_KEY')\n    const requestOptions ={\n        method: 'GET',\n        headers: {\n            'content-type':'application/json',\n            'Authorization': `Bearer ${JSON.parse(token)}`\n        }\n    }\n\n    useEffect(\n      ()=>{\n          fetch('/auth/actual-user', requestOptions)\n          .then(res=>res.json())\n          .then(data=>{\n              setActualUser(data)\n          })\n          .catch(err=>console.log(err))\n      },[]\n  );\n\n    useEffect(\n      ()=>{\n          fetch(`/category/categoryCourse/${course_id}`)\n          .then(res=>res.json())\n          .then(data=>{\n              setCategory(data)\n          })\n          .catch(err=>console.log(err))\n      },[]\n  );\n\n  useEffect(\n    ()=>{\n        fetch(`/tutorial/duration-tutorials/${course_id}`)\n        .then(res=>res.json())\n        .then(data=>{\n            setDuration(data)\n        })\n        .catch(err=>console.log(err))\n    },[]\n);\n\n    useEffect(\n      ()=>{\n          fetch(`/auth/userCourse/${course_id}`)\n          .then(res=>res.json())\n          .then(data=>{\n              setOwner(data)\n          })\n          .catch(err=>console.log(err))\n      },[]\n  );\n\n  useEffect(\n    ()=>{\n        fetch(`/course/course/${course_id}`)\n        .then(res=>res.json())\n        .then(data=>{\n            setCourse(data)\n        })\n        .catch(err=>console.log(err))\n    },[]\n);\n\nconst [showModalTokenExpired, setShowModalTokenExpired] = useState(false);\nuseEffect(\n    ()=>{\n        fetch(`/enrolled_course/enrolled_course/${course_id}/${user_id}`, requestOptions)\n        .then(res=>res.json())\n        .then(data=>{\n            if(data.msg == \"Token has expired\"){\n                logout();\n                setShowModalTokenExpired(true);\n            }\n            setEnrolledCourse(data)\n        })\n        .catch(err=>console.log(err))\n    },[]\n);\n\nconst deleteEnrolledCourse = (user_id, course_id) => {\n\n  const requestOptionsDelete={\n    method:'DELETE',\n    headers:{\n        'content-type':'application/json',\n        'Authorization':`Bearer ${JSON.parse(token)}`\n    }\n  }\n  fetch(`/enrolled_course/enrolled_course/${course_id}/${user_id}`, requestOptionsDelete)\n  .then(res=>res.json())\n  .then(data=>{\n    if(data.msg == \"Token has expired\" | data.msg == \"Not enough segments\"){\n      closeModal()\n      logout();\n      setShowModalTokenExpired(true);\n    }\n    else if(data.status == 1){\n      history.push('/my-profile')\n    }\n    else{\n      closeModal()\n      setShowModalError(true)\n    }\n  })\n  .catch(err=>console.log(err))\n}\n  return (\n    <>\n    {enrolledCourse && actualUser?.id==user_id?\n    <SingleCourseWrapper>\n        {showModalTokenExpired?<TokenExpiredModal/>:null}\n        {showModalError?<ErrorModal/>:null}\n        <Modal\n              size=\"lg\"\n              show={show}\n              onHide={closeModal}\n              scrollable={true}\n              centered\n            >\n              <ModalWrapper>\n              <Modal.Header closeButton>\n                <Modal.Title>\n                  <h3 className='wait'>\n                    Wait..\n                  </h3>\n                </Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <h3 className='content'>\n                  Are you sure you want to unenroll the course?\n                </h3>\n                \n              </Modal.Body>\n              <Modal.Footer>\n                <ButtonWrapper>\n                  <Button variant=\"outline-dark\" className='save__button' onClick={() => {deleteEnrolledCourse(user_id, course_id)}}>\n                    Unenroll\n                  </Button>\n                  </ButtonWrapper>\n              </Modal.Footer>\n              </ModalWrapper>\n            </Modal>\n      <div className='course-intro mx-auto grid'>\n        <div className='course-img'>\n          <img src = {course?.course_image? course?.course_image : course_images.image} alt = {course?.name} className=\"img\"/>\n        </div>\n        <div className='course-details'>\n          <div className='course-category bg-white text-dark text-capitalize fw-6 fs-12 d-inline-block'>{category?.name}</div>\n          <div className='course-head'>\n            <h5>{course?.name}</h5>\n          </div>\n          <div className='course-body'>\n            <p className='course-para fs-18'>{course?.description}</p>\n            <div className='course-rating flex'>\n              <span className='rating-star-val fw-8 fs-16'>3</span>\n              <StarRating rating_star={3} />\n              <span className='rating-count fw-5 fs-14'>(5)</span>\n              <span className='students-count fs-14'>1000</span>\n            </div>\n\n            <ul className='course-info'>\n              <li>\n                <span className='fs-14'>Created by <span className='fw-6 opacity-08'><Link to = {`/users/${owner?.id}`}>{owner?.username}</Link></span></span>\n              </li>\n              <li className='flex'>\n                <span><MdInfo /></span>\n                <span className='fs-14 course-info-txt fw-5'>Last updated {course?.updated_date}</span>\n              </li>\n              <li className='flex'>\n                <span><TbWorld /></span>\n                <span className='fs-14 course-info-txt fw-5'>{course?.language}</span>\n              </li>\n              <li className='flex'>\n                <span><RiTimeLine /></span>\n                <span className='fs-14 course-info-txt fw-5'>{duration}</span>\n              </li>\n            </ul>\n          </div>\n\n          <div className='course-foot'>\n            <div className='course-price'>\n              {enrolledCourse?.is_finished?<span className='free-price fs-26 fw-8' style={{\"color\":\"green\"}}>Finished</span>:<span className='free-price fs-26 fw-8' style={{\"color\":\"red\"}}>In progress</span>}\n              <Link to=\"#\" onClick={()=>{showModal()}} className='delete-btn d-inline-block'>\n                Unenroll\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='course-full bg-white text-dark'>\n        <div className='course-content mx-auto'>\n          <div className='course-sc-title'>Course content</div>\n          <ul className='course-content-list'>\n            <Accordion defaultActiveKey=\"0\">\n                {\n                    course?.tutorials && course?.tutorials.map((contentItem, idx) => {\n                        return (\n                            \n                            <Accordion.Item eventKey={idx} key={idx} className=\"mt-2 content-item\">\n                                <Accordion.Header><div className='content-title'>{idx+1}. {contentItem.title}</div></Accordion.Header>\n                                <Accordion.Body className=\"content-body\">\n                                    <ReactPlayer \n                                        width=\"100%\"\n                                        url={contentItem.video}\n                                        controls\n                                    />\n                                </Accordion.Body>\n                            </Accordion.Item>\n                            \n                        )\n                    })\n                }\n            </Accordion>\n          </ul>\n        </div>\n      </div>\n    </SingleCourseWrapper>:<HomePage/>}\n    </>\n    \n  )\n}\n\n\nconst EnrolledCoursePage = () => {\n    const {course_id, user_id} = useParams();\n    const [logged]=useAuth();\n    \n    const token=localStorage.getItem('REACT_TOKEN_AUTH_KEY')\n    if(!token){\n      logout()\n    }\n  return (\n    <>\n    {logged?<LoggedInUser course_id={course_id} user_id={user_id}/>:<LoginPage/>}\n    </>\n  )\n}\n\nconst ButtonWrapper = styled.div`\n.save__button{\n  width: 150px;\n  height: 50px;\n  border: 0px;\n  color: white;\n  font-weight: bold;\n  font-size: 1.5rem;\n  background: #c21b4e;\n  transition: 0.5s;\n  :hover{\n      background-color: #a024c9;\n  }\n}\n`\nconst ModalWrapper = styled.div`\n  .wait, .content{\n    color: #c21b4e;\n    font-weight: 700;\n  }\n\n  .wait{\n    font-size: 2rem;\n    padding: 5px 0px 0px 20px;\n  }\n  .content{\n    font-size: 1.8rem;\n    padding: 20px 20px;\n  }\n\n  .save__button{\n\n  }\n`\nconst SingleCourseWrapper = styled.div`\n  background: var(--clr-dark);\n  color: var(--clr-white);\n    .content-item{\n        border: 1px solid #878787;\n    }\n\n    .delete-btn{\n      height: 50px;\n      width: 130px;\n      margin-left: 25px;\n      padding: 7px 25px;\n      font-size: 20px;\n      border: 1px solid white;\n      transition: 0.5s ease;\n      :hover{\n          background: #700808;\n      }\n      span{\n        margin-left: 12px;\n      }\n    }\n\n  .content-body{\n    background:#ededed;\n  }\n  .content-title{\n    font-weight: bold;\n  }\n  .img{\n    margin-top: 10%;\n    min-width: 400px;\n  }\n  .course-intro{\n    padding: 40px 16px;\n    max-width: 992px;\n\n    .course-details{\n      padding-top: 20px;\n    }\n\n    .course-category{\n      padding: 0px 8px;\n      border-radius: 6px;\n    }\n\n    .course-head{\n      font-size: 38px;\n      line-height: 1.2;\n      padding: 12px 0 0 0;\n    }\n\n    .course-para{\n      padding: 12px 0;\n    }\n\n    .rating-star-val{\n      margin-right: 7px;\n      padding-bottom: 5px;\n      color: var(--clr-orange);\n    }\n\n    .students-count{\n      margin-left: 8px;\n    }\n\n    .rating-count{\n      margin-left: 6px;\n      color: #d097f6;\n    }\n\n    .course-info{\n\n      li{\n        margin-bottom: 2px;\n\n        &:nth-child(2){\n          margin-top: 10px;\n        }\n      }\n\n      .course-info-txt{\n        text-transform: capitalize;\n        margin-left: 8px;\n        margin-bottom: 4px;\n      }\n    }\n    .course-price{\n      margin-top: 12px;\n\n      .old-price{\n        color: #eceb98;\n        text-decoration: line-through;\n        margin-left: 10px;\n      }\n\n      .free-price{\n        color: #eceb98;\n        margin-left: 10px;\n      }\n    }\n\n    .course-btn{\n      margin-top: 16px;\n\n      .add-to-cart-btn{\n        padding: 12px 28px;\n        span{\n          margin-left: 12px;\n        }\n      }\n    }\n\n    @media screen and (min-width: 880px){\n      grid-template-columns: repeat(2, 1fr);\n      column-gap: 40px;\n\n      .course-details{\n        padding-top: 0;\n      }\n\n      .course-img{\n        order: 2;\n      }\n    }\n\n    @media screen and (min-width: 1400px){\n      grid-template-columns: 60% 40%;\n    }\n  }\n\n  .course-full{\n    padding: 40px 16px;\n\n    .course-sc-title{\n      font-size: 22px;\n      font-weight: 700;\n      margin: 12px 0;\n    }\n\n    .course-learn{\n      max-width: 992px;\n      border: 1px solid rgba(0, 0, 0, 0.2);\n      padding: 12px 28px 22px 28px;\n\n      .course-learn-list{\n\n        li{\n          margin: 5px 0;\n          display: flex;\n          span{\n\n            &:nth-child(1){\n              opacity: 0.95;\n              margin-right: 12px;\n            }\n          }\n        }\n\n        @media screen and (min-width: 992px){\n          grid-template-columns: repeat(2, 1fr);\n        }\n      }\n    }\n\n    .course-content{\n      max-width: 992px;\n      margin-top: 30px;\n      border: 1px solid rgba(0, 0, 0, 0.2);\n      padding: 12px 28px 22px 28px;\n\n      .course-content-list{\n\n        li{\n          background-color: #f7f9fa;\n          padding: 12px 18px;\n          border: 1px solid rgba(0, 0, 0, 0.2);\n          margin-bottom: 10px;\n          font-weight: 800;\n          font-size: 15px;\n        }\n      }\n    }\n  }\n`;\n\nexport default EnrolledCoursePage","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/Hero.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/ErrorModal.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/MyProfileCoursesList.js",["288","289"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport MyProfileTabs from \"./MyProfileTabs\";\n\nconst MyProfileCoursesList = () => {\n    return (\n        <UserCourseListWrapper>\n            <div className='container'>\n                <div className='courses-list-top'>\n                    <p>Uploaded courses</p>\n                </div>\n                <MyProfileTabs/>\n            </div>\n        </UserCourseListWrapper>\n    )\n}\n\nconst UserCourseListWrapper = styled.div`\n  .courses-list-top{\n    padding: 10px 10px 0px 20px;\n    border: 1px solid black;\n    text-align: center;\n    p{\n        font-size: 2rem;\n        font-weight: 500;\n    }\n  }\n`;\n\nexport default MyProfileCoursesList;","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/TokenExpiredModal.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/MultiStepProgressBar.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/PageTwo.js",["290","291","292","293","294","295"],"import React, {useEffect, useState} from 'react';\nimport { FaArrowRight} from 'react-icons/fa';\nimport { MdReportGmailerrorred } from 'react-icons/md';\nimport { RiAddCircleFill } from 'react-icons/ri';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport SuccessModal from './SuccessModal';\nimport { logout} from '../auth';\nimport { useForm } from 'react-hook-form';\nimport AnimatedCheckmark, { MODES } from 'react-animated-checkmark'\nimport TokenExpiredModal from './TokenExpiredModal';\nimport ErrorModal from './ErrorModal';\n\nconst PageTwo = ({ onButtonClick, courseName }) => {\n    const {register, watch, handleSubmit, setValue, reset, formState:{errors}} = useForm();\n    const [showModalCourseAdded, setShowModalCourseAdded] = useState(true);\n    const [showModalTokenExpired, setShowModalTokenExpired] = useState(false);\n    const [showModalError, setShowModalError] = useState(false);\n    useEffect(\n        ()=>{\n            fetch(`/course/course-by-name/${courseName}`)\n            .then(res=>res.json())\n            .then(data=>{\n                setValue(\"course\", data.id);\n            }) \n            .catch(err=>console.log(err))\n        },[]\n    );\n\n    const createTopic = (data) => {\n        const token = localStorage.getItem('REACT_TOKEN_AUTH_KEY');\n        \n        const requestOptions = {\n          method: 'POST',\n          headers: {\n              'content-type': 'application/json',\n              'Authorization': `Bearer ${JSON.parse(token)}`\n          },\n          body: JSON.stringify(data)\n        }\n        \n        fetch('/topic/topics', requestOptions)\n        .then(async res => {\n          let response = await res.json()\n          if(response.msg == \"Token has expired\"){\n            logout();\n            setShowModalTokenExpired(true);\n          }\n          else if(response.status == 1){\n            setValue(\"title\", \"\");\n            setMode(MODES.SUCCESS)\n            loading()\n          }\n          else{\n            setShowModalError(true)\n          }\n              \n        })\n        .then(data => {\n          console.log(data)\n        })\n        .catch(err => console.log(err))\n      }\n      const [mode, setMode] = useState(MODES.LOADING)\n\n      function loading(){\n        setTimeout(function(){ \n            setMode(MODES.LOADING)\n        }, 2000);\n    }\n      \n      \n    return(\n        <PageWrapper>\n            {showModalCourseAdded?<SuccessModal content=\"course added successfully.\"/>:null}\n            {showModalTokenExpired?<TokenExpiredModal/>:null}\n            {showModalError?<ErrorModal/>:null}\n            <div className='course-full text-light'>\n                <div className='course-learn mx-auto'>\n                    <div className='course-sc-title'>What you'll learn</div>\n                    \n                    <ul className='course-learn-list'>\n                        <BlackInputWrapper>\n                            <div className=\"form__group field\">\n                                <input type=\"text\" className=\"form__field\" placeholder=\"Learn Item\" name=\"learnItem\" id='learnItem' required\n                                {...register(\"title\", { required: true })}\n                                />\n                                <label htmlFor=\"learnItem\" className=\"form__label\">Learn Item</label>\n                                <input type=\"hidden\" required \n                                {...register(\"course\", { required: true })}\n                                />\n                            </div>\n                            {errors.title && errors.title?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">Learn item is required.</p></div>}\n                        </BlackInputWrapper>\n                    </ul>\n                    <div className='course-btn'>\n                        <Link to=\"#\" className='add-to-cart-btn d-inline-block fw-7 bg-purple mt-4' onClick={handleSubmit(createTopic)}>\n                            <RiAddCircleFill /> Add \n                        </Link>\n                        <p className='checkMark'><AnimatedCheckmark mode={mode} baseColor='#ab12e3' collapseFactor={1} size={50}/></p>\n                    </div>\n                </div>\n                <div className='next mx-auto'>\n                    <div className='course-btn'>\n                            <Link to='#' className='next-btn d-inline-block fw-7 bg-purple mt-4' onClick={()=>{onButtonClick(\"pagethree\", courseName)}}>\n                                Next <FaArrowRight/>\n                            </Link>\n                    </div>\n                </div>\n            </div>\n            \n        </PageWrapper>\n        \n    )\n}\n\nconst BlackInputWrapper = styled.div`\n.error-response{\n  display: flex;\n  color: red;\n  font-weight: bold;\n  font-size: 2rem;\n  margin-left: 2rem;\n}\n.error-section{\n  margin-top: 0.5rem;\n  display: flex;\n  color: red;\n  height: 0.5rem;\n  font-weight: bold;\n}\n.error{\n  margin-left: 5px;\n  font-size: 1.1rem;\n}\n.form__group {\n  position: relative;\n  padding: 15px 0 0;\n  margin-top: 5px;\n  margin-left: 0px;\n  width: 90%;\n}\n\n.form__field {\n  font-family: inherit;\n  width: 100%;\n  border: 0;\n  border-bottom: 2px solid #9b9b9b;\n  outline: 0;\n  font-size: 1.3rem;\n  color: white;\n  padding: 7px 0;\n  background: transparent;\n  transition: border-color 0.2s;\n\n  &::placeholder {\n    color: transparent;\n  }\n\n  &:placeholder-shown ~ .form__label {\n    font-size: 1.3rem;\n    cursor: text;\n    top: 30px;\n  }\n}\n\n.form__label {\n  position: absolute;\n  top: 0px;\n  display: block;\n  transition: 0.2s;\n  font-size: 1rem;\n  color: #9b9b9b;\n}\n\n.form__field:focus {\n  ~ .form__label {\n    position: absolute;\n    top: 0px;\n    display: block;\n    transition: 0.2s;\n    font-size: 1rem;\n    color: white;\n       \n  }\n  padding-bottom: 6px; \n  border-width: 3px;\n  border-image: linear-gradient(to right, white, #9b9b9b);\n  border-image-slice: 1;\n}\n\n.form__field{\n  &:required,&:invalid { box-shadow:none; }\n}\n`\nconst PageWrapper = styled.div`\n\n.next{\n    max-width: 992px;\n    padding: 0px 28px 22px 28px;\n    text-align: right;\n\n    .next-btn{\n        padding: 12px 28px;\n        span{\n            margin-left: 12px;\n        }\n    }\n      \n}\n.checkMark{\n  display:table-cell\n}\n.course-btn{\n  display:inline-table;\n    .add-to-cart-btn{\n      margin-right: 10px;\n      padding: 12px 28px;\n      span{\n        margin-left: 12px;\n      }\n    }\n  }\n\n  background: var(--clr-dark);\n  color: var(--clr-white);\n  .img{\n    min-width: 500px;\n  }\n  \n  .course-full{\n    padding: 40px 16px;\n\n    .course-sc-title{\n      font-size: 22px;\n      font-weight: 700;\n      margin: 12px 0;\n    }\n\n    .course-learn{\n      max-width: 992px;\n      border: 1px solid white;\n      padding: 12px 28px 22px 28px;\n\n      .course-learn-list{\n        margin-left: -20px;\n        li{\n          margin: 5px 0;\n          display: flex;\n          span{\n\n            &:nth-child(1){\n              opacity: 0.95;\n              margin-right: 12px;\n            }\n          }\n        }\n\n        @media screen and (min-width: 992px){\n          grid-template-columns: repeat(2, 1fr);\n        }\n      }\n    }\n\n    .course-content{\n      max-width: 992px;\n      margin-top: 30px;\n      border: 1px solid rgba(0, 0, 0, 0.2);\n      padding: 12px 28px 22px 28px;\n\n      .course-content-list{\n\n        li{\n          background-color: #f7f9fa;\n          padding: 12px 18px;\n          border: 1px solid rgba(0, 0, 0, 0.2);\n          margin-bottom: 10px;\n          font-weight: 800;\n          font-size: 15px;\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTwo","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/EnrolledCoursesList.js",["296","297"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport EnrolledTabs from \"./EnrolledTabs\";\n\nconst EnrolledCoursesList = () => {\n    return (\n        <UserCourseListWrapper>\n            <div className='container'>\n                <div className='courses-list-top'>\n                    <p>Enrolled courses</p>\n                </div>\n                <EnrolledTabs/>\n            </div>\n        </UserCourseListWrapper>\n    )\n}\n\nconst UserCourseListWrapper = styled.div`\n  padding: 40px 0;\n  .courses-list-top{\n    padding: 10px 10px 0px 20px;\n    border: 1px solid black;\n    text-align: center;\n    p{\n        font-size: 2rem;\n        font-weight: 500;\n    }\n  }\n`;\n\nexport default EnrolledCoursesList;","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/StarRating.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/CourseList.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/PageThree.js",["298","299","300","301","302","303","304","305"],"import React, {useEffect, useState} from 'react';\nimport { MdReportGmailerrorred } from 'react-icons/md';\nimport { RiAddCircleFill} from 'react-icons/ri';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { logout} from '../auth';\nimport { useForm } from 'react-hook-form';\nimport AnimatedCheckmark, { MODES } from 'react-animated-checkmark'\nimport TokenExpiredModal from './TokenExpiredModal';\nimport ErrorModal from './ErrorModal';\n\nconst PageThree = (courseName) => {\n    const {register, watch, handleSubmit, setValue, reset, formState:{errors}} = useForm();\n    const [showModalTokenExpired, setShowModalTokenExpired] = useState(false);\n    const [showModalError, setShowModalError] = useState(false);\n    const [course, setCourse] = useState();\n\n    useEffect(\n        ()=>{\n            fetch(`/course/course-by-name/${courseName.courseName}`)\n            .then(res=>res.json())\n            .then(data=>{\n                setCourse(data)\n                setValue(\"course\", data.id);\n            }) \n            .catch(err=>console.log(err))\n        },[]\n    );\n\n    \n\n    const createTutorial = (data) => {\n        console.log(data)\n        const token = localStorage.getItem('REACT_TOKEN_AUTH_KEY');\n        \n        const requestOptions = {\n          method: 'POST',\n          headers: {\n              'content-type': 'application/json',\n              'Authorization': `Bearer ${JSON.parse(token)}`\n          },\n          body: JSON.stringify(data)\n        }\n        \n        fetch('/tutorial/tutorials', requestOptions)\n        .then(async res => {\n          let response = await res.json()\n          if(response.msg == \"Token has expired\"){\n            logout();\n            setShowModalTokenExpired(true);\n          }\n          else if(response.status == 1){\n            setValue(\"title\", \"\");\n            setValue(\"video\", \"\");\n            setMode(MODES.SUCCESS)\n            loading()\n          }\n          else{\n            setShowModalError(true)\n          }\n              \n        })\n        .then(data => {\n        })\n        .catch(err => console.log(err))\n      }\n      const [mode, setMode] = useState(MODES.LOADING)\n\n      function loading(){\n        setTimeout(function(){ \n            setMode(MODES.LOADING)\n        }, 2000);\n    }\n      \n      \n    return(\n        <PageWrapper>\n            {showModalTokenExpired?<TokenExpiredModal/>:null}\n            {showModalError?<ErrorModal/>:null}\n            <form>\n              <div className='course-full text-light'>\n                  <div className='course-learn mx-auto'>\n                      <div className='course-sc-title'>Course tutorial</div>\n                      \n                      <ul className='course-learn-list'>\n                          <BlackInputWrapper>\n                              <div className=\"form__group field\">\n                                  <input type=\"text\" className=\"form__field\" placeholder=\"Title\" name=\"title\" id='title' required\n                                  {...register(\"title\", { required: true })}\n                                  />\n                                  <label htmlFor=\"title\" className=\"form__label\">Title</label> \n                              </div>\n                              {errors.title && errors.title?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">Title is required.</p></div>}\n\n                              <div className=\"form__group field mt-4\">\n                                  <input type=\"text\" className=\"form__field\" placeholder=\"Youtube url\" name=\"video\" id='video' required\n                                  {...register(\"video\", { required: true, pattern:/^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/})}\n                                  />\n                                  <label htmlFor=\"video\" className=\"form__label\">Youtube URL</label> \n                              </div>\n                              {errors.video && errors.video?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">URL is required.</p></div>}\n                              {errors.video && errors.video?.type !==\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">Invalid URL.</p></div>}\n                              <input type=\"hidden\" required \n                                  {...register(\"course\", { required: true })}\n                              />\n                          </BlackInputWrapper>\n                      </ul>\n                      <div className='course-btn'>\n                          <Link to=\"#\" className='add-to-cart-btn d-inline-block fw-7 bg-purple mt-4' onClick={handleSubmit(createTutorial)}>\n                              <RiAddCircleFill /> Add \n                          </Link>\n                          <p className='checkMark'><AnimatedCheckmark mode={mode} baseColor='#ab12e3' collapseFactor={1} size={50}/></p>\n                      </div>\n                  </div>\n                  <div className='next mx-auto'>\n                      <div className='course-btn'>\n                              <Link to={`/courses/${course?.id}`} className='next-btn d-inline-block fw-7 bg-purple mt-4'>\n                                  Finish\n                              </Link>\n                      </div>\n                  </div>\n              </div>\n            </form>\n        </PageWrapper>\n        \n    )\n}\n\nconst BlackInputWrapper = styled.div`\n.error-response{\n  display: flex;\n  color: red;\n  font-weight: bold;\n  font-size: 2rem;\n  margin-left: 2rem;\n}\n.error-section{\n  margin-top: 0.5rem;\n  display: flex;\n  color: red;\n  height: 0.5rem;\n  font-weight: bold;\n}\n.error{\n  margin-left: 5px;\n  font-size: 1.1rem;\n}\n.form__group {\n  position: relative;\n  padding: 15px 0 0;\n  margin-top: 5px;\n  margin-left: 0px;\n  width: 90%;\n}\n\n.form__field {\n  font-family: inherit;\n  width: 100%;\n  border: 0;\n  border-bottom: 2px solid #9b9b9b;\n  outline: 0;\n  font-size: 1.3rem;\n  color: white;\n  padding: 7px 0;\n  background: transparent;\n  transition: border-color 0.2s;\n\n  &::placeholder {\n    color: transparent;\n  }\n\n  &:placeholder-shown ~ .form__label {\n    font-size: 1.3rem;\n    cursor: text;\n    top: 30px;\n  }\n}\n\n.form__label {\n  position: absolute;\n  top: 0px;\n  display: block;\n  transition: 0.2s;\n  font-size: 1rem;\n  color: #9b9b9b;\n}\n\n.form__field:focus {\n  ~ .form__label {\n    position: absolute;\n    top: 0px;\n    display: block;\n    transition: 0.2s;\n    font-size: 1rem;\n    color: white;\n       \n  }\n  padding-bottom: 6px; \n  border-width: 3px;\n  border-image: linear-gradient(to right, white, #9b9b9b);\n  border-image-slice: 1;\n}\n\n.form__field{\n  &:required,&:invalid { box-shadow:none; }\n}\n`\nconst PageWrapper = styled.div`\n\n.next{\n    max-width: 992px;\n    padding: 0px 28px 22px 28px;\n    text-align: right;\n\n    .next-btn{\n        padding: 12px 28px;\n        span{\n            margin-left: 12px;\n        }\n    }\n      \n}\n.checkMark{\n  display:table-cell\n}\n.course-btn{\n  display:inline-table;\n    .add-to-cart-btn{\n      margin-right: 10px;\n      padding: 12px 28px;\n      span{\n        margin-left: 12px;\n      }\n    }\n  }\n\n  background: var(--clr-dark);\n  color: var(--clr-white);\n  .img{\n    min-width: 500px;\n  }\n  \n  .course-full{\n    padding: 40px 16px;\n\n    .course-sc-title{\n      font-size: 22px;\n      font-weight: 700;\n      margin: 12px 0;\n    }\n\n    .course-learn{\n      max-width: 992px;\n      border: 1px solid white;\n      padding: 12px 28px 22px 28px;\n\n      .course-learn-list{\n        margin-left: -20px;\n        li{\n          margin: 5px 0;\n          display: flex;\n          span{\n\n            &:nth-child(1){\n              opacity: 0.95;\n              margin-right: 12px;\n            }\n          }\n        }\n\n        @media screen and (min-width: 992px){\n          grid-template-columns: repeat(2, 1fr);\n        }\n      }\n    }\n\n    .course-content{\n      max-width: 992px;\n      margin-top: 30px;\n      border: 1px solid rgba(0, 0, 0, 0.2);\n      padding: 12px 28px 22px 28px;\n\n      .course-content-list{\n\n        li{\n          background-color: #f7f9fa;\n          padding: 12px 18px;\n          border: 1px solid rgba(0, 0, 0, 0.2);\n          margin-bottom: 10px;\n          font-weight: 800;\n          font-size: 15px;\n        }\n      }\n    }\n  }\n`;\n\nexport default PageThree","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/auth.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/SuccessModal.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/UserCourseList.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/Course.js",["306","307","308","309","310","311","312","313","314"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {Link} from \"react-router-dom\";\nimport StarRating from './StarRating';\nimport { course_images } from \"../utils/images\";\n\nconst Course = (props) => {\n    \n    const {id, description, name, owner, course_image, updated_date, actual_price, discounted_price, is_free, language, topics, edit} = props;\n    const [imageDisplay, setImageDisplay] = useState('')\n    const [price, setPrice] = useState(0)\n    const [user, setUser] = useState('')\n    useEffect(()=>{\n\n      fetch(`/auth/user/${owner}`)\n        .then(res=>res.json())\n        .then(data=>{\n          setUser(data)\n        })\n        .catch(err=>console.log(err))\n    }, [])\n\n    \n  return (\n    <CourseCard>\n      <div className='item-img'>\n        <img src = {course_image? course_image : course_images.image} alt = {name} />\n      </div>\n      <div className='item-body'>\n        <h5 className='item-name'>{name}</h5>\n        <span className='item-creator'><Link to = {`/users/${owner}`}>{user.username}</Link></span>\n        <div className='item-rating flex'>\n          <span className='rating-star-val'>{4}</span>\n          <StarRating rating_star = {4} />\n          <span className='rating-count'>(43)</span>\n        </div>\n        <div className='item-price'>\n          {!is_free? <div><span className='item-price-new'>${discounted_price}</span>\n          <span className='item-price-old'>${actual_price}</span></div>:<span className='item-price-new'>Free</span>}\n          \n        </div>\n      </div>\n      <div className='item-btns flex'>\n        <Link to = {`/courses/${id}`} className = \"item-btn see-details-btn\">See details</Link>\n        {edit?<Link to = {`/edit-course/${id}`} className = \"item-btn see-details-btn\">Edit Course</Link>:\"\"}\n      </div>\n    </CourseCard>\n  )\n\n}\n\nconst CourseCard = styled.div`\n  margin-bottom: 20px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: rgba(149, 157, 165, 0.1) 0px 8px 24px;\n  display: flex;\n  flex-direction: column;\n  .item-img{\n    margin-bottom: 14px;\n    padding-top: 20px;\n  }\n  .item-body{\n    margin: 14px 0;\n    padding: 4px 18px;\n    margin-top: auto;\n    .item-name{\n      font-size: 15px;\n      line-height: 1.4;\n      font-weight: 800;\n    }\n\n    .item-creator{\n      font-size: 12.5px;\n      font-weight: 500;\n      color: rgba(0, 0, 0, 0.6);\n    }\n\n    .rating-star-val{\n      margin-bottom: 5px;\n      font-size: 14px;\n      font-weight: 800;\n      color: #b4690e;\n      margin-right: 6px;\n    }\n\n    .rating-count{\n      font-size: 12.5px;\n      margin-left: 3px;\n      font-weight: 500;\n      opacity: 0.8;\n    }\n\n    .item-price-new{\n      font-weight: 700;\n      font-size: 15px;\n    }\n\n    .item-price-old{\n      opacity: 0.8;\n      font-weight: 500;\n      text-decoration: line-through;\n      font-size: 15px;\n      margin-left: 8px;\n    }\n  }\n  .item-btns{\n    justify-self: flex-start;\n    padding: 4px 8px 30px 18px;\n    \n\n    .item-btn{\n      font-size: 15px;\n      display: inline-block;\n      padding: 6px 16px;\n      font-weight: 700;\n      transition: var(--transition);\n      white-space: nowrap;\n\n      &.see-details-btn{\n        background-color: transparent;\n        border: 1px solid var(--clr-black);\n        margin-right: 5px;\n\n        &:hover{\n          background-color: rgba(0, 0, 0, 0.9);\n          color: var(--clr-white);\n        }\n      }\n\n      &.add-to-cart-btn{\n        background: rgba(0, 0, 0, 0.9);\n        color: var(--clr-white);\n        border: 1px solid rgba(0, 0, 0, 0.9);\n        \n        &:hover{\n          background-color: transparent;\n          color: rgba(0, 0, 0, 0.9);\n        }\n      }\n    }\n  }\n`;\n\nexport default Course","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/PageOne.js",["315","316","317","318","319","320"],"import React, {useState} from 'react';\nimport styled from \"styled-components\";\nimport {MdOutlineCheckCircleOutline, MdRemoveCircleOutline, MdReportGmailerrorred} from \"react-icons/md\";\nimport {RiAddCircleFill} from \"react-icons/ri\";\nimport {Link} from \"react-router-dom\";\nimport { course_images } from \"../utils/images\";\nimport { useForm } from 'react-hook-form';\nimport { logout} from '../auth';\nimport { useCategories } from '../context/categories_context';\nimport TokenExpiredModal from './TokenExpiredModal';\nimport ErrorModal from './ErrorModal';\n\n\nconst PageOne = ({ onButtonClick }) => {\n  const categories = useCategories();\n  const {register, watch, handleSubmit, setValue, reset, formState:{errors}} = useForm();\n  \n  const [imageName, setImageName] = useState('')\n  const [imageError, setImageError] = useState(false)\n  const [showModal, setShowModal] = useState(false);\n  const [showModalError, setShowModalError] = useState(false);\n\n  const createCourse = (data) => {\n    const token = localStorage.getItem('REACT_TOKEN_AUTH_KEY');\n    \n    const requestOptions = {\n      method: 'POST',\n      headers: {\n          'content-type': 'application/json',\n          'Authorization': `Bearer ${JSON.parse(token)}`\n      },\n      body: JSON.stringify(data)\n    }\n    \n    fetch('/course/courses', requestOptions)\n    .then(async res => {\n      let response = await res.json()\n      if(response.msg == \"Token has expired\"){\n        logout();\n        setShowModal(true);\n      }\n      else if(response.status == 1){\n        onButtonClick(\"pagetwo\", response.course_name)\n      }\n      else{\n        setShowModalError(true)\n      }\n      \n          \n    })\n    .then(data => {\n    })\n    .catch(err => console.log(err))\n  }\n\n  const convertToBase64 = (file, cb) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file)\n      reader.onload = function () {\n        cb(reader.result)\n      };\n  }\n\n  const uploadFile = async (e) => {\n    const file = e.target.files[0];\n    if (file != null) {\n      var allowedExtensions = /(\\.jpg|\\.jpeg|\\.png|\\.gif)$/i;\n      if(!allowedExtensions.exec(file.name)){ \n        setImageName(\"\")\n        setImageError(true)\n        setValue(\"course_image\", \"\");\n      }\n      else{\n        convertToBase64(file, (result) => {\n          setImageError(false)\n          setImageName(file.name)\n          setValue(\"course_image\", result.toString());\n        });\n      }\n    }\n  };\n  \n  return (\n    <SingleCourseWrapper>\n      {showModal?<TokenExpiredModal/>:null}\n      {showModalError?<ErrorModal/>:null}\n      <form>\n      <div className='course-intro mx-auto grid'>\n        <div className='course-img'>\n          <img src={course_images.addcourse} className=\"img\"/>\n        </div>\n        <div className='course-details mt-4'>\n          <SelectWrapper>\n            <div className='select'>\n              <select defaultValue={\"\"} {...register(\"category\", { required: true })}\n              >\n                  <option value={\"\"} disabled>\n                      Category\n                  </option>\n                  {\n                    categories?.map((category) => (\n                      <option key={category.id} value={category.id}>\n                          {category.name}\n                      </option>))\n                  }\n              </select>\n            </div>\n            {errors.category && errors.category?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">Category is required.</p></div>}\n          </SelectWrapper>\n          <div className='course-head'>\n            <InputWrapper>\n              <div className=\"form__group field\">\n                <input type=\"text\" className=\"form__field\" placeholder=\"Name of course\" name=\"name\" id='name' required \n                {...register(\"name\", { required: true })}\n                />\n                <label htmlFor=\"name\" className=\"form__label\">Name of course</label>\n              </div>\n              {errors.name && errors.name?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">Name is required.</p></div>}\n\n\n              <div className=\"form__group field\">\n                <input type=\"text\" className=\"form__field\" placeholder=\"Description\" name=\"description\" id='description' required \n                {...register(\"description\", { required: true })}\n                />\n                <label htmlFor=\"description\" className=\"form__label\">Description</label>\n              </div>\n              {errors.description && errors.description?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">Description is required.</p></div>}\n\n\n              <div className=\"form__group field\">\n                <input type=\"text\" className=\"form__field\" placeholder=\"Language\" name=\"language\" id='language' required \n                {...register(\"language\", { required: true })}\n                />\n                <label htmlFor=\"language\" className=\"form__label\">Language</label>\n              </div>\n              {errors.language && errors.language?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">Language is required.</p></div>}\n\n              <UploadWrapper>\n                <span className=\"btn btn-outline-light btn-file mt-5\">\n                  {imageName? <div style={{ \"font-weight\":\"bold\"}}>{imageName}</div>: \"Upload course image\" }\n                  <input type=\"file\" name=\"uploaded-file\" onChange={uploadFile}/>\n                  <input type=\"hidden\"\n                      {...register(\"course_image\", { required: true })}\n                  />\n                  \n                </span>\n                {imageName?<MdOutlineCheckCircleOutline className='checked-icon'/>: null}\n                {imageError?<MdRemoveCircleOutline className='checked-icon' style={{\"color\":\"red\"}}/>: null}\n                {errors.course_image && errors.course_image?.type ===\"required\" && <div className=\"error-section\"><MdReportGmailerrorred className=\"icon\"/> <p className=\"error\">Image is required.</p></div>}\n              </UploadWrapper>\n            </InputWrapper>\n          </div>\n          <div className='course-btn'>\n            <Link to=\"#\" className='add-to-cart-btn d-inline-block fw-7 bg-purple mt-4' onClick={handleSubmit(createCourse)}>\n              <RiAddCircleFill /> Add\n            </Link>\n          </div>\n        </div>\n      </div>\n      </form>\n      \n    </SingleCourseWrapper>\n  )\n}\n\nconst BlackInputWrapper = styled.div`\n.error-response{\n  display: flex;\n  color: red;\n  font-weight: bold;\n  font-size: 2rem;\n  margin-left: 2rem;\n}\n.error-section{\n  margin-top: 0.5rem;\n  display: flex;\n  color: red;\n  height: 0.5rem;\n  font-weight: bold;\n}\n.error{\n  margin-left: 5px;\n  font-size: 1.1rem;\n}\n.form__group {\n  position: relative;\n  padding: 15px 0 0;\n  margin-top: 5px;\n  margin-left: 0px;\n  width: 90%;\n}\n\n.form__field {\n  font-family: inherit;\n  width: 100%;\n  border: 0;\n  border-bottom: 2px solid #9b9b9b;\n  outline: 0;\n  font-size: 1.3rem;\n  color: black;\n  padding: 7px 0;\n  background: transparent;\n  transition: border-color 0.2s;\n\n  &::placeholder {\n    color: transparent;\n  }\n\n  &:placeholder-shown ~ .form__label {\n    font-size: 1.3rem;\n    cursor: text;\n    top: 30px;\n  }\n}\n\n.form__label {\n  position: absolute;\n  top: 10px;\n  display: block;\n  transition: 0.2s;\n  font-size: 1rem;\n  color: #9b9b9b;\n}\n\n.form__field:focus {\n  ~ .form__label {\n    position: absolute;\n    top: 0px;\n    display: block;\n    transition: 0.2s;\n    font-size: 1rem;\n    color: black;\n       \n  }\n  padding-bottom: 6px; \n  border-width: 3px;\n  border-image: linear-gradient(to right, black, #9b9b9b);\n  border-image-slice: 1;\n}\n\n.form__field{\n  &:required,&:invalid { box-shadow:none; }\n}\n`\n\nconst SelectWrapper = styled.div`\n.error-response{\n  display: flex;\n  color: red;\n  font-weight: bold;\n  font-size: 2rem;\n  margin-left: 2rem;\n}\n.error-section{\n  margin-top: 0.5rem;\n  display: flex;\n  color: red;\n  height: 0.5rem;\n  font-weight: bold;\n}\n.error{\n  margin-left: 5px;\n  font-size: 1.1rem;\n}\nselect {\n  appearance: none;\n  outline: 1;\n  border: 1;\n  box-shadow: none;\n  flex: 1;\n  font-size: 0.8em;\n  padding: 0 1em;\n  color: #9b9b9b;\n  background-color: #1C1D1F;\n  background-image: none;\n  cursor: pointer;\n  border: 2px solid #9b9b9b;\n}\n\nselect::-ms-expand {\n  display: none;\n}\n\n.select {\n  position: relative;\n  display: flex;\n  height: 1.6em;\n  border-radius: .15em;\n  overflow: hidden;\n  color: #1C1D1F;\n}\n\n.select::after {\n  content: '\\\\25BC';\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 0.1em;\n  background-color: #9b9b9b;\n  transition: .5s all ease;\n  pointer-events: none;\n}\n\n.select:hover::after {\n  color: white;\n}\n\n`\n\nconst UploadWrapper = styled.div`\n.checked-icon{\n  margin-top: 40px;\n  margin-left: 10px;\n  font-size: 30px;\n  color: #34fa69;\n}\n.btn-file {\n  position: relative;\n  overflow: hidden;\n  min-width: 150px;\n}\n.btn-file input[type=file] {\n  position: absolute;\n  top: 0;\n  right: 0;\n  \n  min-width: 100%;\n  min-height: 100%;\n  font-size: 100px;\n  text-align: right;\n  filter: alpha(opacity=0);\n  opacity: 0;\n  outline: none;\n  background: white;\n  cursor: inherit;\n  display: block;\n}\n\n`\n\nconst InputWrapper = styled.div`\n.error-response{\n    display: flex;\n    color: red;\n    font-weight: bold;\n    font-size: 2rem;\n    margin-left: 2rem;\n}\n.error-section{\n    margin-top: 0.5rem;\n    display: flex;\n    color: red;\n    height: 0.5rem;\n    font-weight: bold;\n}\n.error{\n    margin-left: 5px;\n    font-size: 1.1rem;\n}\n.icon{\n  margin-top: -10px;\n  width: 1.7rem;\n}\n.form__group {\n    position: relative;\n    padding: 15px 0 0;\n    margin-top: 5px;\n    margin-left: 0px;\n    width: 100%;\n  }\n  \n  .form__field {\n    font-family: inherit;\n    width: 100%;\n    border: 0;\n    border-bottom: 2px solid #9b9b9b;\n    outline: 0;\n    font-size: 1.3rem;\n    color: white;\n    padding: 7px 0;\n    background: transparent;\n    transition: border-color 0.2s;\n  \n    &::placeholder {\n      color: transparent;\n    }\n  \n    &:placeholder-shown ~ .form__label {\n      font-size: 1.3rem;\n      cursor: text;\n      top: 30px;\n    }\n  }\n  \n  .form__label {\n    position: absolute;\n    top: 10px;\n    display: block;\n    transition: 0.2s;\n    font-size: 1rem;\n    color: #9b9b9b;\n  }\n  \n  .form__field:focus {\n    ~ .form__label {\n      position: absolute;\n      top: 10px;\n      display: block;\n      transition: 0.2s;\n      font-size: 1rem;\n      color: white;\n         \n    }\n    padding-bottom: 6px; \n    border-width: 3px;\n    border-image: linear-gradient(to right, white,white);\n    border-image-slice: 1;\n  }\n\n  .form__field{\n    &:required,&:invalid { box-shadow:none; }\n  }\n`\n\nconst SingleCourseWrapper = styled.div`\n  background: var(--clr-dark);\n  color: var(--clr-white);\n  .img{\n    min-width: 500px;\n  }\n  .course-intro{\n    padding: 40px 16px;\n    max-width: 992px;\n\n    .course-details{\n      padding-top: 20px;\n    }\n\n    .course-category{\n      padding: 0px 8px;\n      border-radius: 6px;\n    }\n\n    .course-head{\n      font-size: 38px;\n      line-height: 1.2;\n    }\n\n    .course-para{\n      padding: 12px 0;\n    }\n\n    .rating-star-val{\n      margin-right: 7px;\n      padding-bottom: 5px;\n      color: var(--clr-orange);\n    }\n\n    .students-count{\n      margin-left: 8px;\n    }\n\n    .rating-count{\n      margin-left: 6px;\n      color: #d097f6;\n    }\n\n    .course-info{\n\n      li{\n        margin-bottom: 2px;\n\n        &:nth-child(2){\n          margin-top: 10px;\n        }\n      }\n\n      .course-info-txt{\n        text-transform: capitalize;\n        margin-left: 8px;\n        margin-bottom: 4px;\n      }\n    }\n    .course-price{\n      margin-top: 12px;\n\n      .old-price{\n        color: #eceb98;\n        text-decoration: line-through;\n        margin-left: 10px;\n      }\n\n      .free-price{\n        color: #eceb98;\n        margin-left: 10px;\n      }\n    }\n\n    .course-btn{\n      margin-top: 16px;\n\n      .add-to-cart-btn{\n        padding: 12px 28px;\n        span{\n          margin-left: 12px;\n        }\n      }\n    }\n\n    @media screen and (min-width: 880px){\n      grid-template-columns: repeat(2, 1fr);\n      column-gap: 40px;\n\n      .course-details{\n        padding-top: 0;\n      }\n\n      .course-img{\n        order: 2;\n      }\n    }\n\n    @media screen and (min-width: 1400px){\n      grid-template-columns: 60% 40%;\n    }\n  }\n\n  .course-full{\n    padding: 40px 16px;\n\n    .course-sc-title{\n      font-size: 22px;\n      font-weight: 700;\n      margin: 12px 0;\n    }\n\n    .course-learn{\n      max-width: 992px;\n      border: 1px solid rgba(0, 0, 0, 0.2);\n      padding: 12px 28px 22px 28px;\n\n      .course-learn-list{\n\n        li{\n          margin: 5px 0;\n          display: flex;\n          span{\n\n            &:nth-child(1){\n              opacity: 0.95;\n              margin-right: 12px;\n            }\n          }\n        }\n\n        @media screen and (min-width: 992px){\n          grid-template-columns: repeat(2, 1fr);\n        }\n      }\n    }\n\n    .course-content{\n      max-width: 992px;\n      margin-top: 30px;\n      border: 1px solid rgba(0, 0, 0, 0.2);\n      padding: 12px 28px 22px 28px;\n\n      .course-content-list{\n\n        li{\n          background-color: #f7f9fa;\n          padding: 12px 18px;\n          border: 1px solid rgba(0, 0, 0, 0.2);\n          margin-bottom: 10px;\n          font-weight: 800;\n          font-size: 15px;\n        }\n      }\n    }\n  }\n`;\n\nexport default PageOne","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/CategoriesList.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/utils/images.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/MyProfileTabs.js",["321"],"import React, {useState, useEffect} from 'react';\nimport { MdInfoOutline } from 'react-icons/md';\nimport styled from \"styled-components\";\nimport MyProfilePagination from './MyProfilePagination';\n\nconst MyProfileTabs = () => {\n    const [courses, setCourses] = useState([]);\n    const token=localStorage.getItem('REACT_TOKEN_AUTH_KEY')\n\n    const requestOptions ={\n        method: 'GET',\n        headers: {\n            'content-type':'application/json',\n            'Authorization': `Bearer ${JSON.parse(token)}`\n        }\n    }\n\n    useEffect(\n        ()=>{\n            fetch('/course/my-courses', requestOptions)\n            .then(res=>res.json())\n            .then(data=>{\n                setCourses(data)\n            })\n            .catch(err=>console.log(err))\n        },[]\n    );\n  return (\n    <UserTabsWrapper>\n      {courses?.length > 0 ? (\n          <MyProfilePagination\n            data={courses}\n            pageLimit={5}\n            dataLimit={3}\n          />\n          ) : (\n          <p className='not-uploaded'><MdInfoOutline/> You have not uploaded any courses. \n          Try via the button above.</p>\n      )}\n    </UserTabsWrapper>\n    \n  )\n}\n\nconst UserTabsWrapper = styled.div`\n  .not-uploaded{\n    padding: 20px 0px 0px 10px;\n    font-size: 1.2rem;\n  }\n  .tabs{\n    margin-top: 16px;\n\n    .tabs-head-item button{\n      border: 1px solid rgba(0, 0, 0, 0.7);\n      padding: 10px 13px;\n      margin-right: 6px;\n      transition: var(--transition);\n      font-weight: 500;\n      font-size: 15px;\n      margin-bottom: 10px;\n      \n      &:hover{\n        background-color: var(--clr-black);\n        color: var(--clr-white);\n      }\n    }\n\n    .tabs-body{\n      margin-top: 32px;\n    }\n\n    @media screen and (min-width: 600px){\n      .tabs-body{\n        display: grid;\n        gap: 26px;\n        grid-template-columns: repeat(1, 1fr);\n      }\n    }\n\n    @media screen and (min-width: 992px){\n      .tabs-body{\n        grid-template-columns: repeat(2, 1fr);\n      }\n    }\n\n    @media screen and (min-width: 1400px){\n      .tabs-body{\n        grid-template-columns: repeat(3, 1fr);\n      }\n    }\n  }\n`;\n\nexport default MyProfileTabs","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/EnrolledTabs.js",["322"],"import React, {useState, useEffect} from 'react';\nimport { MdInfoOutline } from 'react-icons/md';\nimport styled from \"styled-components\";\nimport EnrolledPagination from './EnrolledPagination';\n\nconst EnrolledTabs = () => {\n    const [courses, setCourses] = useState([]);\n    const token=localStorage.getItem('REACT_TOKEN_AUTH_KEY')\n    const requestOptions ={\n        method: 'GET',\n        headers: {\n            'content-type':'application/json',\n            'Authorization': `Bearer ${JSON.parse(token)}`\n        }\n    }\n\n    useEffect(\n        ()=>{\n            fetch('/auth/actual-user', requestOptions)\n            .then(res=>res.json())\n            .then(data=>{\n                setCourses(data.course_associations)\n            })\n            .catch(err=>console.log(err))\n        },[]\n    );\n        \n    \n  return (\n    <UserTabsWrapper>\n      {courses?.length > 0 ? (\n          <EnrolledPagination\n            data={courses}\n            pageLimit={5}\n            dataLimit={3}\n          />\n        \n          ) : (\n          <p className='not-enrolled'><MdInfoOutline/> You have not enrolled any courses.</p>\n      )}\n    </UserTabsWrapper>\n    \n  )\n}\n\nconst UserTabsWrapper = styled.div`\n.not-enrolled{\n  padding: 20px 0px 0px 10px;\n  font-size: 1.2rem;\n}\n  .tabs{\n    margin-top: 16px;\n\n    .tabs-head-item button{\n      border: 1px solid rgba(0, 0, 0, 0.7);\n      padding: 10px 13px;\n      margin-right: 6px;\n      transition: var(--transition);\n      font-weight: 500;\n      font-size: 15px;\n      margin-bottom: 10px;\n      \n      &:hover{\n        background-color: var(--clr-black);\n        color: var(--clr-white);\n      }\n    }\n\n    .tabs-body{\n      margin-top: 32px;\n    }\n\n    @media screen and (min-width: 600px){\n      .tabs-body{\n        display: grid;\n        gap: 26px;\n        grid-template-columns: repeat(1, 1fr);\n      }\n    }\n\n    @media screen and (min-width: 992px){\n      .tabs-body{\n        grid-template-columns: repeat(2, 1fr);\n      }\n    }\n\n    @media screen and (min-width: 1400px){\n      .tabs-body{\n        grid-template-columns: repeat(3, 1fr);\n      }\n    }\n  }\n`;\n\nexport default EnrolledTabs","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/Tabs.js",["323","324"],"import React, {useState} from 'react';\nimport { MdInfoOutline, MdSearch } from 'react-icons/md';\nimport styled from \"styled-components\";\nimport { useCategories } from '../context/categories_context';\nimport { useCourses } from '../context/courses_context';\nimport Pagination from './Pagination';\n\nconst Tabs = () => {\n  const [activeTab, setActiveTab] = useState('');\n  const courses=useCourses();\n  const categories=useCategories();\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  const tabHandler = (category_id) => {\n    setActiveTab(category_id);\n  }\n\n  const searchHandler = (e) => {\n    e.preventDefault();\n    setSearchInput(e.target.value.toLowerCase());\n  }\n\n  return (\n    <TabsWrapper>\n      <div className='tabs'>\n        <ul className='flex flex-wrap'>\n          {\n          categories?.map((category, idx) => (\n            <li className='tabs-head-item' key={idx}>\n              <button type = \"button\" className={`tab-btn ${activeTab==category.id ? \"active-tab\" : \"\"}`} onClick={()=>{tabHandler(category.id)}}>{category.name}</button>\n            </li>\n          ))\n          }\n          <SearchWrapper>\n          <form className=\"Search\">\n            <input\n              type=\"text\"\n              placeholder=\"SEARCH...\"\n              onChange={searchHandler}\n              value={searchInput} \n              className=\"Search-box\"\n              id=\"Search-box\"\n            />\n            <label className=\"Search-label\" htmlFor=\"Search-box\"><MdSearch/></label>\n            </form>\n          </SearchWrapper>\n        </ul>\n\n        {courses?.length > 0 ? (\n          \n          <Pagination\n            data={activeTab?courses.filter(course => course.category_id == activeTab).filter((course) => {\n              return course.name.toLowerCase().match(searchInput);\n          }):courses.filter((course) => {\n              return course.name.toLowerCase().match(searchInput);\n          })}\n            pageLimit={5}\n            dataLimit={4}\n          />\n        \n          ) : (\n            <div className='not-uploaded mt-4'><p><MdInfoOutline className='icon'/> No courses to display</p></div>\n      )}\n\n      </div>\n    </TabsWrapper>\n    \n  )\n}\n\nconst SearchWrapper = styled.div`\ninput[type=\"search\"] {\n  box-sizing: border-box;\n}\ninput, input::placeholder {\n    color: black;\n    font-size: 15px;\n    font-weight: 500;\n}\n.Search {\n  top:-5px;\n  position: relative;\n  display: flex;\n  color: rgba(0, 0, 0, 0.7);\n}\n\n.Search-box {\n  flex: 1 0 auto;\n  margin: 0;\n  padding: 8px 20px;\n  height: 46px;\n  border: 1px solid rgba(0, 0, 0, 0.7);\n  transition: all .15s ease-in-out;\n}\n.Search-box:focus {\n  flex: 1 0 90%;\n  margin-left: 20px;\n  outline: 0;\n}\n\n.Search-label {\n  position: absolute;\n  right: 15px;\n  top: 5px;\n  font-size: 20px;\n  transition: all .15s ease-in-out;\n}\n`\n\nconst TabsWrapper = styled.div`\n.active-tab{\n  background-image: linear-gradient(to right, #e00052 0%, #7400e0 100%);\n  color: white;\n}\n  .tabs{\n    margin-top: 16px;\n\n    .tabs-head-item button{\n      border: 1px solid rgba(0, 0, 0, 0.7);\n      padding: 10px 13px;\n      margin-right: 6px;\n      transition: var(--transition);\n      font-weight: 500;\n      font-size: 15px;\n      margin-bottom: 10px;\n      \n      &:hover{\n        background-color: var(--clr-black);\n        color: var(--clr-white);\n      }\n    }\n\n    .tabs-body{\n      margin-top: 32px;\n    }\n\n    @media screen and (min-width: 600px){\n      .tabs-body{\n        display: grid;\n        gap: 26px;\n        grid-template-columns: repeat(2, 1fr);\n      }\n    }\n\n    @media screen and (min-width: 992px){\n      .tabs-body{\n        grid-template-columns: repeat(3, 1fr);\n      }\n    }\n\n    @media screen and (min-width: 1400px){\n      .tabs-body{\n        grid-template-columns: repeat(4, 1fr);\n      }\n    }\n  }\n`;\n\nexport default Tabs","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/Category.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/UserTabs.js",["325","326","327"],"import React, {useState, useEffect} from 'react';\nimport { MdInfoOutline } from 'react-icons/md';\nimport styled from \"styled-components\";\nimport Pagination from './Pagination';\n\nconst UserTabs = (id) => {\n    const [courses, setCourses] = useState()\n\n    useEffect(() => {\n        fetch(`/course/courses-owner/${id.id.id}`).\n        then(data => data.json()).\n        then(data => setCourses(data));\n      }, [])\n      \n  return (\n    <UserTabsWrapper>\n      {courses?.length > 0 ? (\n          <Pagination\n            data={courses}\n            pageLimit={5}\n            dataLimit={3}\n          />\n          ) : (\n            <p className='not-uploaded'><MdInfoOutline/>Thus user has not uploaded any course yet.</p>\n      )}\n      <div className='mt-4'/>\n    </UserTabsWrapper>\n    \n  )\n}\n\nconst UserTabsWrapper = styled.div`\n  .tabs{\n    margin-top: 16px;\n\n    .tabs-head-item button{\n      border: 1px solid rgba(0, 0, 0, 0.7);\n      padding: 10px 13px;\n      margin-right: 6px;\n      transition: var(--transition);\n      font-weight: 500;\n      font-size: 15px;\n      margin-bottom: 10px;\n      \n      &:hover{\n        background-color: var(--clr-black);\n        color: var(--clr-white);\n      }\n    }\n\n    .tabs-body{\n      margin-top: 32px;\n      \n    }\n\n    @media screen and (min-width: 600px){\n      .tabs-body{\n        display: grid;\n        gap: 26px;\n        grid-template-columns: repeat(1, 1fr);\n      }\n    }\n\n    @media screen and (min-width: 992px){\n      .tabs-body{\n        grid-template-columns: repeat(2, 1fr);\n      }\n    }\n\n    @media screen and (min-width: 1400px){\n      .tabs-body{\n        grid-template-columns: repeat(3, 1fr);\n      }\n    }\n  }\n`;\n\nexport default UserTabs","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/MyProfilePagination.js",[],"/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/EnrolledPagination.js",["328"],"import React, {useEffect, useRef, useState} from 'react';\nimport styled from 'styled-components';\nimport Course from './Course';\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from 'react-icons/md';\nimport EnrolledCourse from './EnrolledCourse';\n\nconst EnrolledPagination = ({ data, title, pageLimit, dataLimit }) => {\n    const [pages] = useState(Math.ceil(data.length / dataLimit));\n    const [currentPage, setCurrentPage] = useState(1);\n    function goToNextPage() {\n        setCurrentPage((page) => page + 1);\n    }\n  \n    function goToPreviousPage() {\n        setCurrentPage((page) => page - 1);\n    }\n  \n    function changePage(event) {\n        const pageNumber = Number(event.target.textContent);\n        setCurrentPage(pageNumber);\n    }\n  \n    const getPaginatedData = () => {\n        const startIndex = currentPage * dataLimit - dataLimit;\n        const endIndex = startIndex + dataLimit;\n        return data.slice(startIndex, endIndex);\n    };\n\n  \n    const getPaginationGroup = () => {\n        let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\n        return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\n    };\n    const coursesSection = useRef(null);\n    useEffect(() => {\n      window.scrollTo({ behavior: 'smooth', top: coursesSection.current.offsetTop });\n    }, [currentPage]);\n    \n    return (\n      <div>\n        <CoursesWrapper  ref={coursesSection}>\n          <div className='tabs'>\n            <div className='tabs-body' >\n              {getPaginatedData().map((enrolled_course, idx) => (\n                <EnrolledCourse key={idx} id={enrolled_course.course[0].id} is_finished={enrolled_course.is_finished} owner={enrolled_course.course[0].owner} name={enrolled_course.course[0].name} image={enrolled_course.course[0].course_image}\n                actual_price={enrolled_course.course[0].actual_price} discounted_price={enrolled_course.course[0].discounted_price} is_free={enrolled_course.course[0].is_free} student_id={enrolled_course.student_id}\n               />\n              ))}\n            </div>\n          </div>\n        </CoursesWrapper>\n        <PaginationWrapper>\n        <div className=\"pagination\">\n          {/* previous button */}\n          <button\n            onClick={goToPreviousPage}\n            className={`prev ${currentPage === 1 ? 'disabled' : ''}`}\n          >\n            <MdKeyboardArrowLeft/>\n          </button>\n    \n          {/* show page numbers */}\n          {getPaginationGroup().map((item, index) => (\n            <button\n              key={index}\n              onClick={changePage}\n              className={`paginationItem ${currentPage === item ? 'active' : null}`}\n            >\n              <span>{item}</span>\n            </button>\n          ))}\n    \n          {/* next button */}\n          <button\n            onClick={goToNextPage}\n            className={`next ${currentPage === pages ? 'disabled' : ''}`}\n          >\n            <MdKeyboardArrowRight/>\n          </button>\n        </div>\n        </PaginationWrapper>\n      </div>\n    );\n}\nconst PaginationWrapper = styled.div`\n.pagination {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.paginationItem {\n  background: #fff;\n  border: 1px solid #666;\n  padding: 10px 15px;\n  border-radius: 0%;\n  height: 45px;\n  width: 45px;\n  position: relative;\n  margin: 0 5px;\n  cursor: pointer;\n  transition: 0.5s ease;\n  :hover{\n    background: black;\n    color:white;\n  }\n}\n\n.paginationItem span {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.prev,\n.next {\n  background: #fff;\n  padding: 10px;\n  color: black;\n  margin: 0 10px;\n  cursor: pointer;\n  font-weight: bold;\n}\n\n.paginationItem.active {\n  border: 1px solid #888;\n  color: #888;\n  pointer-events: none;\n}\n\n.prev.disabled,\n.next.disabled {\n  pointer-events: none;\n  box-shadow: none;\n  color: #999;\n}\n`\n\nconst CoursesWrapper = styled.div`\n.tabs{\n    margin-top: 16px;\n\n    .tabs-head-item button{\n      border: 1px solid rgba(0, 0, 0, 0.7);\n      padding: 10px 13px;\n      margin-right: 6px;\n      transition: var(--transition);\n      font-weight: 500;\n      font-size: 15px;\n      margin-bottom: 10px;\n      \n      &:hover{\n        background-color: var(--clr-black);\n        color: var(--clr-white);\n      }\n    }\n\n    .tabs-body{\n      margin-top: 32px;\n    }\n\n    @media screen and (min-width: 600px){\n      .tabs-body{\n        display: grid;\n        gap: 26px;\n        grid-template-columns: repeat(1, 1fr);\n      }\n    }\n\n    @media screen and (min-width: 992px){\n      .tabs-body{\n        grid-template-columns: repeat(2, 1fr);\n      }\n    }\n\n    @media screen and (min-width: 1400px){\n      .tabs-body{\n        grid-template-columns: repeat(3, 1fr);\n      }\n    }\n  }\n`;\n\nexport default EnrolledPagination;","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/Pagination.js",["329"],"import React, {useEffect, useRef, useState} from 'react';\nimport styled from 'styled-components';\nimport Course from './Course';\nimport { MdInfoOutline, MdKeyboardArrowLeft, MdKeyboardArrowRight } from 'react-icons/md';\n\nconst Pagination = ({ data, title, pageLimit, dataLimit }) => {\n    const [pages] = useState(Math.ceil(data.length / dataLimit));\n    const [currentPage, setCurrentPage] = useState(1);\n    \n    function goToNextPage() {\n        setCurrentPage((page) => page + 1);\n    }\n  \n    function goToPreviousPage() {\n        setCurrentPage((page) => page - 1);\n    }\n  \n    function changePage(event) {\n        const pageNumber = Number(event.target.textContent);\n        setCurrentPage(pageNumber);\n    }\n  \n    const getPaginatedData = () => {\n        const startIndex = currentPage * dataLimit - dataLimit;\n        const endIndex = startIndex + dataLimit;\n        return data.slice(startIndex, endIndex);\n    };\n  \n    const getPaginationGroup = () => {\n        let start = Math.floor((currentPage - 1) / pageLimit) * pageLimit;\n        return new Array(pageLimit).fill().map((_, idx) => start + idx + 1);\n    };\n    const coursesSection = useRef(null);\n    useEffect(() => {\n      window.scrollTo({ behavior: 'smooth', top: coursesSection.current.offsetTop });\n    }, [currentPage]);\n  \n    return (\n      <div>\n        <CoursesWrapper  ref={coursesSection}>\n          <div className='tabs'>\n            {getPaginatedData().length == 0?<div className='not-uploaded'><p><MdInfoOutline className='icon'/> No courses to display in this category</p></div>:null}\n            <div className='tabs-body' >\n              {getPaginatedData().map((course, idx) => (\n                <Course key={idx} id={course.id} description={course.description} name={course.name} owner={course.owner} course_image={course.course_image} updated_date={course.updated_date}\n                actual_price={course.actual_price} discounted_price={course.discounted_price} is_free={course.is_free} language={course.language} topics={course.topics} tutorials={course.tutorials} update={false} \n              />\n              ))}\n            </div>\n          </div>\n        </CoursesWrapper>\n        <PaginationWrapper>\n        <div className=\"pagination\">\n          {/* previous button */}\n          <button\n            onClick={goToPreviousPage}\n            className={`prev ${currentPage === 1 ? 'disabled' : ''}`}\n          >\n            <MdKeyboardArrowLeft/>\n          </button>\n    \n          {/* show page numbers */}\n          {getPaginationGroup().map((item, index) => (\n            <button\n              key={index}\n              onClick={changePage}\n              className={`paginationItem ${currentPage === item ? 'active' : null}`}\n            >\n              <span>{item}</span>\n            </button>\n          ))}\n    \n          {/* next button */}\n          <button\n            onClick={goToNextPage}\n            className={`next ${currentPage === pages ? 'disabled' : ''}`}\n          >\n            <MdKeyboardArrowRight/>\n          </button>\n        </div>\n        </PaginationWrapper>\n      </div>\n    );\n}\nconst PaginationWrapper = styled.div`\n\n.pagination {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.paginationItem {\n  background: #fff;\n  border: 1px solid #666;\n  padding: 10px 15px;\n  border-radius: 0%;\n  height: 45px;\n  width: 45px;\n  position: relative;\n  margin: 0 5px;\n  cursor: pointer;\n  transition: 0.5s ease;\n  :hover{\n    background: black;\n    color:white;\n  }\n}\n\n.paginationItem span {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.prev,\n.next {\n  background: #fff;\n  padding: 10px;\n  color: black;\n  margin: 0 10px;\n  cursor: pointer;\n}\n\n.paginationItem.active {\n  border: 1px solid #888;\n  color: #888;\n  pointer-events: none;\n}\n\n.prev.disabled,\n.next.disabled {\n  pointer-events: none;\n  box-shadow: none;\n  color: #999;\n}\n`\n\nconst CoursesWrapper = styled.div`\n.not-uploaded{\n  padding: 20px 20px 10px 20px;\n  background: white;\n  border: 1px solid red;\n  font-size: 1.5rem;\n  color: red;\n  font-weight: 500;\n}\n.icon{\n  margin-bottom:4px;\n  font-size: 2rem;\n}\n\n\n  .tabs{\n    margin-top: 16px;\n\n    .tabs-head-item button{\n      border: 1px solid rgba(0, 0, 0, 0.7);\n      padding: 10px 13px;\n      margin-right: 6px;\n      transition: var(--transition);\n      font-weight: 500;\n      font-size: 15px;\n      margin-bottom: 10px;\n      \n      &:hover{\n        background-color: var(--clr-black);\n        color: var(--clr-white);\n      }\n    }\n\n    .tabs-body{\n      margin-top: 32px;\n    }\n\n    @media screen and (min-width: 600px){\n      .tabs-body{\n        display: grid;\n        gap: 26px;\n        grid-template-columns: repeat(2, 1fr);\n      }\n    }\n\n    @media screen and (min-width: 992px){\n      .tabs-body{\n        grid-template-columns: repeat(3, 1fr);\n      }\n    }\n\n    @media screen and (min-width: 1400px){\n      .tabs-body{\n        grid-template-columns: repeat(4, 1fr);\n      }\n    }\n  }\n`;\n\nexport default Pagination;","/Users/youssefouzeroual/Desktop/LBD/LaFargeApp/e-learning-platform/client/src/components/EnrolledCourse.js",["330","331","332","333","334","335","336","337","338"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {Link} from \"react-router-dom\";\nimport StarRating from './StarRating';\nimport { course_images } from \"../utils/images\";\n\nconst EnrolledCourse = (props) => {\n    const {id,student_id, is_finished, description, name, owner, image, updated_date, actual_price, discounted_price, is_free, language, topics, edit} = props;\n    \n    const [user, setUser] = useState('')\n    useEffect(()=>{\n\n      fetch(`/auth/user/${owner}`)\n        .then(res=>res.json())\n        .then(data=>{\n          setUser(data)\n        })\n        .catch(err=>console.log(err))\n\n    }, [])\n\n    \n  return (\n    <CourseCard>\n      <div className='item-img'>\n        <img src = {image? image : course_images.image} alt = {name} />\n      </div>\n      <div className='item-body'>\n        <h5 className='item-name'>{name}</h5>\n        <span className='item-creator'><Link to = {`/users/${owner}`}>{user.username}</Link></span>\n        <div className='item-rating flex'>\n          <span className='rating-star-val'>{4}</span>\n          <StarRating rating_star = {4} />\n          <span className='rating-count'>(43)</span>\n        </div>\n        <div className='item-price'>\n          {is_finished? <span className='item-price-new' style={{\"color\":\"green\"}}>Finished</span>:<span className='item-price-new' style={{\"color\":\"red\"}}>In progress</span>}\n          \n        </div>\n      </div>\n      <div className='item-btns flex'>\n        <Link to = {`/enrolled/${id}/${student_id}`} className = \"item-btn see-details-btn\">See details</Link>\n      </div>\n    </CourseCard>\n  )\n\n}\n\nconst CourseCard = styled.div`\n  margin-bottom: 20px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: rgba(149, 157, 165, 0.1) 0px 8px 24px;\n  display: flex;\n  flex-direction: column;\n  .item-img{\n    margin-bottom: 14px;\n    padding-top: 20px;\n  }\n  .item-body{\n    margin: 14px 0;\n    padding: 4px 18px;\n    margin-top: auto;\n    .item-name{\n      font-size: 15px;\n      line-height: 1.4;\n      font-weight: 800;\n    }\n\n    .item-creator{\n      font-size: 12.5px;\n      font-weight: 500;\n      color: rgba(0, 0, 0, 0.6);\n    }\n\n    .rating-star-val{\n      margin-bottom: 5px;\n      font-size: 14px;\n      font-weight: 800;\n      color: #b4690e;\n      margin-right: 6px;\n    }\n\n    .rating-count{\n      font-size: 12.5px;\n      margin-left: 3px;\n      font-weight: 500;\n      opacity: 0.8;\n    }\n\n    .item-price-new{\n      font-weight: 700;\n      font-size: 15px;\n    }\n\n    .item-price-old{\n      opacity: 0.8;\n      font-weight: 500;\n      text-decoration: line-through;\n      font-size: 15px;\n      margin-left: 8px;\n    }\n  }\n  .item-btns{\n    justify-self: flex-start;\n    padding: 4px 8px 30px 18px;\n    \n\n    .item-btn{\n      font-size: 15px;\n      display: inline-block;\n      padding: 6px 16px;\n      font-weight: 700;\n      transition: var(--transition);\n      white-space: nowrap;\n\n      &.see-details-btn{\n        background-color: transparent;\n        border: 1px solid var(--clr-black);\n        margin-right: 5px;\n\n        &:hover{\n          background-color: rgba(0, 0, 0, 0.9);\n          color: var(--clr-white);\n        }\n      }\n\n      &.add-to-cart-btn{\n        background: rgba(0, 0, 0, 0.9);\n        color: var(--clr-white);\n        border: 1px solid rgba(0, 0, 0, 0.9);\n        \n        &:hover{\n          background-color: transparent;\n          color: rgba(0, 0, 0, 0.9);\n        }\n      }\n    }\n  }\n`;\n\nexport default EnrolledCourse",{"ruleId":"339","replacedBy":"340"},{"ruleId":"341","replacedBy":"342"},{"ruleId":"343","severity":1,"message":"344","line":9,"column":34,"nodeType":"345","messageId":"346","endLine":9,"endColumn":35,"fix":"347"},{"ruleId":"343","severity":1,"message":"344","line":10,"column":30,"nodeType":"345","messageId":"346","endLine":10,"endColumn":31,"fix":"348"},{"ruleId":"343","severity":1,"message":"344","line":9,"column":29,"nodeType":"345","messageId":"346","endLine":9,"endColumn":30,"fix":"349"},{"ruleId":"343","severity":1,"message":"344","line":10,"column":30,"nodeType":"345","messageId":"346","endLine":10,"endColumn":31,"fix":"350"},{"ruleId":"343","severity":1,"message":"344","line":9,"column":25,"nodeType":"345","messageId":"346","endLine":9,"endColumn":26,"fix":"351"},{"ruleId":"343","severity":1,"message":"344","line":10,"column":30,"nodeType":"345","messageId":"346","endLine":10,"endColumn":31,"fix":"352"},{"ruleId":"353","severity":1,"message":"354","line":12,"column":22,"nodeType":"355","messageId":"356","endLine":12,"endColumn":27},{"ruleId":"357","severity":1,"message":"358","line":116,"column":132,"nodeType":"359","messageId":"360","endLine":116,"endColumn":133,"suggestions":"361"},{"ruleId":"362","severity":1,"message":"363","line":164,"column":45,"nodeType":"364","endLine":165,"endColumn":98},{"ruleId":"353","severity":1,"message":"354","line":11,"column":22,"nodeType":"355","messageId":"356","endLine":11,"endColumn":27},{"ruleId":"362","severity":1,"message":"363","line":92,"column":45,"nodeType":"364","endLine":93,"endColumn":98},{"ruleId":"353","severity":1,"message":"365","line":3,"column":9,"nodeType":"355","messageId":"356","endLine":3,"endColumn":19},{"ruleId":"353","severity":1,"message":"366","line":3,"column":21,"nodeType":"355","messageId":"356","endLine":3,"endColumn":31},{"ruleId":"353","severity":1,"message":"367","line":3,"column":33,"nodeType":"355","messageId":"356","endLine":3,"endColumn":42},{"ruleId":"353","severity":1,"message":"368","line":3,"column":44,"nodeType":"355","messageId":"356","endLine":3,"endColumn":53},{"ruleId":"353","severity":1,"message":"354","line":17,"column":22,"nodeType":"355","messageId":"356","endLine":17,"endColumn":27},{"ruleId":"353","severity":1,"message":"369","line":17,"column":53,"nodeType":"355","messageId":"356","endLine":17,"endColumn":58},{"ruleId":"370","severity":1,"message":"371","line":35,"column":27,"nodeType":"372","messageId":"373","endLine":35,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":35,"column":61,"nodeType":"372","messageId":"373","endLine":35,"endColumn":63},{"ruleId":"374","severity":1,"message":"375","line":43,"column":11,"nodeType":"376","endLine":43,"endColumn":13,"suggestions":"377"},{"ruleId":"374","severity":1,"message":"378","line":50,"column":11,"nodeType":"376","endLine":50,"endColumn":13,"suggestions":"379"},{"ruleId":"374","severity":1,"message":"380","line":61,"column":9,"nodeType":"376","endLine":61,"endColumn":11,"suggestions":"381"},{"ruleId":"374","severity":1,"message":"380","line":72,"column":7,"nodeType":"376","endLine":72,"endColumn":9,"suggestions":"382"},{"ruleId":"374","severity":1,"message":"380","line":83,"column":9,"nodeType":"376","endLine":83,"endColumn":11,"suggestions":"383"},{"ruleId":"374","severity":1,"message":"380","line":94,"column":7,"nodeType":"376","endLine":94,"endColumn":9,"suggestions":"384"},{"ruleId":"370","severity":1,"message":"371","line":114,"column":23,"nodeType":"372","messageId":"373","endLine":114,"endColumn":25},{"ruleId":"370","severity":1,"message":"371","line":118,"column":31,"nodeType":"372","messageId":"373","endLine":118,"endColumn":33},{"ruleId":"370","severity":1,"message":"371","line":121,"column":31,"nodeType":"372","messageId":"373","endLine":121,"endColumn":33},{"ruleId":"370","severity":1,"message":"371","line":124,"column":31,"nodeType":"372","messageId":"373","endLine":124,"endColumn":33},{"ruleId":"353","severity":1,"message":"354","line":23,"column":20,"nodeType":"355","messageId":"356","endLine":23,"endColumn":25},{"ruleId":"353","severity":1,"message":"369","line":23,"column":51,"nodeType":"355","messageId":"356","endLine":23,"endColumn":56},{"ruleId":"353","severity":1,"message":"385","line":24,"column":38,"nodeType":"355","messageId":"356","endLine":24,"endColumn":44},{"ruleId":"353","severity":1,"message":"386","line":24,"column":100,"nodeType":"355","messageId":"356","endLine":24,"endColumn":106},{"ruleId":"353","severity":1,"message":"387","line":25,"column":38,"nodeType":"355","messageId":"356","endLine":25,"endColumn":44},{"ruleId":"353","severity":1,"message":"388","line":25,"column":100,"nodeType":"355","messageId":"356","endLine":25,"endColumn":106},{"ruleId":"374","severity":1,"message":"378","line":60,"column":11,"nodeType":"376","endLine":60,"endColumn":13,"suggestions":"389"},{"ruleId":"374","severity":1,"message":"380","line":72,"column":9,"nodeType":"376","endLine":72,"endColumn":11,"suggestions":"390"},{"ruleId":"374","severity":1,"message":"380","line":83,"column":7,"nodeType":"376","endLine":83,"endColumn":9,"suggestions":"391"},{"ruleId":"374","severity":1,"message":"380","line":101,"column":9,"nodeType":"376","endLine":101,"endColumn":11,"suggestions":"392"},{"ruleId":"374","severity":1,"message":"380","line":113,"column":7,"nodeType":"376","endLine":113,"endColumn":9,"suggestions":"393"},{"ruleId":"370","severity":1,"message":"371","line":148,"column":23,"nodeType":"372","messageId":"373","endLine":148,"endColumn":25},{"ruleId":"370","severity":1,"message":"371","line":148,"column":57,"nodeType":"372","messageId":"373","endLine":148,"endColumn":59},{"ruleId":"370","severity":1,"message":"371","line":152,"column":31,"nodeType":"372","messageId":"373","endLine":152,"endColumn":33},{"ruleId":"370","severity":1,"message":"371","line":166,"column":23,"nodeType":"372","messageId":"373","endLine":166,"endColumn":25},{"ruleId":"370","severity":1,"message":"371","line":166,"column":57,"nodeType":"372","messageId":"373","endLine":166,"endColumn":59},{"ruleId":"370","severity":1,"message":"371","line":170,"column":31,"nodeType":"372","messageId":"373","endLine":170,"endColumn":33},{"ruleId":"370","severity":1,"message":"371","line":187,"column":19,"nodeType":"372","messageId":"373","endLine":187,"endColumn":21},{"ruleId":"370","severity":1,"message":"371","line":187,"column":53,"nodeType":"372","messageId":"373","endLine":187,"endColumn":55},{"ruleId":"370","severity":1,"message":"371","line":192,"column":27,"nodeType":"372","messageId":"373","endLine":192,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":219,"column":19,"nodeType":"372","messageId":"373","endLine":219,"endColumn":21},{"ruleId":"370","severity":1,"message":"371","line":219,"column":53,"nodeType":"372","messageId":"373","endLine":219,"endColumn":55},{"ruleId":"370","severity":1,"message":"371","line":223,"column":27,"nodeType":"372","messageId":"373","endLine":223,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":253,"column":23,"nodeType":"372","messageId":"373","endLine":253,"endColumn":25},{"ruleId":"370","severity":1,"message":"371","line":253,"column":57,"nodeType":"372","messageId":"373","endLine":253,"endColumn":59},{"ruleId":"370","severity":1,"message":"371","line":257,"column":31,"nodeType":"372","messageId":"373","endLine":257,"endColumn":33},{"ruleId":"370","severity":1,"message":"371","line":296,"column":22,"nodeType":"372","messageId":"373","endLine":296,"endColumn":24},{"ruleId":"370","severity":1,"message":"371","line":300,"column":24,"nodeType":"372","messageId":"373","endLine":300,"endColumn":26},{"ruleId":"370","severity":1,"message":"371","line":300,"column":58,"nodeType":"372","messageId":"373","endLine":300,"endColumn":60},{"ruleId":"370","severity":1,"message":"371","line":304,"column":27,"nodeType":"372","messageId":"373","endLine":304,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":318,"column":22,"nodeType":"372","messageId":"373","endLine":318,"endColumn":24},{"ruleId":"357","severity":1,"message":"394","line":528,"column":112,"nodeType":"359","messageId":"360","endLine":528,"endColumn":113,"suggestions":"395"},{"ruleId":"357","severity":1,"message":"394","line":528,"column":126,"nodeType":"359","messageId":"360","endLine":528,"endColumn":127,"suggestions":"396"},{"ruleId":"357","severity":1,"message":"397","line":528,"column":128,"nodeType":"359","messageId":"360","endLine":528,"endColumn":129,"suggestions":"398"},{"ruleId":"374","severity":1,"message":"378","line":50,"column":11,"nodeType":"376","endLine":50,"endColumn":13,"suggestions":"399"},{"ruleId":"374","severity":1,"message":"380","line":61,"column":9,"nodeType":"376","endLine":61,"endColumn":11,"suggestions":"400"},{"ruleId":"374","severity":1,"message":"380","line":72,"column":7,"nodeType":"376","endLine":72,"endColumn":9,"suggestions":"401"},{"ruleId":"374","severity":1,"message":"380","line":83,"column":9,"nodeType":"376","endLine":83,"endColumn":11,"suggestions":"402"},{"ruleId":"374","severity":1,"message":"380","line":94,"column":7,"nodeType":"376","endLine":94,"endColumn":9,"suggestions":"403"},{"ruleId":"370","severity":1,"message":"371","line":114,"column":23,"nodeType":"372","messageId":"373","endLine":114,"endColumn":25},{"ruleId":"370","severity":1,"message":"371","line":118,"column":31,"nodeType":"372","messageId":"373","endLine":118,"endColumn":33},{"ruleId":"370","severity":1,"message":"371","line":121,"column":31,"nodeType":"372","messageId":"373","endLine":121,"endColumn":33},{"ruleId":"370","severity":1,"message":"371","line":124,"column":31,"nodeType":"372","messageId":"373","endLine":124,"endColumn":33},{"ruleId":"370","severity":1,"message":"371","line":32,"column":55,"nodeType":"372","messageId":"373","endLine":32,"endColumn":57},{"ruleId":"370","severity":1,"message":"371","line":32,"column":87,"nodeType":"372","messageId":"373","endLine":32,"endColumn":89},{"ruleId":"370","severity":1,"message":"371","line":36,"column":58,"nodeType":"372","messageId":"373","endLine":36,"endColumn":60},{"ruleId":"374","severity":1,"message":"375","line":55,"column":9,"nodeType":"376","endLine":55,"endColumn":11,"suggestions":"404"},{"ruleId":"374","severity":1,"message":"405","line":66,"column":9,"nodeType":"376","endLine":66,"endColumn":11,"suggestions":"406"},{"ruleId":"374","severity":1,"message":"405","line":77,"column":7,"nodeType":"376","endLine":77,"endColumn":9,"suggestions":"407"},{"ruleId":"374","severity":1,"message":"405","line":88,"column":9,"nodeType":"376","endLine":88,"endColumn":11,"suggestions":"408"},{"ruleId":"374","severity":1,"message":"405","line":99,"column":7,"nodeType":"376","endLine":99,"endColumn":9,"suggestions":"409"},{"ruleId":"370","severity":1,"message":"371","line":108,"column":25,"nodeType":"372","messageId":"373","endLine":108,"endColumn":27},{"ruleId":"374","severity":1,"message":"410","line":115,"column":7,"nodeType":"376","endLine":115,"endColumn":9,"suggestions":"411"},{"ruleId":"370","severity":1,"message":"371","line":130,"column":17,"nodeType":"372","messageId":"373","endLine":130,"endColumn":19},{"ruleId":"370","severity":1,"message":"371","line":130,"column":51,"nodeType":"372","messageId":"373","endLine":130,"endColumn":53},{"ruleId":"370","severity":1,"message":"371","line":135,"column":25,"nodeType":"372","messageId":"373","endLine":135,"endColumn":27},{"ruleId":"370","severity":1,"message":"371","line":147,"column":38,"nodeType":"372","messageId":"373","endLine":147,"endColumn":40},{"ruleId":"353","severity":1,"message":"412","line":1,"column":17,"nodeType":"355","messageId":"356","endLine":1,"endColumn":26},{"ruleId":"353","severity":1,"message":"413","line":1,"column":28,"nodeType":"355","messageId":"356","endLine":1,"endColumn":36},{"ruleId":"353","severity":1,"message":"354","line":15,"column":22,"nodeType":"355","messageId":"356","endLine":15,"endColumn":27},{"ruleId":"353","severity":1,"message":"369","line":15,"column":53,"nodeType":"355","messageId":"356","endLine":15,"endColumn":58},{"ruleId":"353","severity":1,"message":"414","line":16,"column":34,"nodeType":"355","messageId":"356","endLine":16,"endColumn":57},{"ruleId":"374","severity":1,"message":"415","line":27,"column":11,"nodeType":"376","endLine":27,"endColumn":13,"suggestions":"416"},{"ruleId":"370","severity":1,"message":"371","line":45,"column":27,"nodeType":"372","messageId":"373","endLine":45,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":49,"column":35,"nodeType":"372","messageId":"373","endLine":49,"endColumn":37},{"ruleId":"353","severity":1,"message":"412","line":1,"column":17,"nodeType":"355","messageId":"356","endLine":1,"endColumn":26},{"ruleId":"353","severity":1,"message":"413","line":1,"column":28,"nodeType":"355","messageId":"356","endLine":1,"endColumn":36},{"ruleId":"353","severity":1,"message":"354","line":13,"column":22,"nodeType":"355","messageId":"356","endLine":13,"endColumn":27},{"ruleId":"353","severity":1,"message":"369","line":13,"column":53,"nodeType":"355","messageId":"356","endLine":13,"endColumn":58},{"ruleId":"374","severity":1,"message":"417","line":27,"column":11,"nodeType":"376","endLine":27,"endColumn":13,"suggestions":"418"},{"ruleId":"370","severity":1,"message":"371","line":48,"column":27,"nodeType":"372","messageId":"373","endLine":48,"endColumn":29},{"ruleId":"370","severity":1,"message":"371","line":52,"column":35,"nodeType":"372","messageId":"373","endLine":52,"endColumn":37},{"ruleId":"357","severity":1,"message":"394","line":97,"column":129,"nodeType":"359","messageId":"360","endLine":97,"endColumn":130,"suggestions":"419"},{"ruleId":"357","severity":1,"message":"394","line":97,"column":143,"nodeType":"359","messageId":"360","endLine":97,"endColumn":144,"suggestions":"420"},{"ruleId":"357","severity":1,"message":"397","line":97,"column":145,"nodeType":"359","messageId":"360","endLine":97,"endColumn":146,"suggestions":"421"},{"ruleId":"353","severity":1,"message":"422","line":9,"column":16,"nodeType":"355","messageId":"356","endLine":9,"endColumn":27},{"ruleId":"353","severity":1,"message":"423","line":9,"column":56,"nodeType":"355","messageId":"356","endLine":9,"endColumn":68},{"ruleId":"353","severity":1,"message":"424","line":9,"column":111,"nodeType":"355","messageId":"356","endLine":9,"endColumn":119},{"ruleId":"353","severity":1,"message":"425","line":9,"column":121,"nodeType":"355","messageId":"356","endLine":9,"endColumn":127},{"ruleId":"353","severity":1,"message":"426","line":10,"column":12,"nodeType":"355","messageId":"356","endLine":10,"endColumn":24},{"ruleId":"353","severity":1,"message":"427","line":10,"column":26,"nodeType":"355","messageId":"356","endLine":10,"endColumn":41},{"ruleId":"353","severity":1,"message":"428","line":11,"column":12,"nodeType":"355","messageId":"356","endLine":11,"endColumn":17},{"ruleId":"353","severity":1,"message":"429","line":11,"column":19,"nodeType":"355","messageId":"356","endLine":11,"endColumn":27},{"ruleId":"374","severity":1,"message":"430","line":21,"column":8,"nodeType":"376","endLine":21,"endColumn":10,"suggestions":"431"},{"ruleId":"353","severity":1,"message":"354","line":16,"column":20,"nodeType":"355","messageId":"356","endLine":16,"endColumn":25},{"ruleId":"353","severity":1,"message":"369","line":16,"column":51,"nodeType":"355","messageId":"356","endLine":16,"endColumn":56},{"ruleId":"370","severity":1,"message":"371","line":38,"column":23,"nodeType":"372","messageId":"373","endLine":38,"endColumn":25},{"ruleId":"370","severity":1,"message":"371","line":42,"column":31,"nodeType":"372","messageId":"373","endLine":42,"endColumn":33},{"ruleId":"432","severity":1,"message":"433","line":90,"column":11,"nodeType":"364","endLine":90,"endColumn":63},{"ruleId":"353","severity":1,"message":"434","line":166,"column":7,"nodeType":"355","messageId":"356","endLine":166,"endColumn":24},{"ruleId":"374","severity":1,"message":"375","line":26,"column":11,"nodeType":"376","endLine":26,"endColumn":13,"suggestions":"435"},{"ruleId":"374","severity":1,"message":"375","line":25,"column":11,"nodeType":"376","endLine":25,"endColumn":13,"suggestions":"436"},{"ruleId":"370","severity":1,"message":"371","line":30,"column":70,"nodeType":"372","messageId":"373","endLine":30,"endColumn":72},{"ruleId":"370","severity":1,"message":"371","line":52,"column":73,"nodeType":"372","messageId":"373","endLine":52,"endColumn":75},{"ruleId":"343","severity":1,"message":"344","line":10,"column":51,"nodeType":"345","messageId":"346","endLine":10,"endColumn":52,"fix":"437"},{"ruleId":"343","severity":1,"message":"344","line":11,"column":34,"nodeType":"345","messageId":"346","endLine":11,"endColumn":35,"fix":"438"},{"ruleId":"374","severity":1,"message":"439","line":13,"column":10,"nodeType":"376","endLine":13,"endColumn":12,"suggestions":"440"},{"ruleId":"353","severity":1,"message":"441","line":3,"column":8,"nodeType":"355","messageId":"356","endLine":3,"endColumn":14},{"ruleId":"370","severity":1,"message":"371","line":42,"column":40,"nodeType":"372","messageId":"373","endLine":42,"endColumn":42},{"ruleId":"353","severity":1,"message":"422","line":8,"column":40,"nodeType":"355","messageId":"356","endLine":8,"endColumn":51},{"ruleId":"353","severity":1,"message":"423","line":8,"column":73,"nodeType":"355","messageId":"356","endLine":8,"endColumn":85},{"ruleId":"353","severity":1,"message":"442","line":8,"column":87,"nodeType":"355","messageId":"356","endLine":8,"endColumn":99},{"ruleId":"353","severity":1,"message":"443","line":8,"column":101,"nodeType":"355","messageId":"356","endLine":8,"endColumn":117},{"ruleId":"353","severity":1,"message":"444","line":8,"column":119,"nodeType":"355","messageId":"356","endLine":8,"endColumn":126},{"ruleId":"353","severity":1,"message":"424","line":8,"column":128,"nodeType":"355","messageId":"356","endLine":8,"endColumn":136},{"ruleId":"353","severity":1,"message":"425","line":8,"column":138,"nodeType":"355","messageId":"356","endLine":8,"endColumn":144},{"ruleId":"353","severity":1,"message":"445","line":8,"column":146,"nodeType":"355","messageId":"356","endLine":8,"endColumn":150},{"ruleId":"374","severity":1,"message":"430","line":20,"column":8,"nodeType":"376","endLine":20,"endColumn":10,"suggestions":"446"},"no-native-reassign",["447"],"no-negated-in-lhs",["448"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"449","text":"450"},{"range":"451","text":"450"},{"range":"452","text":"450"},{"range":"453","text":"450"},{"range":"454","text":"450"},{"range":"455","text":"450"},"no-unused-vars","'watch' is assigned a value but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["456","457"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'BsLinkedin' is defined but never used.","'BsFacebook' is defined but never used.","'BsTwitter' is defined but never used.","'BsYoutube' is defined but never used.","'reset' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestOptions'. Either include it or remove the dependency array.","ArrayExpression",["458"],"React Hook useEffect has a missing dependency: 'requestOptionsStudent'. Either include it or remove the dependency array.",["459"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["460"],["461"],["462"],["463"],"'watch1' is assigned a value but never used.","'reset1' is assigned a value but never used.","'watch2' is assigned a value but never used.","'reset2' is assigned a value but never used.",["464"],["465"],["466"],["467"],["468"],"Unnecessary escape character: \\&.",["469","470"],["471","472"],"Unnecessary escape character: \\?.",["473","474"],["475"],["476"],["477"],["478"],["479"],["480"],"React Hook useEffect has a missing dependency: 'course_id'. Either include it or remove the dependency array.",["481"],["482"],["483"],["484"],"React Hook useEffect has missing dependencies: 'course_id', 'requestOptions', and 'user_id'. Either include them or remove the dependency array.",["485"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'setShowModalCourseAdded' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'courseName' and 'setValue'. Either include them or remove the dependency array.",["486"],"React Hook useEffect has missing dependencies: 'courseName.courseName' and 'setValue'. Either include them or remove the dependency array.",["487"],["488","489"],["490","491"],["492","493"],"'description' is assigned a value but never used.","'updated_date' is assigned a value but never used.","'language' is assigned a value but never used.","'topics' is assigned a value but never used.","'imageDisplay' is assigned a value but never used.","'setImageDisplay' is assigned a value but never used.","'price' is assigned a value but never used.","'setPrice' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'owner'. Either include it or remove the dependency array.",["494"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'BlackInputWrapper' is assigned a value but never used.",["495"],["496"],{"range":"497","text":"498"},{"range":"499","text":"498"},"React Hook useEffect has a missing dependency: 'id.id.id'. Either include it or remove the dependency array.",["500"],"'Course' is defined but never used.","'actual_price' is assigned a value but never used.","'discounted_price' is assigned a value but never used.","'is_free' is assigned a value but never used.","'edit' is assigned a value but never used.",["501"],"no-global-assign","no-unsafe-negation",[273,279],"\n    .",[304,310],[256,262],[287,293],[244,250],[275,281],{"messageId":"502","fix":"503","desc":"504"},{"messageId":"505","fix":"506","desc":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"512","fix":"514"},{"desc":"512","fix":"515"},{"desc":"512","fix":"516"},{"desc":"510","fix":"517"},{"desc":"512","fix":"518"},{"desc":"512","fix":"519"},{"desc":"512","fix":"520"},{"desc":"512","fix":"521"},{"messageId":"502","fix":"522","desc":"504"},{"messageId":"505","fix":"523","desc":"507"},{"messageId":"502","fix":"524","desc":"504"},{"messageId":"505","fix":"525","desc":"507"},{"messageId":"502","fix":"526","desc":"504"},{"messageId":"505","fix":"527","desc":"507"},{"desc":"510","fix":"528"},{"desc":"512","fix":"529"},{"desc":"512","fix":"530"},{"desc":"512","fix":"531"},{"desc":"512","fix":"532"},{"desc":"508","fix":"533"},{"desc":"534","fix":"535"},{"desc":"534","fix":"536"},{"desc":"534","fix":"537"},{"desc":"534","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"messageId":"502","fix":"545","desc":"504"},{"messageId":"505","fix":"546","desc":"507"},{"messageId":"502","fix":"547","desc":"504"},{"messageId":"505","fix":"548","desc":"507"},{"messageId":"502","fix":"549","desc":"504"},{"messageId":"505","fix":"550","desc":"507"},{"desc":"551","fix":"552"},{"desc":"508","fix":"553"},{"desc":"508","fix":"554"},[323,333],"\n        .",[358,368],{"desc":"555","fix":"556"},{"desc":"551","fix":"557"},"removeEscape",{"range":"558","text":"559"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"560","text":"561"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [requestOptions]",{"range":"562","text":"563"},"Update the dependencies array to be: [requestOptionsStudent]",{"range":"564","text":"565"},"Update the dependencies array to be: [id]",{"range":"566","text":"567"},{"range":"568","text":"567"},{"range":"569","text":"567"},{"range":"570","text":"567"},{"range":"571","text":"565"},{"range":"572","text":"567"},{"range":"573","text":"567"},{"range":"574","text":"567"},{"range":"575","text":"567"},{"range":"576","text":"559"},{"range":"577","text":"561"},{"range":"578","text":"559"},{"range":"579","text":"561"},{"range":"580","text":"559"},{"range":"581","text":"561"},{"range":"582","text":"565"},{"range":"583","text":"567"},{"range":"584","text":"567"},{"range":"585","text":"567"},{"range":"586","text":"567"},{"range":"587","text":"563"},"Update the dependencies array to be: [course_id]",{"range":"588","text":"589"},{"range":"590","text":"589"},{"range":"591","text":"589"},{"range":"592","text":"589"},"Update the dependencies array to be: [course_id, requestOptions, user_id]",{"range":"593","text":"594"},"Update the dependencies array to be: [courseName, setValue]",{"range":"595","text":"596"},"Update the dependencies array to be: [courseName.courseName, setValue]",{"range":"597","text":"598"},{"range":"599","text":"559"},{"range":"600","text":"561"},{"range":"601","text":"559"},{"range":"602","text":"561"},{"range":"603","text":"559"},{"range":"604","text":"561"},"Update the dependencies array to be: [owner]",{"range":"605","text":"606"},{"range":"607","text":"563"},{"range":"608","text":"563"},"Update the dependencies array to be: [id.id.id]",{"range":"609","text":"610"},{"range":"611","text":"606"},[7385,7386],"",[7385,7385],"\\",[1689,1691],"[requestOptions]",[1856,1858],"[requestOptionsStudent]",[2094,2096],"[id]",[2316,2318],[2538,2540],[2744,2746],[2591,2593],[2844,2846],[3066,3068],[3508,3510],[3727,3729],[18507,18508],[18507,18507],[18521,18522],[18521,18521],[18523,18524],[18523,18523],[1852,1854],[2090,2092],[2312,2314],[2534,2536],[2740,2742],[1919,1921],[2162,2164],"[course_id]",[2391,2393],[2621,2623],[2834,2836],[3308,3310],"[course_id, requestOptions, user_id]",[1189,1191],"[courseName, setValue]",[1094,1096],"[courseName.courseName, setValue]",[3769,3770],[3769,3769],[3783,3784],[3783,3783],[3785,3786],[3785,3785],[725,727],"[owner]",[775,777],[790,792],[409,411],"[id.id.id]",[652,654]]